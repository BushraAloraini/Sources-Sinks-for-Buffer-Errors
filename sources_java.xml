<?xml version="1.0"?>

<untrusted-java-sources>
 
<class class-name="java.beans.IndexedPropertyChangeEvent">
<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.beans.PropertyChangeEvent">
<source>
<method-name>getNewValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getNewValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOldValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getOldValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPropagationId</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getPropagationId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPropertyName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPropertyName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.beans.PropertyChangeListenerProxy">
<source>
<method-name>getPropertyName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPropertyName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.beans.PropertyChangeSupport">
<source>
<method-name>getPropertyChangeListeners</method-name>
<return-type>java.beans.PropertyChangeListener[]</return-type>
<method-signature>getPropertyChangeListeners()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPropertyChangeListeners</method-name>
<return-type>java.beans.PropertyChangeListener[]</return-type>
<method-signature>getPropertyChangeListeners(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.ByteArrayOutputStream">
<source>
<method-name>toByteArray</method-name>
<return-type>byte[]</return-type>
<method-signature>toByteArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.Console">
<source>
<method-name>readPassword</method-name>
<return-type>char[]</return-type>
<method-signature>readPassword()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readPassword</method-name>
<return-type>char[]</return-type>
<method-signature>readPassword(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.io.Console</return-type>
<method-signature>format(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>printf</method-name>
<return-type>java.io.Console</return-type>
<method-signature>printf(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>writer</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>writer()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reader</method-name>
<return-type>java.io.Reader</return-type>
<method-signature>reader()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readLine</method-name>
<return-type>java.lang.String</return-type>
<method-signature>readLine()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readLine</method-name>
<return-type>java.lang.String</return-type>
<method-signature>readLine(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

</class>
<class class-name="java.io.File">
<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>createTempFile</method-name>
<return-type>java.io.File</return-type>
<method-signature>createTempFile(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>createTempFile</method-name>
<return-type>java.io.File</return-type>
<method-signature>createTempFile(java.lang.String,java.lang.String,java.io.File)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.lang.String,java.io.File</parameter-type>
</source>

<source>
<method-name>getAbsoluteFile</method-name>
<return-type>java.io.File</return-type>
<method-signature>getAbsoluteFile()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCanonicalFile</method-name>
<return-type>java.io.File</return-type>
<method-signature>getCanonicalFile()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParentFile</method-name>
<return-type>java.io.File</return-type>
<method-signature>getParentFile()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listFiles</method-name>
<return-type>java.io.File[]</return-type>
<method-signature>listFiles()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listFiles</method-name>
<return-type>java.io.File[]</return-type>
<method-signature>listFiles(java.io.FileFilter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listFiles</method-name>
<return-type>java.io.File[]</return-type>
<method-signature>listFiles(java.io.FilenameFilter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listRoots</method-name>
<return-type>java.io.File[]</return-type>
<method-signature>listRoots()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAbsolutePath</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAbsolutePath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCanonicalPath</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCanonicalPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParent</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getParent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPath</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>list</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>list()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>list</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>list(java.io.FilenameFilter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toURI</method-name>
<return-type>java.net.URI</return-type>
<method-signature>toURI()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toURL</method-name>
<return-type>java.net.URL</return-type>
<method-signature>toURL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toPath</method-name>
<return-type>java.nio.file.Path</return-type>
<method-signature>toPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFreeSpace</method-name>
<return-type>long</return-type>
<method-signature>getFreeSpace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTotalSpace</method-name>
<return-type>long</return-type>
<method-signature>getTotalSpace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUsableSpace</method-name>
<return-type>long</return-type>
<method-signature>getUsableSpace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastModified</method-name>
<return-type>long</return-type>
<method-signature>lastModified()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>length</method-name>
<return-type>long</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.FileInputStream">
<source>
<method-name>available</method-name>
<return-type>int</return-type>
<method-signature>available()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>getFD</method-name>
<return-type>java.io.FileDescriptor</return-type>
<method-signature>getFD()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChannel</method-name>
<return-type>java.nio.channels.FileChannel</return-type>
<method-signature>getChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>skip</method-name>
<return-type>long</return-type>
<method-signature>skip(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.FileOutputStream">
<source>
<method-name>getFD</method-name>
<return-type>java.io.FileDescriptor</return-type>
<method-signature>getFD()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChannel</method-name>
<return-type>java.nio.channels.FileChannel</return-type>
<method-signature>getChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.FilePermission">
<source>
<method-name>getActions</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getActions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.FilterInputStream">
<source>
<method-name>available</method-name>
<return-type>int</return-type>
<method-signature>available()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>skip</method-name>
<return-type>long</return-type>
<method-signature>skip(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.InputStream">
<source>
<method-name>available</method-name>
<return-type>int</return-type>
<method-signature>available()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>skip</method-name>
<return-type>long</return-type>
<method-signature>skip(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.InputStreamReader">
<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>getEncoding</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getEncoding()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.InvalidClassException">
<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.ObjectStreamClass">
<source>
<method-name>lookup</method-name>
<return-type>java.io.ObjectStreamClass</return-type>
<method-signature>lookup(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lookupAny</method-name>
<return-type>java.io.ObjectStreamClass</return-type>
<method-signature>lookupAny(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getField</method-name>
<return-type>java.io.ObjectStreamField</return-type>
<method-signature>getField(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFields</method-name>
<return-type>java.io.ObjectStreamField[]</return-type>
<method-signature>getFields()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>forClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>forClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSerialVersionUID</method-name>
<return-type>long</return-type>
<method-signature>getSerialVersionUID()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.ObjectStreamField">
<source>
<method-name>getTypeCode</method-name>
<return-type>char</return-type>
<method-signature>getTypeCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>int</return-type>
<method-signature>getOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTypeString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getTypeString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.OutputStreamWriter">
<source>
<method-name>getEncoding</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getEncoding()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.PrintStream">
<source>
<method-name>append</method-name>
<return-type>java.io.PrintStream</return-type>
<method-signature>append(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.PrintStream</return-type>
<method-signature>append(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.PrintStream</return-type>
<method-signature>append(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.io.PrintStream</return-type>
<method-signature>format(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.io.PrintStream</return-type>
<method-signature>format(java.util.Locale,java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Locale,java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>printf</method-name>
<return-type>java.io.PrintStream</return-type>
<method-signature>printf(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>printf</method-name>
<return-type>java.io.PrintStream</return-type>
<method-signature>printf(java.util.Locale,java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Locale,java.lang.String,java.lang.Object[]</parameter-type>
</source>

</class>
<class class-name="java.io.PrintWriter">
<source>
<method-name>append</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>append(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>append(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>append(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>format(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>format(java.util.Locale,java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Locale,java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>printf</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>printf(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>printf</method-name>
<return-type>java.io.PrintWriter</return-type>
<method-signature>printf(java.util.Locale,java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Locale,java.lang.String,java.lang.Object[]</parameter-type>
</source>

</class>
<class class-name="java.io.RandomAccessFile">
<source>
<method-name>readByte</method-name>
<return-type>byte</return-type>
<method-signature>readByte()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readChar</method-name>
<return-type>char</return-type>
<method-signature>readChar()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readDouble</method-name>
<return-type>double</return-type>
<method-signature>readDouble()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readFloat</method-name>
<return-type>float</return-type>
<method-signature>readFloat()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>readInt</method-name>
<return-type>int</return-type>
<method-signature>readInt()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readUnsignedByte</method-name>
<return-type>int</return-type>
<method-signature>readUnsignedByte()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readUnsignedShort</method-name>
<return-type>int</return-type>
<method-signature>readUnsignedShort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>skipBytes</method-name>
<return-type>int</return-type>
<method-signature>skipBytes(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFD</method-name>
<return-type>java.io.FileDescriptor</return-type>
<method-signature>getFD()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readLine</method-name>
<return-type>java.lang.String</return-type>
<method-signature>readLine()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readUTF</method-name>
<return-type>java.lang.String</return-type>
<method-signature>readUTF()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChannel</method-name>
<return-type>java.nio.channels.FileChannel</return-type>
<method-signature>getChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFilePointer</method-name>
<return-type>long</return-type>
<method-signature>getFilePointer()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>length</method-name>
<return-type>long</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readLong</method-name>
<return-type>long</return-type>
<method-signature>readLong()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readShort</method-name>
<return-type>short</return-type>
<method-signature>readShort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.Reader">
<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>skip</method-name>
<return-type>long</return-type>
<method-signature>skip(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.SerializablePermission">
<source>
<method-name>getActions</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getActions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.StringWriter">
<source>
<method-name>append</method-name>
<return-type>java.io.StringWriter</return-type>
<method-signature>append(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.StringWriter</return-type>
<method-signature>append(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.StringWriter</return-type>
<method-signature>append(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBuffer</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>getBuffer()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.WriteAbortedException">
<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getCause()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.io.Writer">
<source>
<method-name>append</method-name>
<return-type>java.io.Writer</return-type>
<method-signature>append(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.Writer</return-type>
<method-signature>append(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.io.Writer</return-type>
<method-signature>append(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

</class>
<class class-name="java.lang.Boolean">
<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Boolean</return-type>
<method-signature>valueOf(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Boolean</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Byte">
<source>
<method-name>byteValue</method-name>
<return-type>byte</return-type>
<method-signature>byteValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseByte</method-name>
<return-type>byte</return-type>
<method-signature>parseByte(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseByte</method-name>
<return-type>byte</return-type>
<method-signature>parseByte(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decode</method-name>
<return-type>java.lang.Byte</return-type>
<method-signature>decode(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Byte</return-type>
<method-signature>valueOf(byte)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Byte</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Byte</return-type>
<method-signature>valueOf(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(byte)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUnsignedLong</method-name>
<return-type>long</return-type>
<method-signature>toUnsignedLong(byte)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shortValue</method-name>
<return-type>short</return-type>
<method-signature>shortValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Charactere&#36;Subset">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Charactere&#36;UnicodeBlock">
<source>
<method-name>forName</method-name>
<return-type>java.lang.Charactere&#36;UnicodeBlock</return-type>
<method-signature>forName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.lang.Charactere&#36;UnicodeBlock</return-type>
<method-signature>of(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.lang.Charactere&#36;UnicodeBlock</return-type>
<method-signature>of(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Charactere&#36;UnicodeScript">
<source>
<method-name>forName</method-name>
<return-type>java.lang.Charactere&#36;UnicodeScript</return-type>
<method-signature>forName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.lang.Charactere&#36;UnicodeScript</return-type>
<method-signature>of(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Charactere&#36;UnicodeScript</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.lang.Charactere&#36;UnicodeScript[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Character">
<source>
<method-name>getDirectionality</method-name>
<return-type>byte</return-type>
<method-signature>getDirectionality(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDirectionality</method-name>
<return-type>byte</return-type>
<method-signature>getDirectionality(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>charValue</method-name>
<return-type>char</return-type>
<method-signature>charValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>forDigit</method-name>
<return-type>char</return-type>
<method-signature>forDigit(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>highSurrogate</method-name>
<return-type>char</return-type>
<method-signature>highSurrogate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lowSurrogate</method-name>
<return-type>char</return-type>
<method-signature>lowSurrogate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reverseBytes</method-name>
<return-type>char</return-type>
<method-signature>reverseBytes(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLowerCase</method-name>
<return-type>char</return-type>
<method-signature>toLowerCase(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toTitleCase</method-name>
<return-type>char</return-type>
<method-signature>toTitleCase(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUpperCase</method-name>
<return-type>char</return-type>
<method-signature>toUpperCase(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toChars</method-name>
<return-type>char[]</return-type>
<method-signature>toChars(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNumericValue</method-name>
<return-type>int</return-type>
<method-signature>getNumericValue(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNumericValue</method-name>
<return-type>int</return-type>
<method-signature>getNumericValue(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>int</return-type>
<method-signature>getType(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>int</return-type>
<method-signature>getType(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Character</return-type>
<method-signature>valueOf(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Class">
<source>
<method-name>getModifiers</method-name>
<return-type>int</return-type>
<method-signature>getModifiers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResourceAsStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getResourceAsStream(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>asSubclass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>asSubclass(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>forName</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>forName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>forName</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>forName(java.lang.String,boolean,java.lang.ClassLoader)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,boolean,java.lang.ClassLoader</parameter-type>
</source>

<source>
<method-name>getComponentType</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getComponentType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSuperclass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getSuperclass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getClassLoader</method-name>
<return-type>java.lang.ClassLoader</return-type>
<method-signature>getClassLoader()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getClasses</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getClasses()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredClasses</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getDeclaredClasses()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInterfaces</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getInterfaces()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>cast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>cast(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEnumConstants</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>getEnumConstants()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSigners</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>getSigners()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPackage</method-name>
<return-type>java.lang.Package</return-type>
<method-signature>getPackage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCanonicalName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCanonicalName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSimpleName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSimpleName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTypeName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getTypeName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toGenericString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toGenericString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getConstructor</method-name>
<return-type>java.lang.reflect.Constructor</return-type>
<method-signature>getConstructor(java.lang.Class[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredConstructor</method-name>
<return-type>java.lang.reflect.Constructor</return-type>
<method-signature>getDeclaredConstructor(java.lang.Class[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEnclosingConstructor</method-name>
<return-type>java.lang.reflect.Constructor</return-type>
<method-signature>getEnclosingConstructor()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getConstructors</method-name>
<return-type>java.lang.reflect.Constructor[]</return-type>
<method-signature>getConstructors()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredConstructors</method-name>
<return-type>java.lang.reflect.Constructor[]</return-type>
<method-signature>getDeclaredConstructors()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredField</method-name>
<return-type>java.lang.reflect.Field</return-type>
<method-signature>getDeclaredField(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getField</method-name>
<return-type>java.lang.reflect.Field</return-type>
<method-signature>getField(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredFields</method-name>
<return-type>java.lang.reflect.Field[]</return-type>
<method-signature>getDeclaredFields()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFields</method-name>
<return-type>java.lang.reflect.Field[]</return-type>
<method-signature>getFields()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredMethod</method-name>
<return-type>java.lang.reflect.Method</return-type>
<method-signature>getDeclaredMethod(java.lang.String,java.lang.Class[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Class[]</parameter-type>
</source>

<source>
<method-name>getEnclosingMethod</method-name>
<return-type>java.lang.reflect.Method</return-type>
<method-signature>getEnclosingMethod()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMethod</method-name>
<return-type>java.lang.reflect.Method</return-type>
<method-signature>getMethod(java.lang.String,java.lang.Class[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Class[]</parameter-type>
</source>

<source>
<method-name>getDeclaredMethods</method-name>
<return-type>java.lang.reflect.Method[]</return-type>
<method-signature>getDeclaredMethods()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMethods</method-name>
<return-type>java.lang.reflect.Method[]</return-type>
<method-signature>getMethods()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericSuperclass</method-name>
<return-type>java.lang.reflect.Type</return-type>
<method-signature>getGenericSuperclass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTypeParameters</method-name>
<return-type>java.lang.reflect.TypeVariable[]</return-type>
<method-signature>getTypeParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericInterfaces</method-name>
<return-type>java.lang.reflect.Type[]</return-type>
<method-signature>getGenericInterfaces()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResource</method-name>
<return-type>java.net.URL</return-type>
<method-signature>getResource(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProtectionDomain</method-name>
<return-type>java.security.ProtectionDomain</return-type>
<method-signature>getProtectionDomain()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ClassLoader">
<source>
<method-name>getResourceAsStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getResourceAsStream(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSystemResourceAsStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getSystemResourceAsStream(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>defineClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>defineClass(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>defineClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>defineClass(java.lang.String,byte[],int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.lang.String,byte[],int,int</parameter-type>
</source>

<source>
<method-name>defineClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>java.lang.String,byte[],int,int,java.security.ProtectionDomain</parameter-type>
</source>

<source>
<method-name>defineClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain</parameter-type>
</source>

<source>
<method-name>findClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>findClass(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>findLoadedClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>findLoadedClass(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>findSystemClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>findSystemClass(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>loadClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>loadClass(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>loadClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>loadClass(java.lang.String,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,boolean</parameter-type>
</source>

<source>
<method-name>getParent</method-name>
<return-type>java.lang.ClassLoader</return-type>
<method-signature>getParent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSystemClassLoader</method-name>
<return-type>java.lang.ClassLoader</return-type>
<method-signature>getSystemClassLoader()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>definePackage</method-name>
<return-type>java.lang.Package</return-type>
<method-signature>definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)</method-signature>
<parameter-number>8</parameter-number>
<parameter-type>java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL</parameter-type>
</source>

<source>
<method-name>getPackage</method-name>
<return-type>java.lang.Package</return-type>
<method-signature>getPackage(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPackages</method-name>
<return-type>java.lang.Package[]</return-type>
<method-signature>getPackages()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>findLibrary</method-name>
<return-type>java.lang.String</return-type>
<method-signature>findLibrary(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>findResource</method-name>
<return-type>java.net.URL</return-type>
<method-signature>findResource(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResource</method-name>
<return-type>java.net.URL</return-type>
<method-signature>getResource(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSystemResource</method-name>
<return-type>java.net.URL</return-type>
<method-signature>getSystemResource(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>findResources</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>findResources(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResources</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getResources(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSystemResources</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getSystemResources(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ClassNotFoundException">
<source>
<method-name>getCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getCause()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getException</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getException()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Double">
<source>
<method-name>byteValue</method-name>
<return-type>byte</return-type>
<method-signature>byteValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>double</return-type>
<method-signature>max(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>double</return-type>
<method-signature>min(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>parseDouble</method-name>
<return-type>double</return-type>
<method-signature>parseDouble(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>sum</method-name>
<return-type>double</return-type>
<method-signature>sum(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Double</return-type>
<method-signature>valueOf(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Double</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toHexString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toHexString(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleToLongBits</method-name>
<return-type>long</return-type>
<method-signature>doubleToLongBits(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shortValue</method-name>
<return-type>short</return-type>
<method-signature>shortValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Enum">
<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Enum)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ordinal</method-name>
<return-type>int</return-type>
<method-signature>ordinal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaringClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getDeclaringClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Enum</return-type>
<method-signature>valueOf(java.lang.Class,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Class,java.lang.String</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>name</method-name>
<return-type>java.lang.String</return-type>
<method-signature>name()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ExceptionInInitializerError">
<source>
<method-name>getCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getCause()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getException</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getException()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Float">
<source>
<method-name>byteValue</method-name>
<return-type>byte</return-type>
<method-signature>byteValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>float</return-type>
<method-signature>max(float,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,float</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>float</return-type>
<method-signature>min(float,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,float</parameter-type>
</source>

<source>
<method-name>parseFloat</method-name>
<return-type>float</return-type>
<method-signature>parseFloat(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>sum</method-name>
<return-type>float</return-type>
<method-signature>sum(float,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,float</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Float</return-type>
<method-signature>valueOf(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Float</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toHexString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toHexString(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shortValue</method-name>
<return-type>short</return-type>
<method-signature>shortValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Integer">
<source>
<method-name>byteValue</method-name>
<return-type>byte</return-type>
<method-signature>byteValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decode</method-name>
<return-type>java.lang.Integer</return-type>
<method-signature>decode(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInteger</method-name>
<return-type>java.lang.Integer</return-type>
<method-signature>getInteger(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInteger</method-name>
<return-type>java.lang.Integer</return-type>
<method-signature>getInteger(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>getInteger</method-name>
<return-type>java.lang.Integer</return-type>
<method-signature>getInteger(java.lang.String,java.lang.Integer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Integer</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Integer</return-type>
<method-signature>valueOf(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Integer</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Integer</return-type>
<method-signature>valueOf(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>toBinaryString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toBinaryString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toHexString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toHexString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toOctalString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toOctalString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>toUnsignedString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toUnsignedString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUnsignedString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toUnsignedString(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUnsignedLong</method-name>
<return-type>long</return-type>
<method-signature>toUnsignedLong(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shortValue</method-name>
<return-type>short</return-type>
<method-signature>shortValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Long">
<source>
<method-name>byteValue</method-name>
<return-type>byte</return-type>
<method-signature>byteValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decode</method-name>
<return-type>java.lang.Long</return-type>
<method-signature>decode(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>java.lang.Long</return-type>
<method-signature>getLong(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>java.lang.Long</return-type>
<method-signature>getLong(java.lang.String,java.lang.Long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Long</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>java.lang.Long</return-type>
<method-signature>getLong(java.lang.String,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,long</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Long</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Long</return-type>
<method-signature>valueOf(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Long</return-type>
<method-signature>valueOf(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toBinaryString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toBinaryString(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toHexString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toHexString(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toOctalString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toOctalString(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(long,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,int</parameter-type>
</source>

<source>
<method-name>toUnsignedString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toUnsignedString(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUnsignedString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toUnsignedString(long,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,int</parameter-type>
</source>

<source>
<method-name>divideUnsigned</method-name>
<return-type>long</return-type>
<method-signature>divideUnsigned(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>highestOneBit</method-name>
<return-type>long</return-type>
<method-signature>highestOneBit(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lowestOneBit</method-name>
<return-type>long</return-type>
<method-signature>lowestOneBit(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>long</return-type>
<method-signature>max(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>long</return-type>
<method-signature>min(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>parseLong</method-name>
<return-type>long</return-type>
<method-signature>parseLong(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseLong</method-name>
<return-type>long</return-type>
<method-signature>parseLong(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>parseUnsignedLong</method-name>
<return-type>long</return-type>
<method-signature>parseUnsignedLong(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseUnsignedLong</method-name>
<return-type>long</return-type>
<method-signature>parseUnsignedLong(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>remainderUnsigned</method-name>
<return-type>long</return-type>
<method-signature>remainderUnsigned(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>reverse</method-name>
<return-type>long</return-type>
<method-signature>reverse(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reverseBytes</method-name>
<return-type>long</return-type>
<method-signature>reverseBytes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>rotateLeft</method-name>
<return-type>long</return-type>
<method-signature>rotateLeft(long,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,int</parameter-type>
</source>

<source>
<method-name>rotateRight</method-name>
<return-type>long</return-type>
<method-signature>rotateRight(long,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,int</parameter-type>
</source>

<source>
<method-name>sum</method-name>
<return-type>long</return-type>
<method-signature>sum(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>shortValue</method-name>
<return-type>short</return-type>
<method-signature>shortValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Math">
<source>
<method-name>abs</method-name>
<return-type>double</return-type>
<method-signature>abs(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>copySign</method-name>
<return-type>double</return-type>
<method-signature>copySign(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>double</return-type>
<method-signature>max(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>double</return-type>
<method-signature>min(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>nextAfter</method-name>
<return-type>double</return-type>
<method-signature>nextAfter(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>nextDown</method-name>
<return-type>double</return-type>
<method-signature>nextDown(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextUp</method-name>
<return-type>double</return-type>
<method-signature>nextUp(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>random</method-name>
<return-type>double</return-type>
<method-signature>random()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>scalb</method-name>
<return-type>double</return-type>
<method-signature>scalb(double,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,int</parameter-type>
</source>

<source>
<method-name>signum</method-name>
<return-type>double</return-type>
<method-signature>signum(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toDegrees</method-name>
<return-type>double</return-type>
<method-signature>toDegrees(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toRadians</method-name>
<return-type>double</return-type>
<method-signature>toRadians(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ulp</method-name>
<return-type>double</return-type>
<method-signature>ulp(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>abs</method-name>
<return-type>float</return-type>
<method-signature>abs(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>copySign</method-name>
<return-type>float</return-type>
<method-signature>copySign(float,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,float</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>float</return-type>
<method-signature>max(float,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,float</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>float</return-type>
<method-signature>min(float,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,float</parameter-type>
</source>

<source>
<method-name>nextAfter</method-name>
<return-type>float</return-type>
<method-signature>nextAfter(float,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,double</parameter-type>
</source>

<source>
<method-name>nextDown</method-name>
<return-type>float</return-type>
<method-signature>nextDown(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextUp</method-name>
<return-type>float</return-type>
<method-signature>nextUp(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>scalb</method-name>
<return-type>float</return-type>
<method-signature>scalb(float,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>float,int</parameter-type>
</source>

<source>
<method-name>signum</method-name>
<return-type>float</return-type>
<method-signature>signum(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ulp</method-name>
<return-type>float</return-type>
<method-signature>ulp(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExponent</method-name>
<return-type>int</return-type>
<method-signature>getExponent(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExponent</method-name>
<return-type>int</return-type>
<method-signature>getExponent(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>abs</method-name>
<return-type>long</return-type>
<method-signature>abs(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>addExact</method-name>
<return-type>long</return-type>
<method-signature>addExact(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>decrementExact</method-name>
<return-type>long</return-type>
<method-signature>decrementExact(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floorDiv</method-name>
<return-type>long</return-type>
<method-signature>floorDiv(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>floorMod</method-name>
<return-type>long</return-type>
<method-signature>floorMod(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>incrementExact</method-name>
<return-type>long</return-type>
<method-signature>incrementExact(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>long</return-type>
<method-signature>max(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>long</return-type>
<method-signature>min(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>multiplyExact</method-name>
<return-type>long</return-type>
<method-signature>multiplyExact(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>negateExact</method-name>
<return-type>long</return-type>
<method-signature>negateExact(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>round</method-name>
<return-type>long</return-type>
<method-signature>round(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subtractExact</method-name>
<return-type>long</return-type>
<method-signature>subtractExact(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

</class>
<class class-name="java.lang.Number">
<source>
<method-name>byteValue</method-name>
<return-type>byte</return-type>
<method-signature>byteValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shortValue</method-name>
<return-type>short</return-type>
<method-signature>shortValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Object">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Package">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPackage</method-name>
<return-type>java.lang.Package</return-type>
<method-signature>getPackage(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPackages</method-name>
<return-type>java.lang.Package[]</return-type>
<method-signature>getPackages()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getImplementationTitle</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getImplementationTitle()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getImplementationVendor</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getImplementationVendor()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getImplementationVersion</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getImplementationVersion()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSpecificationTitle</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSpecificationTitle()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSpecificationVendor</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSpecificationVendor()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSpecificationVersion</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSpecificationVersion()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getDeclaredAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Process">
<source>
<method-name>destroyForcibly</method-name>
<return-type>java.lang.Process</return-type>
<method-signature>destroyForcibly()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ProcessBuildere&#36;Redirecte&#36;Type">
<source>
<method-name>valueOf</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirecte&#36;Type</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirecte&#36;Type[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ProcessBuildere&#36;Redirect">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>file</method-name>
<return-type>java.io.File</return-type>
<method-signature>file()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>appendTo</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirect</return-type>
<method-signature>appendTo(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirect</return-type>
<method-signature>from(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>to</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirect</return-type>
<method-signature>to(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ProcessBuilder">
<source>
<method-name>directory</method-name>
<return-type>java.io.File</return-type>
<method-signature>directory()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>command</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>command(java.lang.String[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>command</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>command(java.util.List)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>directory</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>directory(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>inheritIO</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>inheritIO()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectError</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>redirectError(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectError</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>redirectError(java.lang.ProcessBuildere&#36;Redirect)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectErrorStream</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>redirectErrorStream(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectInput</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>redirectInput(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectInput</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>redirectInput(java.lang.ProcessBuildere&#36;Redirect)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectOutput</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>redirectOutput(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectOutput</method-name>
<return-type>java.lang.ProcessBuilder</return-type>
<method-signature>redirectOutput(java.lang.ProcessBuildere&#36;Redirect)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectError</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirect</return-type>
<method-signature>redirectError()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectInput</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirect</return-type>
<method-signature>redirectInput()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>redirectOutput</method-name>
<return-type>java.lang.ProcessBuildere&#36;Redirect</return-type>
<method-signature>redirectOutput()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>command</method-name>
<return-type>java.util.List</return-type>
<method-signature>command()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>environment</method-name>
<return-type>java.util.Map</return-type>
<method-signature>environment()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Runtime">
<source>
<method-name>availableProcessors</method-name>
<return-type>int</return-type>
<method-signature>availableProcessors()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalizedInputStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getLocalizedInputStream(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalizedOutputStream</method-name>
<return-type>java.io.OutputStream</return-type>
<method-signature>getLocalizedOutputStream(java.io.OutputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>exec</method-name>
<return-type>java.lang.Process</return-type>
<method-signature>exec(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>exec</method-name>
<return-type>java.lang.Process</return-type>
<method-signature>exec(java.lang.String,java.lang.String[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String[]</parameter-type>
</source>

<source>
<method-name>exec</method-name>
<return-type>java.lang.Process</return-type>
<method-signature>exec(java.lang.String,java.lang.String[],java.io.File)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.lang.String[],java.io.File</parameter-type>
</source>

<source>
<method-name>exec</method-name>
<return-type>java.lang.Process</return-type>
<method-signature>exec(java.lang.String[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>exec</method-name>
<return-type>java.lang.Process</return-type>
<method-signature>exec(java.lang.String[],java.lang.String[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String[],java.lang.String[]</parameter-type>
</source>

<source>
<method-name>exec</method-name>
<return-type>java.lang.Process</return-type>
<method-signature>exec(java.lang.String[],java.lang.String[],java.io.File)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String[],java.lang.String[],java.io.File</parameter-type>
</source>

<source>
<method-name>getRuntime</method-name>
<return-type>java.lang.Runtime</return-type>
<method-signature>getRuntime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.RuntimePermission">
<source>
<method-name>getActions</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getActions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.SecurityManager">
<source>
<method-name>classDepth</method-name>
<return-type>int</return-type>
<method-signature>classDepth(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>classLoaderDepth</method-name>
<return-type>int</return-type>
<method-signature>classLoaderDepth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>currentLoadedClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>currentLoadedClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>currentClassLoader</method-name>
<return-type>java.lang.ClassLoader</return-type>
<method-signature>currentClassLoader()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getClassContext</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getClassContext()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecurityContext</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getSecurityContext()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getThreadGroup</method-name>
<return-type>java.lang.ThreadGroup</return-type>
<method-signature>getThreadGroup()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Short">
<source>
<method-name>byteValue</method-name>
<return-type>byte</return-type>
<method-signature>byteValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decode</method-name>
<return-type>java.lang.Short</return-type>
<method-signature>decode(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Short</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Short</return-type>
<method-signature>valueOf(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Short</return-type>
<method-signature>valueOf(short)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(short)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUnsignedLong</method-name>
<return-type>long</return-type>
<method-signature>toUnsignedLong(short)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseShort</method-name>
<return-type>short</return-type>
<method-signature>parseShort(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseShort</method-name>
<return-type>short</return-type>
<method-signature>parseShort(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>reverseBytes</method-name>
<return-type>short</return-type>
<method-signature>reverseBytes(short)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shortValue</method-name>
<return-type>short</return-type>
<method-signature>shortValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.StackTraceElement">
<source>
<method-name>getLineNumber</method-name>
<return-type>int</return-type>
<method-signature>getLineNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getClassName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getClassName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFileName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFileName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMethodName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMethodName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.String">
<source>
<method-name>getBytes</method-name>
<return-type>byte[]</return-type>
<method-signature>getBytes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBytes</method-name>
<return-type>byte[]</return-type>
<method-signature>getBytes(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBytes</method-name>
<return-type>byte[]</return-type>
<method-signature>getBytes(java.nio.charset.Charset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subSequence</method-name>
<return-type>java.lang.CharSequence</return-type>
<method-signature>subSequence(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>copyValueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>copyValueOf(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>copyValueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>copyValueOf(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.util.Locale,java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Locale,java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>join</method-name>
<return-type>java.lang.String</return-type>
<method-signature>join(java.lang.CharSequence,java.lang.CharSequence[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.lang.CharSequence[]</parameter-type>
</source>

<source>
<method-name>join</method-name>
<return-type>java.lang.String</return-type>
<method-signature>join(java.lang.CharSequence,java.lang.Iterable)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.lang.Iterable</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.String</return-type>
<method-signature>replace(char,char)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>char,char</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.String</return-type>
<method-signature>replace(java.lang.CharSequence,java.lang.CharSequence)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.lang.CharSequence</parameter-type>
</source>

<source>
<method-name>replaceAll</method-name>
<return-type>java.lang.String</return-type>
<method-signature>replaceAll(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>replaceFirst</method-name>
<return-type>java.lang.String</return-type>
<method-signature>replaceFirst(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>substring</method-name>
<return-type>java.lang.String</return-type>
<method-signature>substring(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>substring</method-name>
<return-type>java.lang.String</return-type>
<method-signature>substring(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>toLowerCase</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toLowerCase()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLowerCase</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toLowerCase(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUpperCase</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toUpperCase()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toUpperCase</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toUpperCase(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>trim</method-name>
<return-type>java.lang.String</return-type>
<method-signature>trim()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.lang.String</return-type>
<method-signature>valueOf(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>split</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>split(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>split</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>split(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>getBytes</method-name>
<return-type>void</return-type>
<method-signature>getBytes(int,int,byte[],int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,int,byte[],int</parameter-type>
</source>

<source>
<method-name>getChars</method-name>
<return-type>void</return-type>
<method-signature>getChars(int,int,char[],int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,int,char[],int</parameter-type>
</source>

</class>
<class class-name="java.lang.StringBuffer">
<source>
<method-name>charAt</method-name>
<return-type>char</return-type>
<method-signature>charAt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subSequence</method-name>
<return-type>java.lang.CharSequence</return-type>
<method-signature>subSequence(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>substring</method-name>
<return-type>java.lang.String</return-type>
<method-signature>substring(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>substring</method-name>
<return-type>java.lang.String</return-type>
<method-signature>substring(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(java.lang.StringBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>append(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>appendCodePoint</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>appendCodePoint(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>delete</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>delete(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>deleteCharAt</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>deleteCharAt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,boolean</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,char)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,char</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,char[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,char[]</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,char[],int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,char[],int,int</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,double</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,float</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,java.lang.CharSequence)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.CharSequence</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,java.lang.CharSequence,int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.String</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>insert(int,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,long</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>replace(int,int,java.lang.String)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,java.lang.String</parameter-type>
</source>

<source>
<method-name>reverse</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>reverse()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChars</method-name>
<return-type>void</return-type>
<method-signature>getChars(int,int,char[],int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,int,char[],int</parameter-type>
</source>

</class>
<class class-name="java.lang.StringBuilder">
<source>
<method-name>charAt</method-name>
<return-type>char</return-type>
<method-signature>charAt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subSequence</method-name>
<return-type>java.lang.CharSequence</return-type>
<method-signature>subSequence(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>substring</method-name>
<return-type>java.lang.String</return-type>
<method-signature>substring(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>substring</method-name>
<return-type>java.lang.String</return-type>
<method-signature>substring(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(float)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(java.lang.StringBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>append(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>appendCodePoint</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>appendCodePoint(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>delete</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>delete(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>deleteCharAt</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>deleteCharAt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,boolean</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,char)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,char</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,char[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,char[]</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,char[],int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,char[],int,int</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,double</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,float)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,float</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,java.lang.CharSequence)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.CharSequence</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,java.lang.CharSequence,int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.String</parameter-type>
</source>

<source>
<method-name>insert</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>insert(int,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,long</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>replace(int,int,java.lang.String)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,java.lang.String</parameter-type>
</source>

<source>
<method-name>reverse</method-name>
<return-type>java.lang.StringBuilder</return-type>
<method-signature>reverse()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChars</method-name>
<return-type>void</return-type>
<method-signature>getChars(int,int,char[],int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,int,char[],int</parameter-type>
</source>

</class>
<class class-name="java.lang.System">
<source>
<method-name>console</method-name>
<return-type>java.io.Console</return-type>
<method-signature>console()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecurityManager</method-name>
<return-type>java.lang.SecurityManager</return-type>
<method-signature>getSecurityManager()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clearProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>clearProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProperty(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getenv</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getenv(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lineSeparator</method-name>
<return-type>java.lang.String</return-type>
<method-signature>lineSeparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>inheritedChannel</method-name>
<return-type>java.nio.channels.Channel</return-type>
<method-signature>inheritedChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getenv</method-name>
<return-type>java.util.Map</return-type>
<method-signature>getenv()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProperties</method-name>
<return-type>java.util.Properties</return-type>
<method-signature>getProperties()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Threade&#36;State">
<source>
<method-name>valueOf</method-name>
<return-type>java.lang.Threade&#36;State</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.lang.Threade&#36;State[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Thread">
<source>
<method-name>countStackFrames</method-name>
<return-type>int</return-type>
<method-signature>countStackFrames()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPriority</method-name>
<return-type>int</return-type>
<method-signature>getPriority()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContextClassLoader</method-name>
<return-type>java.lang.ClassLoader</return-type>
<method-signature>getContextClassLoader()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getStackTrace</method-name>
<return-type>java.lang.StackTraceElement[]</return-type>
<method-signature>getStackTrace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getState</method-name>
<return-type>java.lang.Threade&#36;State</return-type>
<method-signature>getState()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultUncaughtExceptionHandler</method-name>
<return-type>java.lang.Threade&#36;UncaughtExceptionHandler</return-type>
<method-signature>getDefaultUncaughtExceptionHandler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUncaughtExceptionHandler</method-name>
<return-type>java.lang.Threade&#36;UncaughtExceptionHandler</return-type>
<method-signature>getUncaughtExceptionHandler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getThreadGroup</method-name>
<return-type>java.lang.ThreadGroup</return-type>
<method-signature>getThreadGroup()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAllStackTraces</method-name>
<return-type>java.util.Map</return-type>
<method-signature>getAllStackTraces()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getId</method-name>
<return-type>long</return-type>
<method-signature>getId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ThreadGroup">
<source>
<method-name>activeCount</method-name>
<return-type>int</return-type>
<method-signature>activeCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>activeGroupCount</method-name>
<return-type>int</return-type>
<method-signature>activeGroupCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>enumerate</method-name>
<return-type>int</return-type>
<method-signature>enumerate(java.lang.ThreadGroup[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>enumerate</method-name>
<return-type>int</return-type>
<method-signature>enumerate(java.lang.ThreadGroup[],boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.ThreadGroup[],boolean</parameter-type>
</source>

<source>
<method-name>enumerate</method-name>
<return-type>int</return-type>
<method-signature>enumerate(java.lang.Thread[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>enumerate</method-name>
<return-type>int</return-type>
<method-signature>enumerate(java.lang.Thread[],boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Thread[],boolean</parameter-type>
</source>

<source>
<method-name>getMaxPriority</method-name>
<return-type>int</return-type>
<method-signature>getMaxPriority()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParent</method-name>
<return-type>java.lang.ThreadGroup</return-type>
<method-signature>getParent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ThreadLocal">
<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>initialValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>initialValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withInitial</method-name>
<return-type>java.lang.ThreadLocal</return-type>
<method-signature>withInitial(java.util.function.Supplier)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.Throwable">
<source>
<method-name>getStackTrace</method-name>
<return-type>java.lang.StackTraceElement[]</return-type>
<method-signature>getStackTrace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalizedMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getLocalizedMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>fillInStackTrace</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>fillInStackTrace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getCause()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>initCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>initCause(java.lang.Throwable)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSuppressed</method-name>
<return-type>java.lang.Throwable[]</return-type>
<method-signature>getSuppressed()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.annotation.ElementType">
<source>
<method-name>valueOf</method-name>
<return-type>java.lang.annotation.ElementType</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.lang.annotation.ElementType[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.annotation.RetentionPolicy">
<source>
<method-name>valueOf</method-name>
<return-type>java.lang.annotation.RetentionPolicy</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.lang.annotation.RetentionPolicy[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.ref.Reference">
<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.AccessibleObject">
<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getDeclaredAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.Array">
<source>
<method-name>getByte</method-name>
<return-type>byte</return-type>
<method-signature>getByte(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>getChar</method-name>
<return-type>char</return-type>
<method-signature>getChar(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>getDouble</method-name>
<return-type>double</return-type>
<method-signature>getDouble(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>getFloat</method-name>
<return-type>float</return-type>
<method-signature>getFloat(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>getInt</method-name>
<return-type>int</return-type>
<method-signature>getInt(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>getLength</method-name>
<return-type>int</return-type>
<method-signature>getLength(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>newInstance</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>newInstance(java.lang.Class,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Class,int</parameter-type>
</source>

<source>
<method-name>newInstance</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>newInstance(java.lang.Class,int[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Class,int[]</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>getShort</method-name>
<return-type>short</return-type>
<method-signature>getShort(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.Constructor">
<source>
<method-name>getModifiers</method-name>
<return-type>int</return-type>
<method-signature>getModifiers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterCount</method-name>
<return-type>int</return-type>
<method-signature>getParameterCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaringClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getDeclaringClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExceptionTypes</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getExceptionTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterTypes</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getParameterTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newInstance</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>newInstance(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toGenericString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toGenericString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[][]</return-type>
<method-signature>getParameterAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTypeParameters</method-name>
<return-type>java.lang.reflect.TypeVariable[]</return-type>
<method-signature>getTypeParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericExceptionTypes</method-name>
<return-type>java.lang.reflect.Type[]</return-type>
<method-signature>getGenericExceptionTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericParameterTypes</method-name>
<return-type>java.lang.reflect.Type[]</return-type>
<method-signature>getGenericParameterTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.Executable">
<source>
<method-name>getParameterCount</method-name>
<return-type>int</return-type>
<method-signature>getParameterCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameters</method-name>
<return-type>java.lang.reflect.Parameter[]</return-type>
<method-signature>getParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericExceptionTypes</method-name>
<return-type>java.lang.reflect.Type[]</return-type>
<method-signature>getGenericExceptionTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericParameterTypes</method-name>
<return-type>java.lang.reflect.Type[]</return-type>
<method-signature>getGenericParameterTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.Field">
<source>
<method-name>getByte</method-name>
<return-type>byte</return-type>
<method-signature>getByte(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChar</method-name>
<return-type>char</return-type>
<method-signature>getChar(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDouble</method-name>
<return-type>double</return-type>
<method-signature>getDouble(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFloat</method-name>
<return-type>float</return-type>
<method-signature>getFloat(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInt</method-name>
<return-type>int</return-type>
<method-signature>getInt(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getModifiers</method-name>
<return-type>int</return-type>
<method-signature>getModifiers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaringClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getDeclaringClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toGenericString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toGenericString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericType</method-name>
<return-type>java.lang.reflect.Type</return-type>
<method-signature>getGenericType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getShort</method-name>
<return-type>short</return-type>
<method-signature>getShort(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.InvocationTargetException">
<source>
<method-name>getCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getCause()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTargetException</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getTargetException()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.Method">
<source>
<method-name>getModifiers</method-name>
<return-type>int</return-type>
<method-signature>getModifiers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterCount</method-name>
<return-type>int</return-type>
<method-signature>getParameterCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaringClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getDeclaringClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getreturn-type</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getreturn-type()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExceptionTypes</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getExceptionTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterTypes</method-name>
<return-type>java.lang.Class[]</return-type>
<method-signature>getParameterTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getDefaultValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toGenericString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toGenericString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[][]</return-type>
<method-signature>getParameterAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericreturn-type</method-name>
<return-type>java.lang.reflect.Type</return-type>
<method-signature>getGenericreturn-type()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTypeParameters</method-name>
<return-type>java.lang.reflect.TypeVariable[]</return-type>
<method-signature>getTypeParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericExceptionTypes</method-name>
<return-type>java.lang.reflect.Type[]</return-type>
<method-signature>getGenericExceptionTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenericParameterTypes</method-name>
<return-type>java.lang.reflect.Type[]</return-type>
<method-signature>getGenericParameterTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.Parameter">
<source>
<method-name>getModifiers</method-name>
<return-type>int</return-type>
<method-signature>getModifiers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotation</method-name>
<return-type>java.lang.annotation.Annotation</return-type>
<method-signature>getDeclaredAnnotation(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotations</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotations()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaredAnnotationsByType</method-name>
<return-type>java.lang.annotation.Annotation[]</return-type>
<method-signature>getDeclaredAnnotationsByType(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDeclaringExecutable</method-name>
<return-type>java.lang.reflect.Executable</return-type>
<method-signature>getDeclaringExecutable()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterizedType</method-name>
<return-type>java.lang.reflect.Type</return-type>
<method-signature>getParameterizedType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.Proxy">
<source>
<method-name>getProxyClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getProxyClass(java.lang.ClassLoader,java.lang.Class[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.ClassLoader,java.lang.Class[]</parameter-type>
</source>

<source>
<method-name>newProxyInstance</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler</parameter-type>
</source>

<source>
<method-name>getInvocationHandler</method-name>
<return-type>java.lang.reflect.InvocationHandler</return-type>
<method-signature>getInvocationHandler(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.lang.reflect.UndeclaredThrowableException">
<source>
<method-name>getCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getCause()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUndeclaredThrowable</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getUndeclaredThrowable()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.math.BigDecimal">
<source>
<method-name>byteValueExact</method-name>
<return-type>byte</return-type>
<method-signature>byteValueExact()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>intValue</method-name>
<return-type>int</return-type>
<method-signature>intValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>intValueExact</method-name>
<return-type>int</return-type>
<method-signature>intValueExact()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>precision</method-name>
<return-type>int</return-type>
<method-signature>precision()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>scale</method-name>
<return-type>int</return-type>
<method-signature>scale()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>signum</method-name>
<return-type>int</return-type>
<method-signature>signum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toEngineeringString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toEngineeringString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toPlainString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toPlainString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>abs</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>abs()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>abs</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>abs(java.math.MathContext)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>add</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>add(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>add</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>add(java.math.BigDecimal,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>divide</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divide(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>divide</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divide(java.math.BigDecimal,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,int</parameter-type>
</source>

<source>
<method-name>divide</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divide(java.math.BigDecimal,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.math.BigDecimal,int,int</parameter-type>
</source>

<source>
<method-name>divide</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divide(java.math.BigDecimal,int,java.math.RoundingMode)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.math.BigDecimal,int,java.math.RoundingMode</parameter-type>
</source>

<source>
<method-name>divide</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divide(java.math.BigDecimal,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>divide</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divide(java.math.BigDecimal,java.math.RoundingMode)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.RoundingMode</parameter-type>
</source>

<source>
<method-name>divideToIntegralValue</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divideToIntegralValue(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>divideToIntegralValue</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>max(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>min(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>movePointLeft</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>movePointLeft(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>movePointRight</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>movePointRight(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>multiply</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>multiply(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>multiply</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>multiply(java.math.BigDecimal,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>negate</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>negate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>negate</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>negate(java.math.MathContext)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>plus()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>plus(java.math.MathContext)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pow</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>pow(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pow</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>pow(int,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>remainder</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>remainder(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remainder</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>remainder(java.math.BigDecimal,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>round</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>round(java.math.MathContext)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>scaleByPowerOfTen</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>scaleByPowerOfTen(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setScale</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>setScale(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setScale</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>setScale(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>setScale</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>setScale(int,java.math.RoundingMode)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.math.RoundingMode</parameter-type>
</source>

<source>
<method-name>stripTrailingZeros</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>stripTrailingZeros()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subtract</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>subtract(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subtract</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>subtract(java.math.BigDecimal,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>ulp</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>ulp()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>valueOf(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>valueOf(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.math.BigDecimal</return-type>
<method-signature>valueOf(long,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,int</parameter-type>
</source>

<source>
<method-name>divideAndRemainder</method-name>
<return-type>java.math.BigDecimal[]</return-type>
<method-signature>divideAndRemainder(java.math.BigDecimal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>divideAndRemainder</method-name>
<return-type>java.math.BigDecimal[]</return-type>
<method-signature>divideAndRemainder(java.math.BigDecimal,java.math.MathContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigDecimal,java.math.MathContext</parameter-type>
</source>

<source>
<method-name>toBigInteger</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>toBigInteger()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toBigIntegerExact</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>toBigIntegerExact()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>unscaledValue</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>unscaledValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValueExact</method-name>
<return-type>long</return-type>
<method-signature>longValueExact()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shortValueExact</method-name>
<return-type>short</return-type>
<method-signature>shortValueExact()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.math.BigInteger">
<source>
<method-name>toByteArray</method-name>
<return-type>byte[]</return-type>
<method-signature>toByteArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>bitCount</method-name>
<return-type>int</return-type>
<method-signature>bitCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>bitLength</method-name>
<return-type>int</return-type>
<method-signature>bitLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLowestSetBit</method-name>
<return-type>int</return-type>
<method-signature>getLowestSetBit()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>intValue</method-name>
<return-type>int</return-type>
<method-signature>intValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>signum</method-name>
<return-type>int</return-type>
<method-signature>signum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>abs</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>abs()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>add</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>add(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>and</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>and(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>andNot</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>andNot(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clearBit</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>clearBit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>divide</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>divide(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>flipBit</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>flipBit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>gcd</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>gcd(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>max</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>max(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>min</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>min(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>mod</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>mod(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>modInverse</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>modInverse(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>modPow</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>modPow(java.math.BigInteger,java.math.BigInteger)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.math.BigInteger,java.math.BigInteger</parameter-type>
</source>

<source>
<method-name>multiply</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>multiply(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>negate</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>negate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextProbablePrime</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>nextProbablePrime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>not</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>not()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>or</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>or(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pow</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>pow(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>probablePrime</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>probablePrime(int,java.util.Random)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.util.Random</parameter-type>
</source>

<source>
<method-name>remainder</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>remainder(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setBit</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>setBit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shiftLeft</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>shiftLeft(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shiftRight</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>shiftRight(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subtract</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>subtract(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>valueOf(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>xor</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>xor(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>divideAndRemainder</method-name>
<return-type>java.math.BigInteger[]</return-type>
<method-signature>divideAndRemainder(java.math.BigInteger)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.math.MathContext">
<source>
<method-name>getPrecision</method-name>
<return-type>int</return-type>
<method-signature>getPrecision()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRoundingMode</method-name>
<return-type>java.math.RoundingMode</return-type>
<method-signature>getRoundingMode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.math.RoundingMode">
<source>
<method-name>valueOf</method-name>
<return-type>java.math.RoundingMode</return-type>
<method-signature>valueOf(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.math.RoundingMode</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.math.RoundingMode[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.Authenticatore&#36;RequestorType">
<source>
<method-name>valueOf</method-name>
<return-type>java.net.Authenticatore&#36;RequestorType</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.net.Authenticatore&#36;RequestorType[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.Authenticator">
<source>
<method-name>getRequestingPort</method-name>
<return-type>int</return-type>
<method-signature>getRequestingPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestingHost</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRequestingHost()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestingPrompt</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRequestingPrompt()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestingProtocol</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRequestingProtocol()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestingScheme</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRequestingScheme()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestorType</method-name>
<return-type>java.net.Authenticatore&#36;RequestorType</return-type>
<method-signature>getRequestorType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestingSite</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getRequestingSite()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPasswordAuthentication</method-name>
<return-type>java.net.PasswordAuthentication</return-type>
<method-signature>getPasswordAuthentication()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>requestPasswordAuthentication</method-name>
<return-type>java.net.PasswordAuthentication</return-type>
<method-signature>requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)</method-signature>
<parameter-number>6</parameter-number>
<parameter-type>java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>requestPasswordAuthentication</method-name>
<return-type>java.net.PasswordAuthentication</return-type>
<method-signature>requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticatore&#36;RequestorType)</method-signature>
<parameter-number>8</parameter-number>
<parameter-type>java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticatore&#36;RequestorType</parameter-type>
</source>

<source>
<method-name>requestPasswordAuthentication</method-name>
<return-type>java.net.PasswordAuthentication</return-type>
<method-signature>requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getRequestingURL</method-name>
<return-type>java.net.URL</return-type>
<method-signature>getRequestingURL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.ContentHandler">
<source>
<method-name>getContent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getContent(java.net.URLConnection,java.lang.Class[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.net.URLConnection,java.lang.Class[]</parameter-type>
</source>

</class>
<class class-name="java.net.CookieHandler">
<source>
<method-name>getDefault</method-name>
<return-type>java.net.CookieHandler</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.DatagramPacket">
<source>
<method-name>getData</method-name>
<return-type>byte[]</return-type>
<method-signature>getData()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLength</method-name>
<return-type>int</return-type>
<method-signature>getLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>int</return-type>
<method-signature>getOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPort</method-name>
<return-type>int</return-type>
<method-signature>getPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSocketAddress</method-name>
<return-type>java.net.SocketAddress</return-type>
<method-signature>getSocketAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.DatagramSocket">
<source>
<method-name>getLocalPort</method-name>
<return-type>int</return-type>
<method-signature>getLocalPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPort</method-name>
<return-type>int</return-type>
<method-signature>getPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReceiveBufferSize</method-name>
<return-type>int</return-type>
<method-signature>getReceiveBufferSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSendBufferSize</method-name>
<return-type>int</return-type>
<method-signature>getSendBufferSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSoTimeout</method-name>
<return-type>int</return-type>
<method-signature>getSoTimeout()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTrafficClass</method-name>
<return-type>int</return-type>
<method-signature>getTrafficClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInetAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getInetAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getLocalAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalSocketAddress</method-name>
<return-type>java.net.SocketAddress</return-type>
<method-signature>getLocalSocketAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRemoteSocketAddress</method-name>
<return-type>java.net.SocketAddress</return-type>
<method-signature>getRemoteSocketAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChannel</method-name>
<return-type>java.nio.channels.DatagramChannel</return-type>
<method-signature>getChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.DatagramSocketImpl">
<source>
<method-name>getLocalPort</method-name>
<return-type>int</return-type>
<method-signature>getLocalPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFileDescriptor</method-name>
<return-type>java.io.FileDescriptor</return-type>
<method-signature>getFileDescriptor()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.HttpRetryException">
<source>
<method-name>responseCode</method-name>
<return-type>int</return-type>
<method-signature>responseCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocation</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getLocation()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReason</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getReason()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.HttpURLConnection">
<source>
<method-name>getResponseCode</method-name>
<return-type>int</return-type>
<method-signature>getResponseCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getErrorStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getErrorStream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContentEncoding</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getContentEncoding()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderField</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHeaderField(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderFieldKey</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHeaderFieldKey(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestMethod</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRequestMethod()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResponseMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getResponseMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPermission</method-name>
<return-type>java.security.Permission</return-type>
<method-signature>getPermission()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderFieldDate</method-name>
<return-type>long</return-type>
<method-signature>getHeaderFieldDate(java.lang.String,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,long</parameter-type>
</source>

</class>
<class class-name="java.net.Inet6Address">
<source>
<method-name>getAddress</method-name>
<return-type>byte[]</return-type>
<method-signature>getAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getScopeId</method-name>
<return-type>int</return-type>
<method-signature>getScopeId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostAddress</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHostAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getByAddress</method-name>
<return-type>java.net.Inet6Address</return-type>
<method-signature>getByAddress(java.lang.String,byte[],int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,byte[],int</parameter-type>
</source>

<source>
<method-name>getByAddress</method-name>
<return-type>java.net.Inet6Address</return-type>
<method-signature>getByAddress(java.lang.String,byte[],java.net.NetworkInterface)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,byte[],java.net.NetworkInterface</parameter-type>
</source>

<source>
<method-name>getScopedInterface</method-name>
<return-type>java.net.NetworkInterface</return-type>
<method-signature>getScopedInterface()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.InetAddress">
<source>
<method-name>getAddress</method-name>
<return-type>byte[]</return-type>
<method-signature>getAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCanonicalHostName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCanonicalHostName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostAddress</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHostAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHostName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getByAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getByAddress(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getByAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getByAddress(java.lang.String,byte[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,byte[]</parameter-type>
</source>

<source>
<method-name>getByName</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getByName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalHost</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getLocalHost()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLoopbackAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getLoopbackAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAllByName</method-name>
<return-type>java.net.InetAddress[]</return-type>
<method-signature>getAllByName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.InetSocketAddress">
<source>
<method-name>getPort</method-name>
<return-type>int</return-type>
<method-signature>getPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHostName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHostString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>createUnresolved</method-name>
<return-type>java.net.InetSocketAddress</return-type>
<method-signature>createUnresolved(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

</class>
<class class-name="java.net.InterfaceAddress">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBroadcast</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getBroadcast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNetworkPrefixLength</method-name>
<return-type>short</return-type>
<method-signature>getNetworkPrefixLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.JarURLConnection">
<source>
<method-name>getEntryName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getEntryName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getJarFileURL</method-name>
<return-type>java.net.URL</return-type>
<method-signature>getJarFileURL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificates</method-name>
<return-type>java.security.cert.Certificate[]</return-type>
<method-signature>getCertificates()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAttributes</method-name>
<return-type>java.util.jar.Attributes</return-type>
<method-signature>getAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMainAttributes</method-name>
<return-type>java.util.jar.Attributes</return-type>
<method-signature>getMainAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getJarEntry</method-name>
<return-type>java.util.jar.JarEntry</return-type>
<method-signature>getJarEntry()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getManifest</method-name>
<return-type>java.util.jar.Manifest</return-type>
<method-signature>getManifest()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.MulticastSocket">
<source>
<method-name>getTTL</method-name>
<return-type>byte</return-type>
<method-signature>getTTL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeToLive</method-name>
<return-type>int</return-type>
<method-signature>getTimeToLive()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInterface</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getInterface()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNetworkInterface</method-name>
<return-type>java.net.NetworkInterface</return-type>
<method-signature>getNetworkInterface()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.NetworkInterface">
<source>
<method-name>getHardwareAddress</method-name>
<return-type>byte[]</return-type>
<method-signature>getHardwareAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMTU</method-name>
<return-type>int</return-type>
<method-signature>getMTU()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getByIndex</method-name>
<return-type>java.net.NetworkInterface</return-type>
<method-signature>getByIndex(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getByInetAddress</method-name>
<return-type>java.net.NetworkInterface</return-type>
<method-signature>getByInetAddress(java.net.InetAddress)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getByName</method-name>
<return-type>java.net.NetworkInterface</return-type>
<method-signature>getByName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParent</method-name>
<return-type>java.net.NetworkInterface</return-type>
<method-signature>getParent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInetAddresses</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getInetAddresses()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNetworkInterfaces</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getNetworkInterfaces()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSubInterfaces</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getSubInterfaces()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInterfaceAddresses</method-name>
<return-type>java.util.List</return-type>
<method-signature>getInterfaceAddresses()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.PasswordAuthentication">
<source>
<method-name>getPassword</method-name>
<return-type>char[]</return-type>
<method-signature>getPassword()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUserName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getUserName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.Proxye&#36;Type">
<source>
<method-name>valueOf</method-name>
<return-type>java.net.Proxye&#36;Type</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.net.Proxye&#36;Type[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.Proxy">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>type</method-name>
<return-type>java.net.Proxye&#36;Type</return-type>
<method-signature>type()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>address</method-name>
<return-type>java.net.SocketAddress</return-type>
<method-signature>address()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.ProxySelector">
<source>
<method-name>getDefault</method-name>
<return-type>java.net.ProxySelector</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.ResponseCache">
<source>
<method-name>getDefault</method-name>
<return-type>java.net.ResponseCache</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.ServerSocket">
<source>
<method-name>getLocalPort</method-name>
<return-type>int</return-type>
<method-signature>getLocalPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReceiveBufferSize</method-name>
<return-type>int</return-type>
<method-signature>getReceiveBufferSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSoTimeout</method-name>
<return-type>int</return-type>
<method-signature>getSoTimeout()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInetAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getInetAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>accept</method-name>
<return-type>java.net.Socket</return-type>
<method-signature>accept()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalSocketAddress</method-name>
<return-type>java.net.SocketAddress</return-type>
<method-signature>getLocalSocketAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChannel</method-name>
<return-type>java.nio.channels.ServerSocketChannel</return-type>
<method-signature>getChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.Socket">
<source>
<method-name>getLocalPort</method-name>
<return-type>int</return-type>
<method-signature>getLocalPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPort</method-name>
<return-type>int</return-type>
<method-signature>getPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReceiveBufferSize</method-name>
<return-type>int</return-type>
<method-signature>getReceiveBufferSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSendBufferSize</method-name>
<return-type>int</return-type>
<method-signature>getSendBufferSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSoLinger</method-name>
<return-type>int</return-type>
<method-signature>getSoLinger()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSoTimeout</method-name>
<return-type>int</return-type>
<method-signature>getSoTimeout()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTrafficClass</method-name>
<return-type>int</return-type>
<method-signature>getTrafficClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInputStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getInputStream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOutputStream</method-name>
<return-type>java.io.OutputStream</return-type>
<method-signature>getOutputStream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInetAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getInetAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getLocalAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalSocketAddress</method-name>
<return-type>java.net.SocketAddress</return-type>
<method-signature>getLocalSocketAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRemoteSocketAddress</method-name>
<return-type>java.net.SocketAddress</return-type>
<method-signature>getRemoteSocketAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChannel</method-name>
<return-type>java.nio.channels.SocketChannel</return-type>
<method-signature>getChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.SocketImpl">
<source>
<method-name>getLocalPort</method-name>
<return-type>int</return-type>
<method-signature>getLocalPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPort</method-name>
<return-type>int</return-type>
<method-signature>getPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFileDescriptor</method-name>
<return-type>java.io.FileDescriptor</return-type>
<method-signature>getFileDescriptor()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInetAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getInetAddress()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.SocketPermission">
<source>
<method-name>getActions</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getActions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.URI">
<source>
<method-name>getPort</method-name>
<return-type>int</return-type>
<method-signature>getPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAuthority</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAuthority()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFragment</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFragment()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHost</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHost()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPath</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQuery</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getQuery()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRawAuthority</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRawAuthority()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRawFragment</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRawFragment()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRawPath</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRawPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRawQuery</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRawQuery()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRawSchemeSpecificPart</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRawSchemeSpecificPart()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRawUserInfo</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRawUserInfo()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getScheme</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getScheme()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSchemeSpecificPart</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSchemeSpecificPart()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUserInfo</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getUserInfo()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toASCIIString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toASCIIString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>create</method-name>
<return-type>java.net.URI</return-type>
<method-signature>create(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>normalize</method-name>
<return-type>java.net.URI</return-type>
<method-signature>normalize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseServerAuthority</method-name>
<return-type>java.net.URI</return-type>
<method-signature>parseServerAuthority()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>relativize</method-name>
<return-type>java.net.URI</return-type>
<method-signature>relativize(java.net.URI)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>resolve</method-name>
<return-type>java.net.URI</return-type>
<method-signature>resolve(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>resolve</method-name>
<return-type>java.net.URI</return-type>
<method-signature>resolve(java.net.URI)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toURL</method-name>
<return-type>java.net.URL</return-type>
<method-signature>toURL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.URISyntaxException">
<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInput</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getInput()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReason</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getReason()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.URL">
<source>
<method-name>getDefaultPort</method-name>
<return-type>int</return-type>
<method-signature>getDefaultPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPort</method-name>
<return-type>int</return-type>
<method-signature>getPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getContent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getContent(java.lang.Class[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAuthority</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAuthority()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFile</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFile()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHost</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHost()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPath</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProtocol</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProtocol()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQuery</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getQuery()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRef</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRef()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUserInfo</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getUserInfo()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toExternalForm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toExternalForm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toURI</method-name>
<return-type>java.net.URI</return-type>
<method-signature>toURI()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>openConnection</method-name>
<return-type>java.net.URLConnection</return-type>
<method-signature>openConnection(java.net.Proxy)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.URLConnection">
<source>
<method-name>getConnectTimeout</method-name>
<return-type>int</return-type>
<method-signature>getConnectTimeout()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContentLength</method-name>
<return-type>int</return-type>
<method-signature>getContentLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderFieldInt</method-name>
<return-type>int</return-type>
<method-signature>getHeaderFieldInt(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>getReadTimeout</method-name>
<return-type>int</return-type>
<method-signature>getReadTimeout()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInputStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getInputStream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOutputStream</method-name>
<return-type>java.io.OutputStream</return-type>
<method-signature>getOutputStream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getContent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getContent(java.lang.Class[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContentEncoding</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getContentEncoding()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContentType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getContentType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultRequestProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDefaultRequestProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderField</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHeaderField(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderField</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHeaderField(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderFieldKey</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHeaderFieldKey(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRequestProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>guessContentTypeFromName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>guessContentTypeFromName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>guessContentTypeFromStream</method-name>
<return-type>java.lang.String</return-type>
<method-signature>guessContentTypeFromStream(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFileNameMap</method-name>
<return-type>java.net.FileNameMap</return-type>
<method-signature>getFileNameMap()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getURL</method-name>
<return-type>java.net.URL</return-type>
<method-signature>getURL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPermission</method-name>
<return-type>java.security.Permission</return-type>
<method-signature>getPermission()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderFields</method-name>
<return-type>java.util.Map</return-type>
<method-signature>getHeaderFields()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRequestProperties</method-name>
<return-type>java.util.Map</return-type>
<method-signature>getRequestProperties()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContentLengthLong</method-name>
<return-type>long</return-type>
<method-signature>getContentLengthLong()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDate</method-name>
<return-type>long</return-type>
<method-signature>getDate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExpiration</method-name>
<return-type>long</return-type>
<method-signature>getExpiration()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHeaderFieldDate</method-name>
<return-type>long</return-type>
<method-signature>getHeaderFieldDate(java.lang.String,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,long</parameter-type>
</source>

<source>
<method-name>getHeaderFieldLong</method-name>
<return-type>long</return-type>
<method-signature>getHeaderFieldLong(java.lang.String,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,long</parameter-type>
</source>

<source>
<method-name>getIfModifiedSince</method-name>
<return-type>long</return-type>
<method-signature>getIfModifiedSince()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLastModified</method-name>
<return-type>long</return-type>
<method-signature>getLastModified()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.net.URLStreamHandler">
<source>
<method-name>getDefaultPort</method-name>
<return-type>int</return-type>
<method-signature>getDefaultPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode(java.net.URL)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toExternalForm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toExternalForm(java.net.URL)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostAddress</method-name>
<return-type>java.net.InetAddress</return-type>
<method-signature>getHostAddress(java.net.URL)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>openConnection</method-name>
<return-type>java.net.URLConnection</return-type>
<method-signature>openConnection(java.net.URL,java.net.Proxy)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.net.URL,java.net.Proxy</parameter-type>
</source>

</class>
<class class-name="java.nio.Buffer">
<source>
<method-name>capacity</method-name>
<return-type>int</return-type>
<method-signature>capacity()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>limit</method-name>
<return-type>int</return-type>
<method-signature>limit()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>position</method-name>
<return-type>int</return-type>
<method-signature>position()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remaining</method-name>
<return-type>int</return-type>
<method-signature>remaining()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clear</method-name>
<return-type>java.nio.Buffer</return-type>
<method-signature>clear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>flip</method-name>
<return-type>java.nio.Buffer</return-type>
<method-signature>flip()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>limit</method-name>
<return-type>java.nio.Buffer</return-type>
<method-signature>limit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>mark</method-name>
<return-type>java.nio.Buffer</return-type>
<method-signature>mark()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>position</method-name>
<return-type>java.nio.Buffer</return-type>
<method-signature>position(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reset</method-name>
<return-type>java.nio.Buffer</return-type>
<method-signature>reset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>rewind</method-name>
<return-type>java.nio.Buffer</return-type>
<method-signature>rewind()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.ByteBuffer">
<source>
<method-name>array</method-name>
<return-type>byte[]</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>arrayOffset</method-name>
<return-type>int</return-type>
<method-signature>arrayOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.ByteBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocate</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>allocate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocateDirect</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>allocateDirect(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>get(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>get(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>order</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>order(java.nio.ByteOrder)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>put(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>put(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>put(java.nio.ByteBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>wrap(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>wrap(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>order</method-name>
<return-type>java.nio.ByteOrder</return-type>
<method-signature>order()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.ByteOrder">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nativeOrder</method-name>
<return-type>java.nio.ByteOrder</return-type>
<method-signature>nativeOrder()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.CharBuffer">
<source>
<method-name>charAt</method-name>
<return-type>char</return-type>
<method-signature>charAt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>char[]</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>arrayOffset</method-name>
<return-type>int</return-type>
<method-signature>arrayOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>length</method-name>
<return-type>int</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subSequence</method-name>
<return-type>java.lang.CharSequence</return-type>
<method-signature>subSequence(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocate</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>allocate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>append(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>append(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>append</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>append(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>get(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>get(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>put(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>put(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>put(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>put(java.lang.String,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>put(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>wrap(char[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>wrap(char[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>char[],int,int</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>wrap(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>wrap(java.lang.CharSequence,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.CharSequence,int,int</parameter-type>
</source>

<source>
<method-name>chars</method-name>
<return-type>java.util.stream.IntStream</return-type>
<method-signature>chars()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.DoubleBuffer">
<source>
<method-name>array</method-name>
<return-type>double[]</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>arrayOffset</method-name>
<return-type>int</return-type>
<method-signature>arrayOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.DoubleBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocate</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>allocate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>get(double[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>get(double[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>double[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>put(double[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>put(double[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>double[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>put(java.nio.DoubleBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>wrap(double[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.DoubleBuffer</return-type>
<method-signature>wrap(double[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>double[],int,int</parameter-type>
</source>

</class>
<class class-name="java.nio.FloatBuffer">
<source>
<method-name>array</method-name>
<return-type>float[]</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>arrayOffset</method-name>
<return-type>int</return-type>
<method-signature>arrayOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.FloatBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocate</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>allocate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>get(float[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>get(float[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>float[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>put(float[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>put(float[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>float[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>put(java.nio.FloatBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>wrap(float[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.FloatBuffer</return-type>
<method-signature>wrap(float[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>float[],int,int</parameter-type>
</source>

</class>
<class class-name="java.nio.IntBuffer">
<source>
<method-name>arrayOffset</method-name>
<return-type>int</return-type>
<method-signature>arrayOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.IntBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>int[]</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocate</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>allocate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>get(int[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>get(int[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>put(int[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>put(int[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>put(java.nio.IntBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>wrap(int[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.IntBuffer</return-type>
<method-signature>wrap(int[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int[],int,int</parameter-type>
</source>

</class>
<class class-name="java.nio.LongBuffer">
<source>
<method-name>arrayOffset</method-name>
<return-type>int</return-type>
<method-signature>arrayOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.LongBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocate</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>allocate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>get(long[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>get(long[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>put(java.nio.LongBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>put(long[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>put(long[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long[],int,int</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>wrap(long[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.LongBuffer</return-type>
<method-signature>wrap(long[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long[],int,int</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>long[]</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.MappedByteBuffer">
<source>
<method-name>force</method-name>
<return-type>java.nio.MappedByteBuffer</return-type>
<method-signature>force()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>load</method-name>
<return-type>java.nio.MappedByteBuffer</return-type>
<method-signature>load()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.ShortBuffer">
<source>
<method-name>arrayOffset</method-name>
<return-type>int</return-type>
<method-signature>arrayOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.ShortBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allocate</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>allocate(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>get(short[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>get(short[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>short[],int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>put(java.nio.ShortBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>put(short[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>put(short[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>short[],int,int</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>wrap(short[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.nio.ShortBuffer</return-type>
<method-signature>wrap(short[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>short[],int,int</parameter-type>
</source>

<source>
<method-name>array</method-name>
<return-type>short[]</return-type>
<method-signature>array()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.AsynchronousFileChannel">
<source>
<method-name>open</method-name>
<return-type>java.nio.channels.AsynchronousFileChannel</return-type>
<method-signature>open(java.nio.file.Path,java.nio.file.OpenOption[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.file.Path,java.nio.file.OpenOption[]</parameter-type>
</source>

<source>
<method-name>open</method-name>
<return-type>java.nio.channels.AsynchronousFileChannel</return-type>
<method-signature>open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute[])</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute[]</parameter-type>
</source>

<source>
<method-name>tryLock</method-name>
<return-type>java.nio.channels.FileLock</return-type>
<method-signature>tryLock()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lock</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>lock()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.DatagramChannel">
<source>
<method-name>validOps</method-name>
<return-type>int</return-type>
<method-signature>validOps()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>open</method-name>
<return-type>java.nio.channels.DatagramChannel</return-type>
<method-signature>open()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>open</method-name>
<return-type>java.nio.channels.DatagramChannel</return-type>
<method-signature>open(java.net.ProtocolFamily)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>bind</method-name>
<return-type>java.nio.channels.NetworkChannel</return-type>
<method-signature>bind(java.net.SocketAddress)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setOption</method-name>
<return-type>java.nio.channels.NetworkChannel</return-type>
<method-signature>setOption(java.net.SocketOption,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.net.SocketOption,java.lang.Object</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>long</return-type>
<method-signature>read(java.nio.ByteBuffer[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>write</method-name>
<return-type>long</return-type>
<method-signature>write(java.nio.ByteBuffer[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.FileChannele&#36;MapMode">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.FileChannel">
<source>
<method-name>open</method-name>
<return-type>java.nio.channels.FileChannel</return-type>
<method-signature>open(java.nio.file.Path,java.nio.file.OpenOption[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.file.Path,java.nio.file.OpenOption[]</parameter-type>
</source>

<source>
<method-name>open</method-name>
<return-type>java.nio.channels.FileChannel</return-type>
<method-signature>open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[]</parameter-type>
</source>

<source>
<method-name>lock</method-name>
<return-type>java.nio.channels.FileLock</return-type>
<method-signature>lock()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>tryLock</method-name>
<return-type>java.nio.channels.FileLock</return-type>
<method-signature>tryLock()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>position</method-name>
<return-type>java.nio.channels.SeekableByteChannel</return-type>
<method-signature>position(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>truncate</method-name>
<return-type>java.nio.channels.SeekableByteChannel</return-type>
<method-signature>truncate(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>long</return-type>
<method-signature>read(java.nio.ByteBuffer[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>write</method-name>
<return-type>long</return-type>
<method-signature>write(java.nio.ByteBuffer[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.FileLock">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>acquiredBy</method-name>
<return-type>java.nio.channels.Channel</return-type>
<method-signature>acquiredBy()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>channel</method-name>
<return-type>java.nio.channels.FileChannel</return-type>
<method-signature>channel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>position</method-name>
<return-type>long</return-type>
<method-signature>position()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>long</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.Pipee&#36;SinkChannel">
<source>
<method-name>validOps</method-name>
<return-type>int</return-type>
<method-signature>validOps()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.Pipee&#36;SourceChannel">
<source>
<method-name>validOps</method-name>
<return-type>int</return-type>
<method-signature>validOps()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.Pipe">
<source>
<method-name>open</method-name>
<return-type>java.nio.channels.Pipe</return-type>
<method-signature>open()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.SelectableChannel">
<source>
<method-name>register</method-name>
<return-type>java.nio.channels.SelectionKey</return-type>
<method-signature>register(java.nio.channels.Selector,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.channels.Selector,int</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.SelectionKey">
<source>
<method-name>attach</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>attach(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>attachment</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>attachment()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.Selector">
<source>
<method-name>open</method-name>
<return-type>java.nio.channels.Selector</return-type>
<method-signature>open()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.ServerSocketChannel">
<source>
<method-name>validOps</method-name>
<return-type>int</return-type>
<method-signature>validOps()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setOption</method-name>
<return-type>java.nio.channels.NetworkChannel</return-type>
<method-signature>setOption(java.net.SocketOption,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.net.SocketOption,java.lang.Object</parameter-type>
</source>

<source>
<method-name>bind</method-name>
<return-type>java.nio.channels.ServerSocketChannel</return-type>
<method-signature>bind(java.net.SocketAddress)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>open</method-name>
<return-type>java.nio.channels.ServerSocketChannel</return-type>
<method-signature>open()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.SocketChannel">
<source>
<method-name>validOps</method-name>
<return-type>int</return-type>
<method-signature>validOps()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>bind</method-name>
<return-type>java.nio.channels.NetworkChannel</return-type>
<method-signature>bind(java.net.SocketAddress)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setOption</method-name>
<return-type>java.nio.channels.NetworkChannel</return-type>
<method-signature>setOption(java.net.SocketOption,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.net.SocketOption,java.lang.Object</parameter-type>
</source>

<source>
<method-name>open</method-name>
<return-type>java.nio.channels.SocketChannel</return-type>
<method-signature>open()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>open</method-name>
<return-type>java.nio.channels.SocketChannel</return-type>
<method-signature>open(java.net.SocketAddress)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>long</return-type>
<method-signature>read(java.nio.ByteBuffer[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>write</method-name>
<return-type>long</return-type>
<method-signature>write(java.nio.ByteBuffer[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.spi.AbstractSelectableChannel">
<source>
<method-name>blockingLock</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>blockingLock()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>configureBlocking</method-name>
<return-type>java.nio.channels.SelectableChannel</return-type>
<method-signature>configureBlocking(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keyFor</method-name>
<return-type>java.nio.channels.SelectionKey</return-type>
<method-signature>keyFor(java.nio.channels.Selector)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>register</method-name>
<return-type>java.nio.channels.SelectionKey</return-type>
<method-signature>register(java.nio.channels.Selector,int,java.lang.Object)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.nio.channels.Selector,int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>provider</method-name>
<return-type>java.nio.channels.spi.SelectorProvider</return-type>
<method-signature>provider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.spi.AbstractSelector">
<source>
<method-name>provider</method-name>
<return-type>java.nio.channels.spi.SelectorProvider</return-type>
<method-signature>provider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>cancelledKeys</method-name>
<return-type>java.util.Set</return-type>
<method-signature>cancelledKeys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.channels.spi.SelectorProvider">
<source>
<method-name>inheritedChannel</method-name>
<return-type>java.nio.channels.Channel</return-type>
<method-signature>inheritedChannel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>provider</method-name>
<return-type>java.nio.channels.spi.SelectorProvider</return-type>
<method-signature>provider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.Charset">
<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.nio.charset.Charset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>displayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>displayName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>displayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>displayName(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>name</method-name>
<return-type>java.lang.String</return-type>
<method-signature>name()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>encode</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>encode(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>encode</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>encode(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decode</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>decode(java.nio.ByteBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>defaultCharset</method-name>
<return-type>java.nio.charset.Charset</return-type>
<method-signature>defaultCharset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>forName</method-name>
<return-type>java.nio.charset.Charset</return-type>
<method-signature>forName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>aliases</method-name>
<return-type>java.util.Set</return-type>
<method-signature>aliases()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>availableCharsets</method-name>
<return-type>java.util.SortedMap</return-type>
<method-signature>availableCharsets()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.CharsetDecoder">
<source>
<method-name>averageCharsPerByte</method-name>
<return-type>float</return-type>
<method-signature>averageCharsPerByte()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>maxCharsPerByte</method-name>
<return-type>float</return-type>
<method-signature>maxCharsPerByte()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replacement</method-name>
<return-type>java.lang.String</return-type>
<method-signature>replacement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decode</method-name>
<return-type>java.nio.CharBuffer</return-type>
<method-signature>decode(java.nio.ByteBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>charset</method-name>
<return-type>java.nio.charset.Charset</return-type>
<method-signature>charset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>detectedCharset</method-name>
<return-type>java.nio.charset.Charset</return-type>
<method-signature>detectedCharset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>onMalformedInput</method-name>
<return-type>java.nio.charset.CharsetDecoder</return-type>
<method-signature>onMalformedInput(java.nio.charset.CodingErrorAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>onUnmappableCharacter</method-name>
<return-type>java.nio.charset.CharsetDecoder</return-type>
<method-signature>onUnmappableCharacter(java.nio.charset.CodingErrorAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replaceWith</method-name>
<return-type>java.nio.charset.CharsetDecoder</return-type>
<method-signature>replaceWith(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reset</method-name>
<return-type>java.nio.charset.CharsetDecoder</return-type>
<method-signature>reset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decode</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.CharBuffer,boolean</parameter-type>
</source>

<source>
<method-name>flush</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>flush(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>implFlush</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>implFlush(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>malformedInputAction</method-name>
<return-type>java.nio.charset.CodingErrorAction</return-type>
<method-signature>malformedInputAction()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>unmappableCharacterAction</method-name>
<return-type>java.nio.charset.CodingErrorAction</return-type>
<method-signature>unmappableCharacterAction()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.CharsetEncoder">
<source>
<method-name>replacement</method-name>
<return-type>byte[]</return-type>
<method-signature>replacement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>averageBytesPerChar</method-name>
<return-type>float</return-type>
<method-signature>averageBytesPerChar()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>maxBytesPerChar</method-name>
<return-type>float</return-type>
<method-signature>maxBytesPerChar()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>encode</method-name>
<return-type>java.nio.ByteBuffer</return-type>
<method-signature>encode(java.nio.CharBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>charset</method-name>
<return-type>java.nio.charset.Charset</return-type>
<method-signature>charset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>onMalformedInput</method-name>
<return-type>java.nio.charset.CharsetEncoder</return-type>
<method-signature>onMalformedInput(java.nio.charset.CodingErrorAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>onUnmappableCharacter</method-name>
<return-type>java.nio.charset.CharsetEncoder</return-type>
<method-signature>onUnmappableCharacter(java.nio.charset.CodingErrorAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replaceWith</method-name>
<return-type>java.nio.charset.CharsetEncoder</return-type>
<method-signature>replaceWith(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reset</method-name>
<return-type>java.nio.charset.CharsetEncoder</return-type>
<method-signature>reset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>encode</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.nio.CharBuffer,java.nio.ByteBuffer,boolean</parameter-type>
</source>

<source>
<method-name>flush</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>flush(java.nio.ByteBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>implFlush</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>implFlush(java.nio.ByteBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>malformedInputAction</method-name>
<return-type>java.nio.charset.CodingErrorAction</return-type>
<method-signature>malformedInputAction()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>unmappableCharacterAction</method-name>
<return-type>java.nio.charset.CodingErrorAction</return-type>
<method-signature>unmappableCharacterAction()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.CoderResult">
<source>
<method-name>length</method-name>
<return-type>int</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>malformedForLength</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>malformedForLength(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>unmappableForLength</method-name>
<return-type>java.nio.charset.CoderResult</return-type>
<method-signature>unmappableForLength(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.CodingErrorAction">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.IllegalCharsetNameException">
<source>
<method-name>getCharsetName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCharsetName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.MalformedInputException">
<source>
<method-name>getInputLength</method-name>
<return-type>int</return-type>
<method-signature>getInputLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.UnmappableCharacterException">
<source>
<method-name>getInputLength</method-name>
<return-type>int</return-type>
<method-signature>getInputLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.charset.UnsupportedCharsetException">
<source>
<method-name>getCharsetName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCharsetName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.file.AccessMode">
<source>
<method-name>valueOf</method-name>
<return-type>java.nio.file.AccessMode</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.nio.file.AccessMode[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.file.LinkOption">
<source>
<method-name>valueOf</method-name>
<return-type>java.nio.file.LinkOption</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.nio.file.LinkOption[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.file.attribute.FileTime">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.nio.file.attribute.FileTime</return-type>
<method-signature>from(java.time.Instant)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.nio.file.attribute.FileTime</return-type>
<method-signature>from(long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>fromMillis</method-name>
<return-type>java.nio.file.attribute.FileTime</return-type>
<method-signature>fromMillis(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toInstant</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>toInstant()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>to</method-name>
<return-type>long</return-type>
<method-signature>to(java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toMillis</method-name>
<return-type>long</return-type>
<method-signature>toMillis()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.nio.file.spi.FileSystemProvider">
<source>
<method-name>newInputStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.file.Path,java.nio.file.OpenOption[]</parameter-type>
</source>

<source>
<method-name>newOutputStream</method-name>
<return-type>java.io.OutputStream</return-type>
<method-signature>newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.file.Path,java.nio.file.OpenOption[]</parameter-type>
</source>

<source>
<method-name>newAsynchronousFileChannel</method-name>
<return-type>java.nio.channels.AsynchronousFileChannel</return-type>
<method-signature>newAsynchronousFileChannel(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute[])</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute[]</parameter-type>
</source>

<source>
<method-name>newFileChannel</method-name>
<return-type>java.nio.channels.FileChannel</return-type>
<method-signature>newFileChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[]</parameter-type>
</source>

<source>
<method-name>newFileSystem</method-name>
<return-type>java.nio.file.FileSystem</return-type>
<method-signature>newFileSystem(java.nio.file.Path,java.util.Map)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.file.Path,java.util.Map</parameter-type>
</source>

<source>
<method-name>readSymbolicLink</method-name>
<return-type>java.nio.file.Path</return-type>
<method-signature>readSymbolicLink(java.nio.file.Path)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>installedProviders</method-name>
<return-type>java.util.List</return-type>
<method-signature>installedProviders()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.AccessControlContext">
<source>
<method-name>getDomainCombiner</method-name>
<return-type>java.security.DomainCombiner</return-type>
<method-signature>getDomainCombiner()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.AccessControlException">
<source>
<method-name>getPermission</method-name>
<return-type>java.security.Permission</return-type>
<method-signature>getPermission()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.AccessController">
<source>
<method-name>doPrivileged</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doPrivileged(java.security.PrivilegedAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doPrivileged</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.security.PrivilegedAction,java.security.AccessControlContext</parameter-type>
</source>

<source>
<method-name>doPrivileged</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doPrivileged(java.security.PrivilegedExceptionAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doPrivileged</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.security.PrivilegedExceptionAction,java.security.AccessControlContext</parameter-type>
</source>

<source>
<method-name>doPrivilegedWithCombiner</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doPrivilegedWithCombiner(java.security.PrivilegedAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doPrivilegedWithCombiner</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContext</method-name>
<return-type>java.security.AccessControlContext</return-type>
<method-signature>getContext()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.AlgorithmParameters">
<source>
<method-name>getEncoded</method-name>
<return-type>byte[]</return-type>
<method-signature>getEncoded()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEncoded</method-name>
<return-type>byte[]</return-type>
<method-signature>getEncoded(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.AlgorithmParameters</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.AlgorithmParameters</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.AlgorithmParameters</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameterSpec</method-name>
<return-type>java.security.spec.AlgorithmParameterSpec</return-type>
<method-signature>getParameterSpec(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.AllPermission">
<source>
<method-name>getActions</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getActions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.BasicPermission">
<source>
<method-name>getActions</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getActions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.CodeSigner">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimestamp</method-name>
<return-type>java.security.Timestamp</return-type>
<method-signature>getTimestamp()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSignerCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>getSignerCertPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.CodeSource">
<source>
<method-name>getLocation</method-name>
<return-type>java.net.URL</return-type>
<method-signature>getLocation()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCodeSigners</method-name>
<return-type>java.security.CodeSigner[]</return-type>
<method-signature>getCodeSigners()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificates</method-name>
<return-type>java.security.cert.Certificate[]</return-type>
<method-signature>getCertificates()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.DigestInputStream">
<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessageDigest</method-name>
<return-type>java.security.MessageDigest</return-type>
<method-signature>getMessageDigest()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyFactory">
<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>translateKey</method-name>
<return-type>java.security.Key</return-type>
<method-signature>translateKey(java.security.Key)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyFactory</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyFactory</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyFactory</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>generatePrivate</method-name>
<return-type>java.security.PrivateKey</return-type>
<method-signature>generatePrivate(java.security.spec.KeySpec)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generatePublic</method-name>
<return-type>java.security.PublicKey</return-type>
<method-signature>generatePublic(java.security.spec.KeySpec)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKeySpec</method-name>
<return-type>java.security.spec.KeySpec</return-type>
<method-signature>getKeySpec(java.security.Key,java.lang.Class)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.security.Key,java.lang.Class</parameter-type>
</source>

</class>
<class class-name="java.security.KeyPair">
<source>
<method-name>getPrivate</method-name>
<return-type>java.security.PrivateKey</return-type>
<method-signature>getPrivate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublic</method-name>
<return-type>java.security.PublicKey</return-type>
<method-signature>getPublic()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyPairGenerator">
<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>genKeyPair</method-name>
<return-type>java.security.KeyPair</return-type>
<method-signature>genKeyPair()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generateKeyPair</method-name>
<return-type>java.security.KeyPair</return-type>
<method-signature>generateKeyPair()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyPairGenerator</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyPairGenerator</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyPairGenerator</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStoree&#36;Builder">
<source>
<method-name>newInstance</method-name>
<return-type>java.security.KeyStoree&#36;Builder</return-type>
<method-signature>newInstance(java.lang.String,java.security.Provider,java.io.File,java.security.KeyStoree&#36;ProtectionParameter)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.lang.String,java.security.Provider,java.io.File,java.security.KeyStoree&#36;ProtectionParameter</parameter-type>
</source>

<source>
<method-name>newInstance</method-name>
<return-type>java.security.KeyStoree&#36;Builder</return-type>
<method-signature>newInstance(java.lang.String,java.security.Provider,java.security.KeyStoree&#36;ProtectionParameter)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.security.Provider,java.security.KeyStoree&#36;ProtectionParameter</parameter-type>
</source>

<source>
<method-name>newInstance</method-name>
<return-type>java.security.KeyStoree&#36;Builder</return-type>
<method-signature>newInstance(java.security.KeyStore,java.security.KeyStoree&#36;ProtectionParameter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.security.KeyStore,java.security.KeyStoree&#36;ProtectionParameter</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStoree&#36;CallbackHandlerProtection">
<source>
<method-name>getCallbackHandler</method-name>
<return-type>javax.security.auth.callback.CallbackHandler</return-type>
<method-signature>getCallbackHandler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStoree&#36;PasswordProtection">
<source>
<method-name>getPassword</method-name>
<return-type>char[]</return-type>
<method-signature>getPassword()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProtectionAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProtectionAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProtectionParameters</method-name>
<return-type>java.security.spec.AlgorithmParameterSpec</return-type>
<method-signature>getProtectionParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStoree&#36;PrivateKeyEntry">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrivateKey</method-name>
<return-type>java.security.PrivateKey</return-type>
<method-signature>getPrivateKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificate</method-name>
<return-type>java.security.cert.Certificate</return-type>
<method-signature>getCertificate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificateChain</method-name>
<return-type>java.security.cert.Certificate[]</return-type>
<method-signature>getCertificateChain()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAttributes</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStoree&#36;SecretKeyEntry">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAttributes</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecretKey</method-name>
<return-type>javax.crypto.SecretKey</return-type>
<method-signature>getSecretKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStoree&#36;TrustedCertificateEntry">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTrustedCertificate</method-name>
<return-type>java.security.cert.Certificate</return-type>
<method-signature>getTrustedCertificate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAttributes</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStore">
<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificateAlias</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCertificateAlias(java.security.cert.Certificate)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDefaultType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKey</method-name>
<return-type>java.security.Key</return-type>
<method-signature>getKey(java.lang.String,char[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,char[]</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyStore</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyStore</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.KeyStore</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getEntry</method-name>
<return-type>java.security.KeyStoree&#36;Entry</return-type>
<method-signature>getEntry(java.lang.String,java.security.KeyStoree&#36;ProtectionParameter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.KeyStoree&#36;ProtectionParameter</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificate</method-name>
<return-type>java.security.cert.Certificate</return-type>
<method-signature>getCertificate(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificateChain</method-name>
<return-type>java.security.cert.Certificate[]</return-type>
<method-signature>getCertificateChain(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCreationDate</method-name>
<return-type>java.util.Date</return-type>
<method-signature>getCreationDate(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>aliases</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>aliases()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.KeyStoreSpi">
<source>
<method-name>engineGetEntry</method-name>
<return-type>java.security.KeyStoree&#36;Entry</return-type>
<method-signature>engineGetEntry(java.lang.String,java.security.KeyStoree&#36;ProtectionParameter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.KeyStoree&#36;ProtectionParameter</parameter-type>
</source>

</class>
<class class-name="java.security.MessageDigest">
<source>
<method-name>digest</method-name>
<return-type>byte[]</return-type>
<method-signature>digest()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>digest</method-name>
<return-type>byte[]</return-type>
<method-signature>digest(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>digest</method-name>
<return-type>int</return-type>
<method-signature>digest(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>getDigestLength</method-name>
<return-type>int</return-type>
<method-signature>getDigestLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.MessageDigest</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.MessageDigest</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.MessageDigest</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.MessageDigestSpi">
<source>
<method-name>engineDigest</method-name>
<return-type>int</return-type>
<method-signature>engineDigest(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>engineGetDigestLength</method-name>
<return-type>int</return-type>
<method-signature>engineGetDigestLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.Permission">
<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newPermissionCollection</method-name>
<return-type>java.security.PermissionCollection</return-type>
<method-signature>newPermissionCollection()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.PrivilegedActionException">
<source>
<method-name>getException</method-name>
<return-type>java.lang.Exception</return-type>
<method-signature>getException()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCause</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getCause()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.ProtectionDomain">
<source>
<method-name>getClassLoader</method-name>
<return-type>java.lang.ClassLoader</return-type>
<method-signature>getClassLoader()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCodeSource</method-name>
<return-type>java.security.CodeSource</return-type>
<method-signature>getCodeSource()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPermissions</method-name>
<return-type>java.security.PermissionCollection</return-type>
<method-signature>getPermissions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrincipals</method-name>
<return-type>java.security.Principal[]</return-type>
<method-signature>getPrincipals()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.Providere&#36;Service">
<source>
<method-name>newInstance</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>newInstance(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAttribute</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAttribute(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getClassName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getClassName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.Provider">
<source>
<method-name>getVersion</method-name>
<return-type>double</return-type>
<method-signature>getVersion()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compute</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>compute(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>computeIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfAbsent(java.lang.Object,java.util.function.Function)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.Function</parameter-type>
</source>

<source>
<method-name>computeIfPresent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfPresent(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOrDefault</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getOrDefault(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>merge</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>putIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>putIfAbsent(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>replace(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>getInfo</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getInfo()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getService</method-name>
<return-type>java.security.Providere&#36;Service</return-type>
<method-signature>getService(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>elements</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>elements()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keys</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>keys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getServices</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getServices()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.SecureRandom">
<source>
<method-name>generateSeed</method-name>
<return-type>byte[]</return-type>
<method-signature>generateSeed(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSeed</method-name>
<return-type>byte[]</return-type>
<method-signature>getSeed(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>next</method-name>
<return-type>int</return-type>
<method-signature>next(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.SecureRandom</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.SecureRandom</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.SecureRandom</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getInstanceStrong</method-name>
<return-type>java.security.SecureRandom</return-type>
<method-signature>getInstanceStrong()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.Security">
<source>
<method-name>getAlgorithmProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithmProperty(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProviders</method-name>
<return-type>java.security.Provider[]</return-type>
<method-signature>getProviders()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProviders</method-name>
<return-type>java.security.Provider[]</return-type>
<method-signature>getProviders(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProviders</method-name>
<return-type>java.security.Provider[]</return-type>
<method-signature>getProviders(java.util.Map)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithms</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAlgorithms(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.Signature">
<source>
<method-name>sign</method-name>
<return-type>byte[]</return-type>
<method-signature>sign()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>sign</method-name>
<return-type>int</return-type>
<method-signature>sign(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameter</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getParameter(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameters</method-name>
<return-type>java.security.AlgorithmParameters</return-type>
<method-signature>getParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.Signature</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.Signature</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.Signature</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

</class>
<class class-name="java.security.SignatureSpi">
<source>
<method-name>engineSign</method-name>
<return-type>int</return-type>
<method-signature>engineSign(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>engineGetParameters</method-name>
<return-type>java.security.AlgorithmParameters</return-type>
<method-signature>engineGetParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.Timestamp">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSignerCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>getSignerCertPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimestamp</method-name>
<return-type>java.util.Date</return-type>
<method-signature>getTimestamp()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CRL">
<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertPathe&#36;CertPathRep">
<source>
<method-name>readResolve</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>readResolve()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertPath">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>writeReplace</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>writeReplace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertPathValidator">
<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDefaultType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRevocationChecker</method-name>
<return-type>java.security.cert.CertPathChecker</return-type>
<method-signature>getRevocationChecker()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertPathValidator</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertPathValidator</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertPathValidator</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>validate</method-name>
<return-type>java.security.cert.CertPathValidatorResult</return-type>
<method-signature>validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.security.cert.CertPath,java.security.cert.CertPathParameters</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertPathValidatorExceptione&#36;BasicReason">
<source>
<method-name>valueOf</method-name>
<return-type>java.security.cert.CertPathValidatorExceptione&#36;BasicReason</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.security.cert.CertPathValidatorExceptione&#36;BasicReason[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertPathValidatorException">
<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>getCertPath()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReason</method-name>
<return-type>java.security.cert.CertPathValidatorExceptione&#36;Reason</return-type>
<method-signature>getReason()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertPathValidatorSpi">
<source>
<method-name>engineGetRevocationChecker</method-name>
<return-type>java.security.cert.CertPathChecker</return-type>
<method-signature>engineGetRevocationChecker()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertStore">
<source>
<method-name>getDefaultType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDefaultType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertStore</return-type>
<method-signature>getInstance(java.lang.String,java.security.cert.CertStoreParameters)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.cert.CertStoreParameters</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertStore</return-type>
<method-signature>getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.security.cert.CertStoreParameters,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertStore</return-type>
<method-signature>getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getCertStoreParameters</method-name>
<return-type>java.security.cert.CertStoreParameters</return-type>
<method-signature>getCertStoreParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCRLs</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getCRLs(java.security.cert.CRLSelector)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificates</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getCertificates(java.security.cert.CertSelector)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.Certificatee&#36;CertificateRep">
<source>
<method-name>readResolve</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>readResolve()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.Certificate">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>writeReplace</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>writeReplace()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertificateFactory">
<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generateCRL</method-name>
<return-type>java.security.cert.CRL</return-type>
<method-signature>generateCRL(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generateCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>generateCertPath(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generateCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>generateCertPath(java.io.InputStream,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.io.InputStream,java.lang.String</parameter-type>
</source>

<source>
<method-name>generateCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>generateCertPath(java.util.List)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generateCertificate</method-name>
<return-type>java.security.cert.Certificate</return-type>
<method-signature>generateCertificate(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertificateFactory</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertificateFactory</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.security.cert.CertificateFactory</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>generateCRLs</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>generateCRLs(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generateCertificates</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>generateCertificates(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertPathEncodings</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>getCertPathEncodings()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.CertificateFactorySpi">
<source>
<method-name>engineGenerateCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>engineGenerateCertPath(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>engineGenerateCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>engineGenerateCertPath(java.io.InputStream,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.io.InputStream,java.lang.String</parameter-type>
</source>

<source>
<method-name>engineGenerateCertPath</method-name>
<return-type>java.security.cert.CertPath</return-type>
<method-signature>engineGenerateCertPath(java.util.List)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>engineGetCertPathEncodings</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>engineGetCertPathEncodings()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.PKIXCertPathChecker">
<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.PKIXParameters">
<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSigProvider</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSigProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTargetCertConstraints</method-name>
<return-type>java.security.cert.CertSelector</return-type>
<method-signature>getTargetCertConstraints()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDate</method-name>
<return-type>java.util.Date</return-type>
<method-signature>getDate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertPathCheckers</method-name>
<return-type>java.util.List</return-type>
<method-signature>getCertPathCheckers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertStores</method-name>
<return-type>java.util.List</return-type>
<method-signature>getCertStores()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInitialPolicies</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getInitialPolicies()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTrustAnchors</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getTrustAnchors()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.TrustAnchor">
<source>
<method-name>getNameConstraints</method-name>
<return-type>byte[]</return-type>
<method-signature>getNameConstraints()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCAName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCAName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCAPublicKey</method-name>
<return-type>java.security.PublicKey</return-type>
<method-signature>getCAPublicKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTrustedCert</method-name>
<return-type>java.security.cert.X509Certificate</return-type>
<method-signature>getTrustedCert()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCA</method-name>
<return-type>javax.security.auth.x500.X500Principal</return-type>
<method-signature>getCA()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.cert.X509Certificate">
<source>
<method-name>getIssuerAlternativeNames</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getIssuerAlternativeNames()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSubjectAlternativeNames</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getSubjectAlternativeNames()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExtendedKeyUsage</method-name>
<return-type>java.util.List</return-type>
<method-signature>getExtendedKeyUsage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIssuerX500Principal</method-name>
<return-type>javax.security.auth.x500.X500Principal</return-type>
<method-signature>getIssuerX500Principal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSubjectX500Principal</method-name>
<return-type>javax.security.auth.x500.X500Principal</return-type>
<method-signature>getSubjectX500Principal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.DSAPrivateKeySpec">
<source>
<method-name>getG</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getG()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getP</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getP()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQ</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getQ()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getX</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getX()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.ECFieldF2m">
<source>
<method-name>getFieldSize</method-name>
<return-type>int</return-type>
<method-signature>getFieldSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getM</method-name>
<return-type>int</return-type>
<method-signature>getM()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMidTermsOfReductionPolynomial</method-name>
<return-type>int[]</return-type>
<method-signature>getMidTermsOfReductionPolynomial()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReductionPolynomial</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getReductionPolynomial()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.ECFieldFp">
<source>
<method-name>getFieldSize</method-name>
<return-type>int</return-type>
<method-signature>getFieldSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getP</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getP()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.ECParameterSpec">
<source>
<method-name>getCofactor</method-name>
<return-type>int</return-type>
<method-signature>getCofactor()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOrder</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getOrder()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGenerator</method-name>
<return-type>java.security.spec.ECPoint</return-type>
<method-signature>getGenerator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurve</method-name>
<return-type>java.security.spec.EllipticCurve</return-type>
<method-signature>getCurve()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.ECPoint">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAffineX</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getAffineX()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAffineY</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getAffineY()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.EllipticCurve">
<source>
<method-name>getSeed</method-name>
<return-type>byte[]</return-type>
<method-signature>getSeed()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getA</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getA()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getB</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getB()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getField</method-name>
<return-type>java.security.spec.ECField</return-type>
<method-signature>getField()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.EncodedKeySpec">
<source>
<method-name>getEncoded</method-name>
<return-type>byte[]</return-type>
<method-signature>getEncoded()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.RSAPrivateCrtKeySpec">
<source>
<method-name>getCrtCoefficient</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getCrtCoefficient()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrimeExponentP</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getPrimeExponentP()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrimeExponentQ</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getPrimeExponentQ()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrimeP</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getPrimeP()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrimeQ</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getPrimeQ()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublicExponent</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getPublicExponent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.RSAPrivateKeySpec">
<source>
<method-name>getModulus</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getModulus()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrivateExponent</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getPrivateExponent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.RSAPublicKeySpec">
<source>
<method-name>getModulus</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getModulus()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublicExponent</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getPublicExponent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.security.spec.X509EncodedKeySpec">
<source>
<method-name>getEncoded</method-name>
<return-type>byte[]</return-type>
<method-signature>getEncoded()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFormat</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFormat()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.sql.Date">
<source>
<method-name>getHours</method-name>
<return-type>int</return-type>
<method-signature>getHours()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinutes</method-name>
<return-type>int</return-type>
<method-signature>getMinutes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSeconds</method-name>
<return-type>int</return-type>
<method-signature>getSeconds()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.sql.Date</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.Annotation">
<source>
<method-name>getValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.AttributedCharacterIteratore&#36;Attribute">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readResolve</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>readResolve()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.AttributedString">
<source>
<method-name>getIterator</method-name>
<return-type>java.text.AttributedCharacterIterator</return-type>
<method-signature>getIterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIterator</method-name>
<return-type>java.text.AttributedCharacterIterator</return-type>
<method-signature>getIterator(java.text.AttributedCharacterIteratore&#36;Attribute[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIterator</method-name>
<return-type>java.text.AttributedCharacterIterator</return-type>
<method-signature>getIterator(java.text.AttributedCharacterIteratore&#36;Attribute[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.text.AttributedCharacterIteratore&#36;Attribute[],int,int</parameter-type>
</source>

</class>
<class class-name="java.text.BreakIterator">
<source>
<method-name>preceding</method-name>
<return-type>int</return-type>
<method-signature>preceding(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCharacterInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getCharacterInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCharacterInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getCharacterInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLineInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getLineInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLineInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getLineInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSentenceInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getSentenceInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSentenceInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getSentenceInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWordInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getWordInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWordInstance</method-name>
<return-type>java.text.BreakIterator</return-type>
<method-signature>getWordInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.ChoiceFormat">
<source>
<method-name>nextDouble</method-name>
<return-type>double</return-type>
<method-signature>nextDouble(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextDouble</method-name>
<return-type>double</return-type>
<method-signature>nextDouble(double,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,boolean</parameter-type>
</source>

<source>
<method-name>previousDouble</method-name>
<return-type>double</return-type>
<method-signature>previousDouble(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLimits</method-name>
<return-type>double[]</return-type>
<method-signature>getLimits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.lang.Number</return-type>
<method-signature>parse(java.lang.String,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFormats</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>getFormats()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toPattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toPattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(double,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>double,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(long,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

</class>
<class class-name="java.text.CollationElementIterator">
<source>
<method-name>getMaxExpansion</method-name>
<return-type>int</return-type>
<method-signature>getMaxExpansion(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>int</return-type>
<method-signature>getOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>secondaryOrder</method-name>
<return-type>short</return-type>
<method-signature>secondaryOrder(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>tertiaryOrder</method-name>
<return-type>short</return-type>
<method-signature>tertiaryOrder(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.CollationKey">
<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSourceString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSourceString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.Collator">
<source>
<method-name>compare</method-name>
<return-type>int</return-type>
<method-signature>compare(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>getDecomposition</method-name>
<return-type>int</return-type>
<method-signature>getDecomposition()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getStrength</method-name>
<return-type>int</return-type>
<method-signature>getStrength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.Collator</return-type>
<method-signature>getInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.Collator</return-type>
<method-signature>getInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.DateFormate&#36;Field">
<source>
<method-name>getCalendarField</method-name>
<return-type>int</return-type>
<method-signature>getCalendarField()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readResolve</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>readResolve()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofCalendarField</method-name>
<return-type>java.text.DateFormate&#36;Field</return-type>
<method-signature>ofCalendarField(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.DateFormat">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseObject</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>parseObject(java.lang.String,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.util.Date)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>getDateInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getDateInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDateInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getDateInstance(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDateInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getDateInstance(int,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getDateTimeInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getDateTimeInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDateTimeInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getDateTimeInstance(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>getDateTimeInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getDateTimeInstance(int,int,java.util.Locale)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getTimeInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getTimeInstance(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeInstance</method-name>
<return-type>java.text.DateFormat</return-type>
<method-signature>getTimeInstance(int,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getNumberFormat</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getNumberFormat()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCalendar</method-name>
<return-type>java.util.Calendar</return-type>
<method-signature>getCalendar()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.util.Date</return-type>
<method-signature>parse(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeZone</method-name>
<return-type>java.util.TimeZone</return-type>
<method-signature>getTimeZone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.DateFormatSymbols">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalPatternChars</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getLocalPatternChars()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAmPmStrings</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getAmPmStrings()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEras</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getEras()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonths</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getMonths()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getShortMonths</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getShortMonths()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getShortWeekdays</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getShortWeekdays()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWeekdays</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getWeekdays()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getZoneStrings</method-name>
<return-type>java.lang.String[][]</return-type>
<method-signature>getZoneStrings()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.DateFormatSymbols</return-type>
<method-signature>getInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.DateFormatSymbols</return-type>
<method-signature>getInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.DecimalFormat">
<source>
<method-name>getGroupingSize</method-name>
<return-type>int</return-type>
<method-signature>getGroupingSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaximumFractionDigits</method-name>
<return-type>int</return-type>
<method-signature>getMaximumFractionDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaximumIntegerDigits</method-name>
<return-type>int</return-type>
<method-signature>getMaximumIntegerDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinimumFractionDigits</method-name>
<return-type>int</return-type>
<method-signature>getMinimumFractionDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinimumIntegerDigits</method-name>
<return-type>int</return-type>
<method-signature>getMinimumIntegerDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMultiplier</method-name>
<return-type>int</return-type>
<method-signature>getMultiplier()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.lang.Number</return-type>
<method-signature>parse(java.lang.String,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNegativePrefix</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getNegativePrefix()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNegativeSuffix</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getNegativeSuffix()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPositivePrefix</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPositivePrefix()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPositiveSuffix</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPositiveSuffix()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalizedPattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toLocalizedPattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toPattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toPattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(double,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>double,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(long,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>getRoundingMode</method-name>
<return-type>java.math.RoundingMode</return-type>
<method-signature>getRoundingMode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>formatToCharacterIterator</method-name>
<return-type>java.text.AttributedCharacterIterator</return-type>
<method-signature>formatToCharacterIterator(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDecimalFormatSymbols</method-name>
<return-type>java.text.DecimalFormatSymbols</return-type>
<method-signature>getDecimalFormatSymbols()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurrency</method-name>
<return-type>java.util.Currency</return-type>
<method-signature>getCurrency()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.DecimalFormatSymbols">
<source>
<method-name>getDecimalSeparator</method-name>
<return-type>char</return-type>
<method-signature>getDecimalSeparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDigit</method-name>
<return-type>char</return-type>
<method-signature>getDigit()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGroupingSeparator</method-name>
<return-type>char</return-type>
<method-signature>getGroupingSeparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinusSign</method-name>
<return-type>char</return-type>
<method-signature>getMinusSign()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonetaryDecimalSeparator</method-name>
<return-type>char</return-type>
<method-signature>getMonetaryDecimalSeparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPatternSeparator</method-name>
<return-type>char</return-type>
<method-signature>getPatternSeparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPerMill</method-name>
<return-type>char</return-type>
<method-signature>getPerMill()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPercent</method-name>
<return-type>char</return-type>
<method-signature>getPercent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getZeroDigit</method-name>
<return-type>char</return-type>
<method-signature>getZeroDigit()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurrencySymbol</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCurrencySymbol()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExponentSeparator</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getExponentSeparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInfinity</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getInfinity()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInternationalCurrencySymbol</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getInternationalCurrencySymbol()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNaN</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getNaN()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.DecimalFormatSymbols</return-type>
<method-signature>getInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.DecimalFormatSymbols</return-type>
<method-signature>getInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurrency</method-name>
<return-type>java.util.Currency</return-type>
<method-signature>getCurrency()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.FieldPosition">
<source>
<method-name>getBeginIndex</method-name>
<return-type>int</return-type>
<method-signature>getBeginIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEndIndex</method-name>
<return-type>int</return-type>
<method-signature>getEndIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getField</method-name>
<return-type>int</return-type>
<method-signature>getField()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFieldAttribute</method-name>
<return-type>java.text.Formate&#36;Field</return-type>
<method-signature>getFieldAttribute()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.Format">
<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseObject</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>parseObject(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>formatToCharacterIterator</method-name>
<return-type>java.text.AttributedCharacterIterator</return-type>
<method-signature>formatToCharacterIterator(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.MessageFormate&#36;Field">
<source>
<method-name>readResolve</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>readResolve()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.MessageFormat">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseObject</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>parseObject(java.lang.String,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>parse(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>parse(java.lang.String,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>toPattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toPattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>formatToCharacterIterator</method-name>
<return-type>java.text.AttributedCharacterIterator</return-type>
<method-signature>formatToCharacterIterator(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFormats</method-name>
<return-type>java.text.Format[]</return-type>
<method-signature>getFormats()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFormatsByArgumentIndex</method-name>
<return-type>java.text.Format[]</return-type>
<method-signature>getFormatsByArgumentIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocale</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>getLocale()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.NumberFormate&#36;Field">
<source>
<method-name>readResolve</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>readResolve()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.NumberFormat">
<source>
<method-name>getMaximumFractionDigits</method-name>
<return-type>int</return-type>
<method-signature>getMaximumFractionDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaximumIntegerDigits</method-name>
<return-type>int</return-type>
<method-signature>getMaximumIntegerDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinimumFractionDigits</method-name>
<return-type>int</return-type>
<method-signature>getMinimumFractionDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinimumIntegerDigits</method-name>
<return-type>int</return-type>
<method-signature>getMinimumIntegerDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.lang.Number</return-type>
<method-signature>parse(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parseObject</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>parseObject(java.lang.String,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>getRoundingMode</method-name>
<return-type>java.math.RoundingMode</return-type>
<method-signature>getRoundingMode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurrencyInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getCurrencyInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurrencyInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getCurrencyInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIntegerInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getIntegerInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIntegerInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getIntegerInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNumberInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getNumberInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNumberInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getNumberInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPercentInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getPercentInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPercentInstance</method-name>
<return-type>java.text.NumberFormat</return-type>
<method-signature>getPercentInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurrency</method-name>
<return-type>java.util.Currency</return-type>
<method-signature>getCurrency()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.ParseException">
<source>
<method-name>getErrorOffset</method-name>
<return-type>int</return-type>
<method-signature>getErrorOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.ParsePosition">
<source>
<method-name>getErrorIndex</method-name>
<return-type>int</return-type>
<method-signature>getErrorIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.RuleBasedCollator">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRules</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRules()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCollationElementIterator</method-name>
<return-type>java.text.CollationElementIterator</return-type>
<method-signature>getCollationElementIterator(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCollationElementIterator</method-name>
<return-type>java.text.CollationElementIterator</return-type>
<method-signature>getCollationElementIterator(java.text.CharacterIterator)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCollationKey</method-name>
<return-type>java.text.CollationKey</return-type>
<method-signature>getCollationKey(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.text.SimpleDateFormat">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalizedPattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toLocalizedPattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toPattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toPattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Date,java.lang.StringBuffer,java.text.FieldPosition</parameter-type>
</source>

<source>
<method-name>formatToCharacterIterator</method-name>
<return-type>java.text.AttributedCharacterIterator</return-type>
<method-signature>formatToCharacterIterator(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDateFormatSymbols</method-name>
<return-type>java.text.DateFormatSymbols</return-type>
<method-signature>getDateFormatSymbols()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get2DigitYearStart</method-name>
<return-type>java.util.Date</return-type>
<method-signature>get2DigitYearStart()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.util.Date</return-type>
<method-signature>parse(java.lang.String,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.text.ParsePosition</parameter-type>
</source>

</class>
<class class-name="java.text.StringCharacterIterator">
<source>
<method-name>current</method-name>
<return-type>char</return-type>
<method-signature>current()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>first</method-name>
<return-type>char</return-type>
<method-signature>first()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>last</method-name>
<return-type>char</return-type>
<method-signature>last()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>next</method-name>
<return-type>char</return-type>
<method-signature>next()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>previous</method-name>
<return-type>char</return-type>
<method-signature>previous()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBeginIndex</method-name>
<return-type>int</return-type>
<method-signature>getBeginIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEndIndex</method-name>
<return-type>int</return-type>
<method-signature>getEndIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.Clock">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>fixed</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>fixed(java.time.Instant,java.time.ZoneId)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Instant,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>offset</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>offset(java.time.Clock,java.time.Duration)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Clock,java.time.Duration</parameter-type>
</source>

<source>
<method-name>system</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>system(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>systemDefaultZone</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>systemDefaultZone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>systemUTC</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>systemUTC()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>tick</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>tick(java.time.Clock,java.time.Duration)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Clock,java.time.Duration</parameter-type>
</source>

<source>
<method-name>tickMinutes</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>tickMinutes(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>tickSeconds</method-name>
<return-type>java.time.Clock</return-type>
<method-signature>tickSeconds(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>millis</method-name>
<return-type>long</return-type>
<method-signature>millis()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.DayOfWeek">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>int</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(java.time.format.TextStyle,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.format.TextStyle,java.util.Locale</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>minus(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>of(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>plus(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.time.DayOfWeek[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.Duration">
<source>
<method-name>getNano</method-name>
<return-type>int</return-type>
<method-signature>getNano()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>abs</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>abs()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>between</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>between(java.time.temporal.Temporal,java.time.temporal.Temporal)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.Temporal</parameter-type>
</source>

<source>
<method-name>dividedBy</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>dividedBy(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>from(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minus(java.time.Duration)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusDays</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusHours</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMillis</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minusMillis(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMinutes</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusNanos</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusSeconds</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>minusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>multipliedBy</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>multipliedBy(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>negated</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>negated()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>of(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>ofDays</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>ofDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofHours</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>ofHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofMillis</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>ofMillis(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofMinutes</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>ofMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofNanos</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>ofNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofSeconds</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>ofSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofSeconds</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>ofSeconds(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plus(java.time.Duration)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusDays</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusHours</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMillis</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plusMillis(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMinutes</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusNanos</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusSeconds</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>plusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withNanos</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>withNanos(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withSeconds</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>withSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>addTo</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>addTo(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subtractFrom</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>subtractFrom(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUnits</method-name>
<return-type>java.util.List</return-type>
<method-signature>getUnits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>long</return-type>
<method-signature>get(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSeconds</method-name>
<return-type>long</return-type>
<method-signature>getSeconds()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toDays</method-name>
<return-type>long</return-type>
<method-signature>toDays()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toHours</method-name>
<return-type>long</return-type>
<method-signature>toHours()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toMillis</method-name>
<return-type>long</return-type>
<method-signature>toMillis()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toMinutes</method-name>
<return-type>long</return-type>
<method-signature>toMinutes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toNanos</method-name>
<return-type>long</return-type>
<method-signature>toNanos()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.Instant">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNano</method-name>
<return-type>int</return-type>
<method-signature>getNano()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusMillis</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>minusMillis(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusNanos</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>minusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusSeconds</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>minusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>now()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>now(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofEpochMilli</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>ofEpochMilli(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofEpochSecond</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>ofEpochSecond(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofEpochSecond</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>ofEpochSecond(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusMillis</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>plusMillis(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusNanos</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>plusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusSeconds</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>plusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>truncatedTo</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>truncatedTo(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>with(java.time.temporal.TemporalAdjuster)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>with(java.time.temporal.TemporalField,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.TemporalField,long</parameter-type>
</source>

<source>
<method-name>atOffset</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>atOffset(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atZone</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>atZone(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEpochSecond</method-name>
<return-type>long</return-type>
<method-signature>getEpochSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toEpochMilli</method-name>
<return-type>long</return-type>
<method-signature>toEpochMilli()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>long</return-type>
<method-signature>until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.TemporalUnit</parameter-type>
</source>

</class>
<class class-name="java.time.LocalDate">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfMonth</method-name>
<return-type>int</return-type>
<method-signature>getDayOfMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfYear</method-name>
<return-type>int</return-type>
<method-signature>getDayOfYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonthValue</method-name>
<return-type>int</return-type>
<method-signature>getMonthValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getYear</method-name>
<return-type>int</return-type>
<method-signature>getYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfWeek</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>getDayOfWeek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusDays</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>minusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMonths</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>minusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusWeeks</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>minusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusYears</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>minusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>now()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>now(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>now(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>of(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>of(int,java.time.Month,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,java.time.Month,int</parameter-type>
</source>

<source>
<method-name>ofEpochDay</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>ofEpochDay(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofYearDay</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>ofYearDay(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.format.DateTimeFormatter</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusDays</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>plusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMonths</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>plusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusWeeks</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>plusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusYears</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>plusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>with(java.time.temporal.TemporalAdjuster)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>with(java.time.temporal.TemporalField,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.TemporalField,long</parameter-type>
</source>

<source>
<method-name>withDayOfMonth</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>withDayOfMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withDayOfYear</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>withDayOfYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMonth</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>withMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withYear</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>withYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atStartOfDay</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>atStartOfDay()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atTime</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>atTime(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>atTime</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>atTime(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>atTime</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>atTime(int,int,int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,int,int,int</parameter-type>
</source>

<source>
<method-name>atTime</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>atTime(java.time.LocalTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonth</method-name>
<return-type>java.time.Month</return-type>
<method-signature>getMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atTime</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>atTime(java.time.OffsetTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>java.time.Period</return-type>
<method-signature>until(java.time.chrono.ChronoLocalDate)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atStartOfDay</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>atStartOfDay(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEra</method-name>
<return-type>java.time.chrono.Era</return-type>
<method-signature>getEra()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChronology</method-name>
<return-type>java.time.chrono.IsoChronology</return-type>
<method-signature>getChronology()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toEpochDay</method-name>
<return-type>long</return-type>
<method-signature>toEpochDay()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>long</return-type>
<method-signature>until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.TemporalUnit</parameter-type>
</source>

</class>
<class class-name="java.time.LocalDateTime">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfMonth</method-name>
<return-type>int</return-type>
<method-signature>getDayOfMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfYear</method-name>
<return-type>int</return-type>
<method-signature>getDayOfYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHour</method-name>
<return-type>int</return-type>
<method-signature>getHour()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinute</method-name>
<return-type>int</return-type>
<method-signature>getMinute()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonthValue</method-name>
<return-type>int</return-type>
<method-signature>getMonthValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNano</method-name>
<return-type>int</return-type>
<method-signature>getNano()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecond</method-name>
<return-type>int</return-type>
<method-signature>getSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getYear</method-name>
<return-type>int</return-type>
<method-signature>getYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfWeek</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>getDayOfWeek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalDate</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>toLocalDate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusDays</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusHours</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMinutes</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMonths</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusNanos</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusSeconds</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusWeeks</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusYears</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>minusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>now()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>now(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>now(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>of(int,int,int,int,int)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>int,int,int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>of(int,int,int,int,int,int)</method-signature>
<parameter-number>6</parameter-number>
<parameter-type>int,int,int,int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>of(int,int,int,int,int,int,int)</method-signature>
<parameter-number>7</parameter-number>
<parameter-type>int,int,int,int,int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>of(int,java.time.Month,int,int,int)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>int,java.time.Month,int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>of(int,java.time.Month,int,int,int,int)</method-signature>
<parameter-number>6</parameter-number>
<parameter-type>int,java.time.Month,int,int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>of(int,java.time.Month,int,int,int,int,int)</method-signature>
<parameter-number>7</parameter-number>
<parameter-type>int,java.time.Month,int,int,int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>of(java.time.LocalDate,java.time.LocalTime)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.LocalDate,java.time.LocalTime</parameter-type>
</source>

<source>
<method-name>ofEpochSecond</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>ofEpochSecond(long,int,java.time.ZoneOffset)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,int,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>ofInstant</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>ofInstant(java.time.Instant,java.time.ZoneId)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Instant,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.format.DateTimeFormatter</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusDays</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusHours</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMinutes</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMonths</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusNanos</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusSeconds</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusWeeks</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusYears</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>plusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>truncatedTo</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>truncatedTo(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>with(java.time.temporal.TemporalAdjuster)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>with(java.time.temporal.TemporalField,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.TemporalField,long</parameter-type>
</source>

<source>
<method-name>withDayOfMonth</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withDayOfMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withDayOfYear</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withDayOfYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withHour</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withHour(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMinute</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withMinute(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMonth</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withNano</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withNano(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withSecond</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withSecond(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withYear</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>withYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalTime</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>toLocalTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonth</method-name>
<return-type>java.time.Month</return-type>
<method-signature>getMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atOffset</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>atOffset(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atZone</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>atZone(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>long</return-type>
<method-signature>until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.TemporalUnit</parameter-type>
</source>

</class>
<class class-name="java.time.LocalTime">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHour</method-name>
<return-type>int</return-type>
<method-signature>getHour()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinute</method-name>
<return-type>int</return-type>
<method-signature>getMinute()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNano</method-name>
<return-type>int</return-type>
<method-signature>getNano()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecond</method-name>
<return-type>int</return-type>
<method-signature>getSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atDate</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>atDate(java.time.LocalDate)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusHours</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>minusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMinutes</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>minusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusNanos</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>minusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusSeconds</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>minusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>now()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>now(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>now(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>of(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>of(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>of(int,int,int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,int,int,int</parameter-type>
</source>

<source>
<method-name>ofNanoOfDay</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>ofNanoOfDay(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofSecondOfDay</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>ofSecondOfDay(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.format.DateTimeFormatter</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusHours</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>plusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMinutes</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>plusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusNanos</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>plusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusSeconds</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>plusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>truncatedTo</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>truncatedTo(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>with(java.time.temporal.TemporalAdjuster)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>with(java.time.temporal.TemporalField,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.TemporalField,long</parameter-type>
</source>

<source>
<method-name>withHour</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>withHour(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMinute</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>withMinute(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withNano</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>withNano(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withSecond</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>withSecond(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atOffset</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>atOffset(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toNanoOfDay</method-name>
<return-type>long</return-type>
<method-signature>toNanoOfDay()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>long</return-type>
<method-signature>until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.TemporalUnit</parameter-type>
</source>

</class>
<class class-name="java.time.Month">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>int</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(java.time.format.TextStyle,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.format.TextStyle,java.util.Locale</parameter-type>
</source>

<source>
<method-name>firstMonthOfQuarter</method-name>
<return-type>java.time.Month</return-type>
<method-signature>firstMonthOfQuarter()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.Month</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.Month</return-type>
<method-signature>minus(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.Month</return-type>
<method-signature>of(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.Month</return-type>
<method-signature>plus(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.time.Month</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.time.Month[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.OffsetDateTime">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfMonth</method-name>
<return-type>int</return-type>
<method-signature>getDayOfMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfYear</method-name>
<return-type>int</return-type>
<method-signature>getDayOfYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHour</method-name>
<return-type>int</return-type>
<method-signature>getHour()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinute</method-name>
<return-type>int</return-type>
<method-signature>getMinute()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonthValue</method-name>
<return-type>int</return-type>
<method-signature>getMonthValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNano</method-name>
<return-type>int</return-type>
<method-signature>getNano()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecond</method-name>
<return-type>int</return-type>
<method-signature>getSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getYear</method-name>
<return-type>int</return-type>
<method-signature>getYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfWeek</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>getDayOfWeek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toInstant</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>toInstant()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalDate</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>toLocalDate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalDateTime</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>toLocalDateTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalTime</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>toLocalTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonth</method-name>
<return-type>java.time.Month</return-type>
<method-signature>getMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusDays</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusHours</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMinutes</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMonths</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusNanos</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusSeconds</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusWeeks</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusYears</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>minusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>now()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>now(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>now(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>of(int,int,int,int,int,int,int,java.time.ZoneOffset)</method-signature>
<parameter-number>8</parameter-number>
<parameter-type>int,int,int,int,int,int,int,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>of(java.time.LocalDate,java.time.LocalTime,java.time.ZoneOffset)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.time.LocalDate,java.time.LocalTime,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>of(java.time.LocalDateTime,java.time.ZoneOffset)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.LocalDateTime,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>ofInstant</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>ofInstant(java.time.Instant,java.time.ZoneId)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Instant,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.format.DateTimeFormatter</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusDays</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusHours</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMinutes</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMonths</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusNanos</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusSeconds</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusWeeks</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusYears</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>plusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>truncatedTo</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>truncatedTo(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>with(java.time.temporal.TemporalAdjuster)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>with(java.time.temporal.TemporalField,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.TemporalField,long</parameter-type>
</source>

<source>
<method-name>withDayOfMonth</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withDayOfMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withDayOfYear</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withDayOfYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withHour</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withHour(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMinute</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withMinute(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMonth</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withNano</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withNano(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withOffsetSameInstant</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withOffsetSameInstant(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withOffsetSameLocal</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withOffsetSameLocal(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withSecond</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withSecond(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withYear</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>withYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toOffsetTime</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>toOffsetTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atZoneSameInstant</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>atZoneSameInstant(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atZoneSimilarLocal</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>atZoneSimilarLocal(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toZonedDateTime</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>toZonedDateTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>timeLineOrder</method-name>
<return-type>java.util.Comparator</return-type>
<method-signature>timeLineOrder()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toEpochSecond</method-name>
<return-type>long</return-type>
<method-signature>toEpochSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>long</return-type>
<method-signature>until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.TemporalUnit</parameter-type>
</source>

</class>
<class class-name="java.time.OffsetTime">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHour</method-name>
<return-type>int</return-type>
<method-signature>getHour()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinute</method-name>
<return-type>int</return-type>
<method-signature>getMinute()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNano</method-name>
<return-type>int</return-type>
<method-signature>getNano()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecond</method-name>
<return-type>int</return-type>
<method-signature>getSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalTime</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>toLocalTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>atDate</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>atDate(java.time.LocalDate)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusHours</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>minusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMinutes</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>minusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusNanos</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>minusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusSeconds</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>minusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>now()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>now(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>now(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>of(int,int,int,int,java.time.ZoneOffset)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>int,int,int,int,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>of(java.time.LocalTime,java.time.ZoneOffset)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.LocalTime,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>ofInstant</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>ofInstant(java.time.Instant,java.time.ZoneId)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Instant,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.format.DateTimeFormatter</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusHours</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>plusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMinutes</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>plusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusNanos</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>plusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusSeconds</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>plusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>truncatedTo</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>truncatedTo(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>with(java.time.temporal.TemporalAdjuster)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>with(java.time.temporal.TemporalField,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.TemporalField,long</parameter-type>
</source>

<source>
<method-name>withHour</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>withHour(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMinute</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>withMinute(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withNano</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>withNano(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withOffsetSameInstant</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>withOffsetSameInstant(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withOffsetSameLocal</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>withOffsetSameLocal(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withSecond</method-name>
<return-type>java.time.OffsetTime</return-type>
<method-signature>withSecond(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>long</return-type>
<method-signature>until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.TemporalUnit</parameter-type>
</source>

</class>
<class class-name="java.time.Period">
<source>
<method-name>getDays</method-name>
<return-type>int</return-type>
<method-signature>getDays()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonths</method-name>
<return-type>int</return-type>
<method-signature>getMonths()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getYears</method-name>
<return-type>int</return-type>
<method-signature>getYears()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>between</method-name>
<return-type>java.time.Period</return-type>
<method-signature>between(java.time.LocalDate,java.time.LocalDate)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.LocalDate,java.time.LocalDate</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.Period</return-type>
<method-signature>from(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.Period</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusDays</method-name>
<return-type>java.time.Period</return-type>
<method-signature>minusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMonths</method-name>
<return-type>java.time.Period</return-type>
<method-signature>minusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusYears</method-name>
<return-type>java.time.Period</return-type>
<method-signature>minusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>multipliedBy</method-name>
<return-type>java.time.Period</return-type>
<method-signature>multipliedBy(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>negated</method-name>
<return-type>java.time.Period</return-type>
<method-signature>negated()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>normalized</method-name>
<return-type>java.time.Period</return-type>
<method-signature>normalized()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.Period</return-type>
<method-signature>of(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>ofDays</method-name>
<return-type>java.time.Period</return-type>
<method-signature>ofDays(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofMonths</method-name>
<return-type>java.time.Period</return-type>
<method-signature>ofMonths(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofWeeks</method-name>
<return-type>java.time.Period</return-type>
<method-signature>ofWeeks(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofYears</method-name>
<return-type>java.time.Period</return-type>
<method-signature>ofYears(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.Period</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.Period</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusDays</method-name>
<return-type>java.time.Period</return-type>
<method-signature>plusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMonths</method-name>
<return-type>java.time.Period</return-type>
<method-signature>plusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusYears</method-name>
<return-type>java.time.Period</return-type>
<method-signature>plusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withDays</method-name>
<return-type>java.time.Period</return-type>
<method-signature>withDays(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMonths</method-name>
<return-type>java.time.Period</return-type>
<method-signature>withMonths(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withYears</method-name>
<return-type>java.time.Period</return-type>
<method-signature>withYears(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChronology</method-name>
<return-type>java.time.chrono.IsoChronology</return-type>
<method-signature>getChronology()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>addTo</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>addTo(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subtractFrom</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>subtractFrom(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUnits</method-name>
<return-type>java.util.List</return-type>
<method-signature>getUnits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>long</return-type>
<method-signature>get(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toTotalMonths</method-name>
<return-type>long</return-type>
<method-signature>toTotalMonths()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.ZoneId">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(java.time.format.TextStyle,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.format.TextStyle,java.util.Locale</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>normalized</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>normalized()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>of(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>of(java.lang.String,java.util.Map)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Map</parameter-type>
</source>

<source>
<method-name>ofOffset</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>ofOffset(java.lang.String,java.time.ZoneOffset)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>systemDefault</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>systemDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableZoneIds</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAvailableZoneIds()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.ZoneOffset">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTotalSeconds</method-name>
<return-type>int</return-type>
<method-signature>getTotalSeconds()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>of(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofHours</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>ofHours(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofHoursMinutes</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>ofHoursMinutes(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>ofHoursMinutesSeconds</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>ofHoursMinutesSeconds(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>ofTotalSeconds</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>ofTotalSeconds(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRules</method-name>
<return-type>java.time.zone.ZoneRules</return-type>
<method-signature>getRules()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.ZonedDateTime">
<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfMonth</method-name>
<return-type>int</return-type>
<method-signature>getDayOfMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfYear</method-name>
<return-type>int</return-type>
<method-signature>getDayOfYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHour</method-name>
<return-type>int</return-type>
<method-signature>getHour()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinute</method-name>
<return-type>int</return-type>
<method-signature>getMinute()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonthValue</method-name>
<return-type>int</return-type>
<method-signature>getMonthValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNano</method-name>
<return-type>int</return-type>
<method-signature>getNano()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSecond</method-name>
<return-type>int</return-type>
<method-signature>getSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getYear</method-name>
<return-type>int</return-type>
<method-signature>getYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>query</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>query(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDayOfWeek</method-name>
<return-type>java.time.DayOfWeek</return-type>
<method-signature>getDayOfWeek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalDate</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>toLocalDate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalDateTime</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>toLocalDateTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocalTime</method-name>
<return-type>java.time.LocalTime</return-type>
<method-signature>toLocalTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonth</method-name>
<return-type>java.time.Month</return-type>
<method-signature>getMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toOffsetDateTime</method-name>
<return-type>java.time.OffsetDateTime</return-type>
<method-signature>toOffsetDateTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getZone</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>getZone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>from(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minus</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>minusDays</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusHours</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMinutes</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusMonths</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusNanos</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusSeconds</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusWeeks</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>minusYears</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>minusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>now()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>now(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>now</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>now(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>of(int,int,int,int,int,int,int,java.time.ZoneId)</method-signature>
<parameter-number>8</parameter-number>
<parameter-type>int,int,int,int,int,int,int,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>of(java.time.LocalDate,java.time.LocalTime,java.time.ZoneId)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.time.LocalDate,java.time.LocalTime,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>of(java.time.LocalDateTime,java.time.ZoneId)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.LocalDateTime,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>ofInstant</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>ofInstant(java.time.Instant,java.time.ZoneId)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Instant,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>ofInstant</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>ofLocal</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>ofStrict</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.format.DateTimeFormatter</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plus(java.time.temporal.TemporalAmount)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plus</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plus(long,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalUnit</parameter-type>
</source>

<source>
<method-name>plusDays</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusHours</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMinutes</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusMonths</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusMonths(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusNanos</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusSeconds</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusWeeks</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusWeeks(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>plusYears</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>plusYears(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>truncatedTo</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>truncatedTo(java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>with(java.time.temporal.TemporalAdjuster)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>with</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>with(java.time.temporal.TemporalField,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.TemporalField,long</parameter-type>
</source>

<source>
<method-name>withDayOfMonth</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withDayOfMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withDayOfYear</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withDayOfYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withEarlierOffsetAtOverlap</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withEarlierOffsetAtOverlap()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withFixedOffsetZone</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withFixedOffsetZone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withHour</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withHour(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withLaterOffsetAtOverlap</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withLaterOffsetAtOverlap()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMinute</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withMinute(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withMonth</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withMonth(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withNano</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withNano(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withSecond</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withSecond(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withYear</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withYear(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withZoneSameInstant</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withZoneSameInstant(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withZoneSameLocal</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>withZoneSameLocal(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.time.temporal.TemporalField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>until</method-name>
<return-type>long</return-type>
<method-signature>until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,java.time.temporal.TemporalUnit</parameter-type>
</source>

</class>
<class class-name="java.time.chrono.AbstractChronology">
<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.time.chrono.Chronology)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>resolveDate</method-name>
<return-type>java.time.chrono.ChronoLocalDate</return-type>
<method-signature>resolveDate(java.util.Map,java.time.format.ResolverStyle)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.Map,java.time.format.ResolverStyle</parameter-type>
</source>

</class>
<class class-name="java.time.chrono.IsoChronology">
<source>
<method-name>getCalendarType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCalendarType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>date</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>date(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>date</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>date(java.time.chrono.Era,int,int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.time.chrono.Era,int,int,int</parameter-type>
</source>

<source>
<method-name>date</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>date(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>dateEpochDay</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>dateEpochDay(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>dateNow</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>dateNow()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>dateNow</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>dateNow(java.time.Clock)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>dateNow</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>dateNow(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>dateYearDay</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>dateYearDay(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>dateYearDay</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>dateYearDay(java.time.chrono.Era,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.time.chrono.Era,int,int</parameter-type>
</source>

<source>
<method-name>resolveDate</method-name>
<return-type>java.time.LocalDate</return-type>
<method-signature>resolveDate(java.util.Map,java.time.format.ResolverStyle)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.Map,java.time.format.ResolverStyle</parameter-type>
</source>

<source>
<method-name>localDateTime</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>localDateTime(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>period</method-name>
<return-type>java.time.Period</return-type>
<method-signature>period(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>zonedDateTime</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>zonedDateTime(java.time.Instant,java.time.ZoneId)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.Instant,java.time.ZoneId</parameter-type>
</source>

<source>
<method-name>zonedDateTime</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>zonedDateTime(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>eraOf</method-name>
<return-type>java.time.chrono.IsoEra</return-type>
<method-signature>eraOf(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range(java.time.temporal.ChronoField)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>eras</method-name>
<return-type>java.util.List</return-type>
<method-signature>eras()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.chrono.IsoEra">
<source>
<method-name>getValue</method-name>
<return-type>int</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.chrono.IsoEra</return-type>
<method-signature>of(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.time.chrono.IsoEra</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.time.chrono.IsoEra[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.format.DateTimeFormatter">
<source>
<method-name>parse</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.temporal.TemporalQuery</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.lang.String</return-type>
<method-signature>format(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toFormat</method-name>
<return-type>java.text.Format</return-type>
<method-signature>toFormat()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toFormat</method-name>
<return-type>java.text.Format</return-type>
<method-signature>toFormat(java.time.temporal.TemporalQuery)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getZone</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>getZone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getChronology</method-name>
<return-type>java.time.chrono.Chronology</return-type>
<method-signature>getChronology()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofLocalizedDate</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>ofLocalizedDate(java.time.format.FormatStyle)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofLocalizedDateTime</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>ofLocalizedDateTime(java.time.format.FormatStyle)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofLocalizedDateTime</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>ofLocalizedDateTime(java.time.format.FormatStyle,java.time.format.FormatStyle)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.format.FormatStyle,java.time.format.FormatStyle</parameter-type>
</source>

<source>
<method-name>ofLocalizedTime</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>ofLocalizedTime(java.time.format.FormatStyle)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofPattern</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>ofPattern(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofPattern</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>ofPattern(java.lang.String,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Locale</parameter-type>
</source>

<source>
<method-name>withChronology</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>withChronology(java.time.chrono.Chronology)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withDecimalStyle</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>withDecimalStyle(java.time.format.DecimalStyle)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withLocale</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>withLocale(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withResolverFields</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>withResolverFields(java.time.temporal.TemporalField[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withResolverFields</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>withResolverFields(java.util.Set)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withResolverStyle</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>withResolverStyle(java.time.format.ResolverStyle)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withZone</method-name>
<return-type>java.time.format.DateTimeFormatter</return-type>
<method-signature>withZone(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDecimalStyle</method-name>
<return-type>java.time.format.DecimalStyle</return-type>
<method-signature>getDecimalStyle()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResolverStyle</method-name>
<return-type>java.time.format.ResolverStyle</return-type>
<method-signature>getResolverStyle()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.temporal.TemporalAccessor</return-type>
<method-signature>parse(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.time.temporal.TemporalAccessor</return-type>
<method-signature>parse(java.lang.CharSequence,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>parseBest</method-name>
<return-type>java.time.temporal.TemporalAccessor</return-type>
<method-signature>parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.time.temporal.TemporalQuery[]</parameter-type>
</source>

<source>
<method-name>parseUnresolved</method-name>
<return-type>java.time.temporal.TemporalAccessor</return-type>
<method-signature>parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,java.text.ParsePosition</parameter-type>
</source>

<source>
<method-name>parsedExcessDays</method-name>
<return-type>java.time.temporal.TemporalQuery</return-type>
<method-signature>parsedExcessDays()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parsedLeapSecond</method-name>
<return-type>java.time.temporal.TemporalQuery</return-type>
<method-signature>parsedLeapSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocale</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>getLocale()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResolverFields</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getResolverFields()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.format.DecimalStyle">
<source>
<method-name>getDecimalSeparator</method-name>
<return-type>char</return-type>
<method-signature>getDecimalSeparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNegativeSign</method-name>
<return-type>char</return-type>
<method-signature>getNegativeSign()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPositiveSign</method-name>
<return-type>char</return-type>
<method-signature>getPositiveSign()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getZeroDigit</method-name>
<return-type>char</return-type>
<method-signature>getZeroDigit()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.format.DecimalStyle</return-type>
<method-signature>of(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofDefaultLocale</method-name>
<return-type>java.time.format.DecimalStyle</return-type>
<method-signature>ofDefaultLocale()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withDecimalSeparator</method-name>
<return-type>java.time.format.DecimalStyle</return-type>
<method-signature>withDecimalSeparator(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withNegativeSign</method-name>
<return-type>java.time.format.DecimalStyle</return-type>
<method-signature>withNegativeSign(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withPositiveSign</method-name>
<return-type>java.time.format.DecimalStyle</return-type>
<method-signature>withPositiveSign(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>withZeroDigit</method-name>
<return-type>java.time.format.DecimalStyle</return-type>
<method-signature>withZeroDigit(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.format.FormatStyle">
<source>
<method-name>valueOf</method-name>
<return-type>java.time.format.FormatStyle</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.time.format.FormatStyle[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.format.ResolverStyle">
<source>
<method-name>valueOf</method-name>
<return-type>java.time.format.ResolverStyle</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.time.format.ResolverStyle[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.format.TextStyle">
<source>
<method-name>asNormal</method-name>
<return-type>java.time.format.TextStyle</return-type>
<method-signature>asNormal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>asStandalone</method-name>
<return-type>java.time.format.TextStyle</return-type>
<method-signature>asStandalone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.time.format.TextStyle</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.time.format.TextStyle[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.temporal.ChronoField">
<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.time.temporal.ChronoField</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.time.temporal.ChronoField[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>adjustInto</method-name>
<return-type>java.time.temporal.Temporal</return-type>
<method-signature>adjustInto(java.time.temporal.Temporal,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.time.temporal.Temporal,long</parameter-type>
</source>

<source>
<method-name>getBaseUnit</method-name>
<return-type>java.time.temporal.TemporalUnit</return-type>
<method-signature>getBaseUnit()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRangeUnit</method-name>
<return-type>java.time.temporal.TemporalUnit</return-type>
<method-signature>getRangeUnit()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>range()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>rangeRefinedBy</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>rangeRefinedBy(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>checkValidValue</method-name>
<return-type>long</return-type>
<method-signature>checkValidValue(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFrom</method-name>
<return-type>long</return-type>
<method-signature>getFrom(java.time.temporal.TemporalAccessor)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.temporal.ValueRange">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>of(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>of(long,long,long)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,long,long</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.temporal.ValueRange</return-type>
<method-signature>of(long,long,long,long)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,long,long,long</parameter-type>
</source>

<source>
<method-name>checkValidValue</method-name>
<return-type>long</return-type>
<method-signature>checkValidValue(long,java.time.temporal.TemporalField)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.time.temporal.TemporalField</parameter-type>
</source>

<source>
<method-name>getLargestMinimum</method-name>
<return-type>long</return-type>
<method-signature>getLargestMinimum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaximum</method-name>
<return-type>long</return-type>
<method-signature>getMaximum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinimum</method-name>
<return-type>long</return-type>
<method-signature>getMinimum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSmallestMaximum</method-name>
<return-type>long</return-type>
<method-signature>getSmallestMaximum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.zone.ZoneOffsetTransition">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDuration</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>getDuration()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstant</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>getInstant()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDateTimeAfter</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>getDateTimeAfter()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDateTimeBefore</method-name>
<return-type>java.time.LocalDateTime</return-type>
<method-signature>getDateTimeBefore()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffsetAfter</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getOffsetAfter()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffsetBefore</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getOffsetBefore()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.zone.ZoneOffsetTransition</return-type>
<method-signature>of(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneOffset)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneOffset</parameter-type>
</source>

<source>
<method-name>toEpochSecond</method-name>
<return-type>long</return-type>
<method-signature>toEpochSecond()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.time.zone.ZoneRules">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDaylightSavings</method-name>
<return-type>java.time.Duration</return-type>
<method-signature>getDaylightSavings(java.time.Instant)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getOffset(java.time.Instant)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getOffset(java.time.LocalDateTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getStandardOffset</method-name>
<return-type>java.time.ZoneOffset</return-type>
<method-signature>getStandardOffset(java.time.Instant)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTransition</method-name>
<return-type>java.time.zone.ZoneOffsetTransition</return-type>
<method-signature>getTransition(java.time.LocalDateTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextTransition</method-name>
<return-type>java.time.zone.ZoneOffsetTransition</return-type>
<method-signature>nextTransition(java.time.Instant)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>previousTransition</method-name>
<return-type>java.time.zone.ZoneOffsetTransition</return-type>
<method-signature>previousTransition(java.time.Instant)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.zone.ZoneRules</return-type>
<method-signature>of(java.time.ZoneOffset)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.time.zone.ZoneRules</return-type>
<method-signature>of(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List</parameter-type>
</source>

<source>
<method-name>getTransitionRules</method-name>
<return-type>java.util.List</return-type>
<method-signature>getTransitionRules()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTransitions</method-name>
<return-type>java.util.List</return-type>
<method-signature>getTransitions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValidOffsets</method-name>
<return-type>java.util.List</return-type>
<method-signature>getValidOffsets(java.time.LocalDateTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractCollection">
<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractList">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>indexOf</method-name>
<return-type>int</return-type>
<method-signature>indexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastIndexOf</method-name>
<return-type>int</return-type>
<method-signature>lastIndexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>set</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>set(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subList</method-name>
<return-type>java.util.List</return-type>
<method-signature>subList(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractMape&#36;SimpleEntry">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>setValue(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractMape&#36;SimpleImmutableEntry">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>setValue(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractMap">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractQueue">
<source>
<method-name>element</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>element()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractSequentialList">
<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>set</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>set(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.AbstractSet">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.ArrayDeque">
<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>element</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>element()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>peek</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>peek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>peekFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>peekFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>peekLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>peekLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>poll</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>poll()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pollFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>pollFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pollLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>pollLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pop</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>pop()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>removeFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>removeFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>removeLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>removeLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.util.ArrayDeque</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>descendingIterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>descendingIterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>spliterator</method-name>
<return-type>java.util.Spliterator</return-type>
<method-signature>spliterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.ArrayList">
<source>
<method-name>indexOf</method-name>
<return-type>int</return-type>
<method-signature>indexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastIndexOf</method-name>
<return-type>int</return-type>
<method-signature>lastIndexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>set</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>set(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subList</method-name>
<return-type>java.util.List</return-type>
<method-signature>subList(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>spliterator</method-name>
<return-type>java.util.Spliterator</return-type>
<method-signature>spliterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.BitSet">
<source>
<method-name>toByteArray</method-name>
<return-type>byte[]</return-type>
<method-signature>toByteArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>cardinality</method-name>
<return-type>int</return-type>
<method-signature>cardinality()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>length</method-name>
<return-type>int</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextClearBit</method-name>
<return-type>int</return-type>
<method-signature>nextClearBit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextSetBit</method-name>
<return-type>int</return-type>
<method-signature>nextSetBit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>previousClearBit</method-name>
<return-type>int</return-type>
<method-signature>previousClearBit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>previousSetBit</method-name>
<return-type>int</return-type>
<method-signature>previousSetBit(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.util.BitSet</return-type>
<method-signature>get(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.util.BitSet</return-type>
<method-signature>valueOf(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.util.BitSet</return-type>
<method-signature>valueOf(java.nio.ByteBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.util.BitSet</return-type>
<method-signature>valueOf(java.nio.LongBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>valueOf</method-name>
<return-type>java.util.BitSet</return-type>
<method-signature>valueOf(long[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>stream</method-name>
<return-type>java.util.stream.IntStream</return-type>
<method-signature>stream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLongArray</method-name>
<return-type>long[]</return-type>
<method-signature>toLongArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Calendare&#36;Builder">
<source>
<method-name>build</method-name>
<return-type>java.util.Calendar</return-type>
<method-signature>build()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>set</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>set(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>setDate</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setDate(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>setFields</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setFields(int[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setInstant</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setInstant(java.util.Date)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setInstant</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setInstant(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setLenient</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setLenient(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setLocale</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setLocale(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setTimeOfDay</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setTimeOfDay(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>setTimeOfDay</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setTimeOfDay(int,int,int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>int,int,int,int</parameter-type>
</source>

<source>
<method-name>setTimeZone</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setTimeZone(java.util.TimeZone)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setWeekDate</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setWeekDate(int,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,int</parameter-type>
</source>

<source>
<method-name>setWeekDefinition</method-name>
<return-type>java.util.Calendare&#36;Builder</return-type>
<method-signature>setWeekDefinition(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

</class>
<class class-name="java.util.Calendar">
<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.util.Calendar)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getActualMaximum</method-name>
<return-type>int</return-type>
<method-signature>getActualMaximum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getActualMinimum</method-name>
<return-type>int</return-type>
<method-signature>getActualMinimum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFirstDayOfWeek</method-name>
<return-type>int</return-type>
<method-signature>getFirstDayOfWeek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinimalDaysInFirstWeek</method-name>
<return-type>int</return-type>
<method-signature>getMinimalDaysInFirstWeek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWeekYear</method-name>
<return-type>int</return-type>
<method-signature>getWeekYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWeeksInWeekYear</method-name>
<return-type>int</return-type>
<method-signature>getWeeksInWeekYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>internalGet</method-name>
<return-type>int</return-type>
<method-signature>internalGet(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCalendarType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCalendarType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(int,int,java.util.Locale)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,java.util.Locale</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toInstant</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>toInstant()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.util.Calendar</return-type>
<method-signature>getInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.util.Calendar</return-type>
<method-signature>getInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.util.Calendar</return-type>
<method-signature>getInstance(java.util.TimeZone)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.util.Calendar</return-type>
<method-signature>getInstance(java.util.TimeZone,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.TimeZone,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getTime</method-name>
<return-type>java.util.Date</return-type>
<method-signature>getTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayNames</method-name>
<return-type>java.util.Map</return-type>
<method-signature>getDisplayNames(int,int,java.util.Locale)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,int,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getAvailableCalendarTypes</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAvailableCalendarTypes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeZone</method-name>
<return-type>java.util.TimeZone</return-type>
<method-signature>getTimeZone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeInMillis</method-name>
<return-type>long</return-type>
<method-signature>getTimeInMillis()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Currency">
<source>
<method-name>getDefaultFractionDigits</method-name>
<return-type>int</return-type>
<method-signature>getDefaultFractionDigits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNumericCode</method-name>
<return-type>int</return-type>
<method-signature>getNumericCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCurrencyCode</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCurrencyCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSymbol</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSymbol()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSymbol</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSymbol(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.util.Currency</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>java.util.Currency</return-type>
<method-signature>getInstance(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableCurrencies</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getAvailableCurrencies()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Date">
<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compareTo</method-name>
<return-type>int</return-type>
<method-signature>compareTo(java.util.Date)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDate</method-name>
<return-type>int</return-type>
<method-signature>getDate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDay</method-name>
<return-type>int</return-type>
<method-signature>getDay()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHours</method-name>
<return-type>int</return-type>
<method-signature>getHours()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinutes</method-name>
<return-type>int</return-type>
<method-signature>getMinutes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMonth</method-name>
<return-type>int</return-type>
<method-signature>getMonth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSeconds</method-name>
<return-type>int</return-type>
<method-signature>getSeconds()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimezoneOffset</method-name>
<return-type>int</return-type>
<method-signature>getTimezoneOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getYear</method-name>
<return-type>int</return-type>
<method-signature>getYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toGMTString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toGMTString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toLocaleString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toLocaleString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toInstant</method-name>
<return-type>java.time.Instant</return-type>
<method-signature>toInstant()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.util.Date</return-type>
<method-signature>from(java.time.Instant)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>UTC</method-name>
<return-type>long</return-type>
<method-signature>UTC(int,int,int,int,int,int)</method-signature>
<parameter-number>6</parameter-number>
<parameter-type>int,int,int,int,int,int</parameter-type>
</source>

<source>
<method-name>getTime</method-name>
<return-type>long</return-type>
<method-signature>getTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>long</return-type>
<method-signature>parse(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.DoubleSummaryStatistics">
<source>
<method-name>getAverage</method-name>
<return-type>double</return-type>
<method-signature>getAverage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMax</method-name>
<return-type>double</return-type>
<method-signature>getMax()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMin</method-name>
<return-type>double</return-type>
<method-signature>getMin()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSum</method-name>
<return-type>double</return-type>
<method-signature>getSum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCount</method-name>
<return-type>long</return-type>
<method-signature>getCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.DuplicateFormatFlagsException">
<source>
<method-name>getFlags</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFlags()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.EnumMap">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Enum,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Enum,java.lang.Object</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.util.EnumMap</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.EnumSet">
<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>allOf</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>allOf(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>complementOf</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>complementOf(java.util.EnumSet)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>copyOf</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>copyOf(java.util.Collection)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>copyOf</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>copyOf(java.util.EnumSet)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>noneOf</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>noneOf(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>of(java.lang.Enum)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>of(java.lang.Enum,java.lang.Enum)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Enum,java.lang.Enum</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>of(java.lang.Enum,java.lang.Enum,java.lang.Enum)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Enum,java.lang.Enum,java.lang.Enum</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>of(java.lang.Enum,java.lang.Enum[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Enum,java.lang.Enum[]</parameter-type>
</source>

<source>
<method-name>range</method-name>
<return-type>java.util.EnumSet</return-type>
<method-signature>range(java.lang.Enum,java.lang.Enum)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Enum,java.lang.Enum</parameter-type>
</source>

</class>
<class class-name="java.util.EventListenerProxy">
<source>
<method-name>getListener</method-name>
<return-type>java.util.EventListener</return-type>
<method-signature>getListener()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.EventObject">
<source>
<method-name>getSource</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getSource()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.FormatFlagsConversionMismatchException">
<source>
<method-name>getConversion</method-name>
<return-type>char</return-type>
<method-signature>getConversion()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFlags</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFlags()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Formattere&#36;BigDecimalLayoutForm">
<source>
<method-name>valueOf</method-name>
<return-type>java.util.Formattere&#36;BigDecimalLayoutForm</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Formattere&#36;BigDecimalLayoutForm[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Formatter">
<source>
<method-name>ioException</method-name>
<return-type>java.io.IOException</return-type>
<method-signature>ioException()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>out</method-name>
<return-type>java.lang.Appendable</return-type>
<method-signature>out()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.util.Formatter</return-type>
<method-signature>format(java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>format</method-name>
<return-type>java.util.Formatter</return-type>
<method-signature>format(java.util.Locale,java.lang.String,java.lang.Object[])</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Locale,java.lang.String,java.lang.Object[]</parameter-type>
</source>

<source>
<method-name>locale</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>locale()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.GregorianCalendar">
<source>
<method-name>getActualMaximum</method-name>
<return-type>int</return-type>
<method-signature>getActualMaximum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getActualMinimum</method-name>
<return-type>int</return-type>
<method-signature>getActualMinimum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGreatestMinimum</method-name>
<return-type>int</return-type>
<method-signature>getGreatestMinimum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLeastMaximum</method-name>
<return-type>int</return-type>
<method-signature>getLeastMaximum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaximum</method-name>
<return-type>int</return-type>
<method-signature>getMaximum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMinimum</method-name>
<return-type>int</return-type>
<method-signature>getMinimum(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWeekYear</method-name>
<return-type>int</return-type>
<method-signature>getWeekYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWeeksInWeekYear</method-name>
<return-type>int</return-type>
<method-signature>getWeeksInWeekYear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCalendarType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCalendarType()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toZonedDateTime</method-name>
<return-type>java.time.ZonedDateTime</return-type>
<method-signature>toZonedDateTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGregorianChange</method-name>
<return-type>java.util.Date</return-type>
<method-signature>getGregorianChange()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>from</method-name>
<return-type>java.util.GregorianCalendar</return-type>
<method-signature>from(java.time.ZonedDateTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeZone</method-name>
<return-type>java.util.TimeZone</return-type>
<method-signature>getTimeZone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.HashMap">
<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compute</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>compute(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>computeIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfAbsent(java.lang.Object,java.util.function.Function)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.Function</parameter-type>
</source>

<source>
<method-name>computeIfPresent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfPresent(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOrDefault</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getOrDefault(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>merge</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>putIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>putIfAbsent(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>replace(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Hashtable">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compute</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>compute(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>computeIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfAbsent(java.lang.Object,java.util.function.Function)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.Function</parameter-type>
</source>

<source>
<method-name>computeIfPresent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfPresent(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOrDefault</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getOrDefault(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>merge</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>putIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>putIfAbsent(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>replace(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>elements</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>elements()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keys</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>keys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.IllegalFormatCodePointException">
<source>
<method-name>getCodePoint</method-name>
<return-type>int</return-type>
<method-signature>getCodePoint()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.IllegalFormatConversionException">
<source>
<method-name>getConversion</method-name>
<return-type>char</return-type>
<method-signature>getConversion()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getArgumentClass</method-name>
<return-type>java.lang.Class</return-type>
<method-signature>getArgumentClass()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.IllegalFormatFlagsException">
<source>
<method-name>getFlags</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFlags()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.IllegalFormatPrecisionException">
<source>
<method-name>getPrecision</method-name>
<return-type>int</return-type>
<method-signature>getPrecision()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.IllegalFormatWidthException">
<source>
<method-name>getWidth</method-name>
<return-type>int</return-type>
<method-signature>getWidth()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.IntSummaryStatistics">
<source>
<method-name>getAverage</method-name>
<return-type>double</return-type>
<method-signature>getAverage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMax</method-name>
<return-type>int</return-type>
<method-signature>getMax()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMin</method-name>
<return-type>int</return-type>
<method-signature>getMin()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCount</method-name>
<return-type>long</return-type>
<method-signature>getCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSum</method-name>
<return-type>long</return-type>
<method-signature>getSum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.LinkedHashMap">
<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOrDefault</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getOrDefault(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.LinkedList">
<source>
<method-name>indexOf</method-name>
<return-type>int</return-type>
<method-signature>indexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastIndexOf</method-name>
<return-type>int</return-type>
<method-signature>lastIndexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>element</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>element()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>peek</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>peek()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>peekFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>peekFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>peekLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>peekLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>poll</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>poll()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pollFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>pollFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pollLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>pollLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pop</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>pop()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>removeFirst</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>removeFirst()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>removeLast</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>removeLast()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>set</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>set(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>descendingIterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>descendingIterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>spliterator</method-name>
<return-type>java.util.Spliterator</return-type>
<method-signature>spliterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Localee&#36;Builder">
<source>
<method-name>build</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>build()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>addUnicodeLocaleAttribute</method-name>
<return-type>java.util.Localee&#36;Builder</return-type>
<method-signature>addUnicodeLocaleAttribute(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clear</method-name>
<return-type>java.util.Localee&#36;Builder</return-type>
<method-signature>clear()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clearExtensions</method-name>
<return-type>java.util.Localee&#36;Builder</return-type>
<method-signature>clearExtensions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>removeUnicodeLocaleAttribute</method-name>
<return-type>java.util.Localee&#36;Builder</return-type>
<method-signature>removeUnicodeLocaleAttribute(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Localee&#36;Category">
<source>
<method-name>valueOf</method-name>
<return-type>java.util.Localee&#36;Category</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Localee&#36;Category[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Localee&#36;FilteringMode">
<source>
<method-name>valueOf</method-name>
<return-type>java.util.Localee&#36;FilteringMode</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Localee&#36;FilteringMode[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Localee&#36;LanguageRange">
<source>
<method-name>getWeight</method-name>
<return-type>double</return-type>
<method-signature>getWeight()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRange</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getRange()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>mapEquivalents</method-name>
<return-type>java.util.List</return-type>
<method-signature>mapEquivalents(java.util.List,java.util.Map)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.List,java.util.Map</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.util.List</return-type>
<method-signature>parse(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.util.List</return-type>
<method-signature>parse(java.lang.String,java.util.Map)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Map</parameter-type>
</source>

</class>
<class class-name="java.util.Locale">
<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCountry</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCountry()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayCountry</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayCountry()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayCountry</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayCountry(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayLanguage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayLanguage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayLanguage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayLanguage(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayScript</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayScript()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayScript</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayScript(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayVariant</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayVariant()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayVariant</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayVariant(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExtension</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getExtension(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getISO3Country</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getISO3Country()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getISO3Language</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getISO3Language()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLanguage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getLanguage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getScript</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getScript()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUnicodeLocaleType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getUnicodeLocaleType(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getVariant</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getVariant()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lookupTag</method-name>
<return-type>java.lang.String</return-type>
<method-signature>lookupTag(java.util.List,java.util.Collection)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.List,java.util.Collection</parameter-type>
</source>

<source>
<method-name>toLanguageTag</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toLanguageTag()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getISOCountries</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getISOCountries()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getISOLanguages</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getISOLanguages()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>filter</method-name>
<return-type>java.util.List</return-type>
<method-signature>filter(java.util.List,java.util.Collection)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.List,java.util.Collection</parameter-type>
</source>

<source>
<method-name>filter</method-name>
<return-type>java.util.List</return-type>
<method-signature>filter(java.util.List,java.util.Collection,java.util.Localee&#36;FilteringMode)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.List,java.util.Collection,java.util.Localee&#36;FilteringMode</parameter-type>
</source>

<source>
<method-name>filterTags</method-name>
<return-type>java.util.List</return-type>
<method-signature>filterTags(java.util.List,java.util.Collection)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.List,java.util.Collection</parameter-type>
</source>

<source>
<method-name>filterTags</method-name>
<return-type>java.util.List</return-type>
<method-signature>filterTags(java.util.List,java.util.Collection,java.util.Localee&#36;FilteringMode)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.List,java.util.Collection,java.util.Localee&#36;FilteringMode</parameter-type>
</source>

<source>
<method-name>forLanguageTag</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>forLanguageTag(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefault</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefault</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>getDefault(java.util.Localee&#36;Category)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lookup</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>lookup(java.util.List,java.util.Collection)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.List,java.util.Collection</parameter-type>
</source>

<source>
<method-name>stripExtensions</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>stripExtensions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableLocales</method-name>
<return-type>java.util.Locale[]</return-type>
<method-signature>getAvailableLocales()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExtensionKeys</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getExtensionKeys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUnicodeLocaleAttributes</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getUnicodeLocaleAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getUnicodeLocaleKeys</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getUnicodeLocaleKeys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.LongSummaryStatistics">
<source>
<method-name>getAverage</method-name>
<return-type>double</return-type>
<method-signature>getAverage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCount</method-name>
<return-type>long</return-type>
<method-signature>getCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMax</method-name>
<return-type>long</return-type>
<method-signature>getMax()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMin</method-name>
<return-type>long</return-type>
<method-signature>getMin()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSum</method-name>
<return-type>long</return-type>
<method-signature>getSum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.MissingFormatArgumentException">
<source>
<method-name>getFormatSpecifier</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFormatSpecifier()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.MissingFormatWidthException">
<source>
<method-name>getFormatSpecifier</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFormatSpecifier()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.MissingResourceException">
<source>
<method-name>getClassName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getClassName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKey</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Optional">
<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElse</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>orElse(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElseGet</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>orElseGet(java.util.function.Supplier)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElseThrow</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>orElseThrow(java.util.function.Supplier)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>empty</method-name>
<return-type>java.util.Optional</return-type>
<method-signature>empty()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>filter</method-name>
<return-type>java.util.Optional</return-type>
<method-signature>filter(java.util.function.Predicate)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>flatMap</method-name>
<return-type>java.util.Optional</return-type>
<method-signature>flatMap(java.util.function.Function)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>map</method-name>
<return-type>java.util.Optional</return-type>
<method-signature>map(java.util.function.Function)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.Optional</return-type>
<method-signature>of(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ofNullable</method-name>
<return-type>java.util.Optional</return-type>
<method-signature>ofNullable(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.OptionalDouble">
<source>
<method-name>getAsDouble</method-name>
<return-type>double</return-type>
<method-signature>getAsDouble()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElse</method-name>
<return-type>double</return-type>
<method-signature>orElse(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElseGet</method-name>
<return-type>double</return-type>
<method-signature>orElseGet(java.util.function.DoubleSupplier)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElseThrow</method-name>
<return-type>double</return-type>
<method-signature>orElseThrow(java.util.function.Supplier)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>empty</method-name>
<return-type>java.util.OptionalDouble</return-type>
<method-signature>empty()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.OptionalDouble</return-type>
<method-signature>of(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.OptionalInt">
<source>
<method-name>getAsInt</method-name>
<return-type>int</return-type>
<method-signature>getAsInt()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>empty</method-name>
<return-type>java.util.OptionalInt</return-type>
<method-signature>empty()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.OptionalInt</return-type>
<method-signature>of(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.OptionalLong">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>empty</method-name>
<return-type>java.util.OptionalLong</return-type>
<method-signature>empty()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>of</method-name>
<return-type>java.util.OptionalLong</return-type>
<method-signature>of(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAsLong</method-name>
<return-type>long</return-type>
<method-signature>getAsLong()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElse</method-name>
<return-type>long</return-type>
<method-signature>orElse(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElseGet</method-name>
<return-type>long</return-type>
<method-signature>orElseGet(java.util.function.LongSupplier)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>orElseThrow</method-name>
<return-type>long</return-type>
<method-signature>orElseThrow(java.util.function.Supplier)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Properties">
<source>
<method-name>getProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProperty(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>propertyNames</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>propertyNames()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>stringPropertyNames</method-name>
<return-type>java.util.Set</return-type>
<method-signature>stringPropertyNames()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.PropertyResourceBundle">
<source>
<method-name>handleGetObject</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>handleGetObject(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKeys</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getKeys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>handleKeySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>handleKeySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Random">
<source>
<method-name>nextDouble</method-name>
<return-type>double</return-type>
<method-signature>nextDouble()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextGaussian</method-name>
<return-type>double</return-type>
<method-signature>nextGaussian()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextFloat</method-name>
<return-type>float</return-type>
<method-signature>nextFloat()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>next</method-name>
<return-type>int</return-type>
<method-signature>next(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextInt</method-name>
<return-type>int</return-type>
<method-signature>nextInt()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextInt</method-name>
<return-type>int</return-type>
<method-signature>nextInt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubles</method-name>
<return-type>java.util.stream.DoubleStream</return-type>
<method-signature>doubles()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubles</method-name>
<return-type>java.util.stream.DoubleStream</return-type>
<method-signature>doubles(double,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>double,double</parameter-type>
</source>

<source>
<method-name>doubles</method-name>
<return-type>java.util.stream.DoubleStream</return-type>
<method-signature>doubles(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doubles</method-name>
<return-type>java.util.stream.DoubleStream</return-type>
<method-signature>doubles(long,double,double)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,double,double</parameter-type>
</source>

<source>
<method-name>ints</method-name>
<return-type>java.util.stream.IntStream</return-type>
<method-signature>ints()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ints</method-name>
<return-type>java.util.stream.IntStream</return-type>
<method-signature>ints(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>ints</method-name>
<return-type>java.util.stream.IntStream</return-type>
<method-signature>ints(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ints</method-name>
<return-type>java.util.stream.IntStream</return-type>
<method-signature>ints(long,int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,int,int</parameter-type>
</source>

<source>
<method-name>longs</method-name>
<return-type>java.util.stream.LongStream</return-type>
<method-signature>longs()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longs</method-name>
<return-type>java.util.stream.LongStream</return-type>
<method-signature>longs(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longs</method-name>
<return-type>java.util.stream.LongStream</return-type>
<method-signature>longs(long,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,long</parameter-type>
</source>

<source>
<method-name>longs</method-name>
<return-type>java.util.stream.LongStream</return-type>
<method-signature>longs(long,long,long)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,long,long</parameter-type>
</source>

<source>
<method-name>nextLong</method-name>
<return-type>long</return-type>
<method-signature>nextLong()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.ResourceBundlee&#36;Control">
<source>
<method-name>toBundleName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toBundleName(java.lang.String,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Locale</parameter-type>
</source>

<source>
<method-name>toResourceName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toResourceName(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getCandidateLocales</method-name>
<return-type>java.util.List</return-type>
<method-signature>getCandidateLocales(java.lang.String,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getFormats</method-name>
<return-type>java.util.List</return-type>
<method-signature>getFormats(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFallbackLocale</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>getFallbackLocale(java.lang.String,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Locale</parameter-type>
</source>

<source>
<method-name>newBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean</parameter-type>
</source>

<source>
<method-name>getControl</method-name>
<return-type>java.util.ResourceBundlee&#36;Control</return-type>
<method-signature>getControl(java.util.List)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getNoFallbackControl</method-name>
<return-type>java.util.ResourceBundlee&#36;Control</return-type>
<method-signature>getNoFallbackControl(java.util.List)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeToLive</method-name>
<return-type>long</return-type>
<method-signature>getTimeToLive(java.lang.String,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Locale</parameter-type>
</source>

</class>
<class class-name="java.util.ResourceBundle">
<source>
<method-name>getObject</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getObject(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBaseBundleName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getBaseBundleName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getString(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getStringArray</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getStringArray(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocale</method-name>
<return-type>java.util.Locale</return-type>
<method-signature>getLocale()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getBundle(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getBundle(java.lang.String,java.util.Locale)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.util.Locale,java.lang.ClassLoader</parameter-type>
</source>

<source>
<method-name>getBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundlee&#36;Control)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundlee&#36;Control</parameter-type>
</source>

<source>
<method-name>getBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundlee&#36;Control)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.util.Locale,java.util.ResourceBundlee&#36;Control</parameter-type>
</source>

<source>
<method-name>getBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getBundle(java.lang.String,java.util.ResourceBundlee&#36;Control)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.ResourceBundlee&#36;Control</parameter-type>
</source>

<source>
<method-name>handleKeySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>handleKeySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.ServiceLoader">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>load</method-name>
<return-type>java.util.ServiceLoader</return-type>
<method-signature>load(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>load</method-name>
<return-type>java.util.ServiceLoader</return-type>
<method-signature>load(java.lang.Class,java.lang.ClassLoader)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Class,java.lang.ClassLoader</parameter-type>
</source>

<source>
<method-name>loadInstalled</method-name>
<return-type>java.util.ServiceLoader</return-type>
<method-signature>loadInstalled(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.SimpleTimeZone">
<source>
<method-name>getDSTSavings</method-name>
<return-type>int</return-type>
<method-signature>getDSTSavings()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>int</return-type>
<method-signature>getOffset(int,int,int,int,int,int)</method-signature>
<parameter-number>6</parameter-number>
<parameter-type>int,int,int,int,int,int</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>int</return-type>
<method-signature>getOffset(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRawOffset</method-name>
<return-type>int</return-type>
<method-signature>getRawOffset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.TimeZone">
<source>
<method-name>getDSTSavings</method-name>
<return-type>int</return-type>
<method-signature>getDSTSavings()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOffset</method-name>
<return-type>int</return-type>
<method-signature>getOffset(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(boolean,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>boolean,int</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(boolean,int,java.util.Locale)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>boolean,int,java.util.Locale</parameter-type>
</source>

<source>
<method-name>getDisplayName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDisplayName(java.util.Locale)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getID</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getID()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableIDs</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getAvailableIDs()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAvailableIDs</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getAvailableIDs(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toZoneId</method-name>
<return-type>java.time.ZoneId</return-type>
<method-signature>toZoneId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefault</method-name>
<return-type>java.util.TimeZone</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeZone</method-name>
<return-type>java.util.TimeZone</return-type>
<method-signature>getTimeZone(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTimeZone</method-name>
<return-type>java.util.TimeZone</return-type>
<method-signature>getTimeZone(java.time.ZoneId)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.TimerTask">
<source>
<method-name>scheduledExecutionTime</method-name>
<return-type>long</return-type>
<method-signature>scheduledExecutionTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.TreeMap">
<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ceilingKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>ceilingKey(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>firstKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>firstKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floorKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>floorKey(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>higherKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>higherKey(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>lastKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lowerKey</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>lowerKey(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>replace(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>comparator</method-name>
<return-type>java.util.Comparator</return-type>
<method-signature>comparator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>ceilingEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>ceilingEntry(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>firstEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>firstEntry()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floorEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>floorEntry(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>higherEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>higherEntry(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>lastEntry()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lowerEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>lowerEntry(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pollFirstEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>pollFirstEntry()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pollLastEntry</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>pollLastEntry()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>descendingMap</method-name>
<return-type>java.util.NavigableMap</return-type>
<method-signature>descendingMap()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>headMap</method-name>
<return-type>java.util.NavigableMap</return-type>
<method-signature>headMap(java.lang.Object,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,boolean</parameter-type>
</source>

<source>
<method-name>subMap</method-name>
<return-type>java.util.NavigableMap</return-type>
<method-signature>subMap(java.lang.Object,boolean,java.lang.Object,boolean)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.lang.Object,boolean,java.lang.Object,boolean</parameter-type>
</source>

<source>
<method-name>tailMap</method-name>
<return-type>java.util.NavigableMap</return-type>
<method-signature>tailMap(java.lang.Object,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,boolean</parameter-type>
</source>

<source>
<method-name>descendingKeySet</method-name>
<return-type>java.util.NavigableSet</return-type>
<method-signature>descendingKeySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>navigableKeySet</method-name>
<return-type>java.util.NavigableSet</return-type>
<method-signature>navigableKeySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>headMap</method-name>
<return-type>java.util.SortedMap</return-type>
<method-signature>headMap(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subMap</method-name>
<return-type>java.util.SortedMap</return-type>
<method-signature>subMap(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>tailMap</method-name>
<return-type>java.util.SortedMap</return-type>
<method-signature>tailMap(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.UUID">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>fromString</method-name>
<return-type>java.util.UUID</return-type>
<method-signature>fromString(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nameUUIDFromBytes</method-name>
<return-type>java.util.UUID</return-type>
<method-signature>nameUUIDFromBytes(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>randomUUID</method-name>
<return-type>java.util.UUID</return-type>
<method-signature>randomUUID()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLeastSignificantBits</method-name>
<return-type>long</return-type>
<method-signature>getLeastSignificantBits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMostSignificantBits</method-name>
<return-type>long</return-type>
<method-signature>getMostSignificantBits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>node</method-name>
<return-type>long</return-type>
<method-signature>node()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>timestamp</method-name>
<return-type>long</return-type>
<method-signature>timestamp()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.UnknownFormatConversionException">
<source>
<method-name>getConversion</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getConversion()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.Vector">
<source>
<method-name>capacity</method-name>
<return-type>int</return-type>
<method-signature>capacity()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>indexOf</method-name>
<return-type>int</return-type>
<method-signature>indexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>indexOf</method-name>
<return-type>int</return-type>
<method-signature>indexOf(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>lastIndexOf</method-name>
<return-type>int</return-type>
<method-signature>lastIndexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastIndexOf</method-name>
<return-type>int</return-type>
<method-signature>lastIndexOf(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>elementAt</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>elementAt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>firstElement</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>firstElement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastElement</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>lastElement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>set</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>set(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>elements</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>elements()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subList</method-name>
<return-type>java.util.List</return-type>
<method-signature>subList(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>spliterator</method-name>
<return-type>java.util.Spliterator</return-type>
<method-signature>spliterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.WeakHashMap">
<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.AbstractExecutorService">
<source>
<method-name>invokeAny</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>invokeAny(java.util.Collection)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>invokeAny</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Collection,long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>invokeAll</method-name>
<return-type>java.util.List</return-type>
<method-signature>invokeAll(java.util.Collection)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>invokeAll</method-name>
<return-type>java.util.List</return-type>
<method-signature>invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.Collection,long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.lang.Runnable)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.lang.Runnable,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Runnable,java.lang.Object</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.util.concurrent.Callable)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newTaskFor</method-name>
<return-type>java.util.concurrent.RunnableFuture</return-type>
<method-signature>newTaskFor(java.lang.Runnable,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Runnable,java.lang.Object</parameter-type>
</source>

<source>
<method-name>newTaskFor</method-name>
<return-type>java.util.concurrent.RunnableFuture</return-type>
<method-signature>newTaskFor(java.util.concurrent.Callable)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.ConcurrentHashMape&#36;KeySetView">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMappedValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getMappedValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>spliterator</method-name>
<return-type>java.util.Spliterator</return-type>
<method-signature>spliterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMap</method-name>
<return-type>java.util.concurrent.ConcurrentHashMap</return-type>
<method-signature>getMap()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.ConcurrentHashMap">
<source>
<method-name>reduceEntriesToDouble</method-name>
<return-type>double</return-type>
<method-signature>reduceEntriesToDouble(long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceKeysToDouble</method-name>
<return-type>double</return-type>
<method-signature>reduceKeysToDouble(long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceToDouble</method-name>
<return-type>double</return-type>
<method-signature>reduceToDouble(long,java.util.function.ToDoubleBiFunction,double,java.util.function.DoubleBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToDoubleBiFunction,double,java.util.function.DoubleBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceValuesToDouble</method-name>
<return-type>double</return-type>
<method-signature>reduceValuesToDouble(long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reduceEntriesToInt</method-name>
<return-type>int</return-type>
<method-signature>reduceEntriesToInt(long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceKeysToInt</method-name>
<return-type>int</return-type>
<method-signature>reduceKeysToInt(long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceToInt</method-name>
<return-type>int</return-type>
<method-signature>reduceToInt(long,java.util.function.ToIntBiFunction,int,java.util.function.IntBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToIntBiFunction,int,java.util.function.IntBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceValuesToInt</method-name>
<return-type>int</return-type>
<method-signature>reduceValuesToInt(long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compute</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>compute(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>computeIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfAbsent(java.lang.Object,java.util.function.Function)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.Function</parameter-type>
</source>

<source>
<method-name>computeIfPresent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>computeIfPresent(java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOrDefault</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getOrDefault(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>merge</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>putIfAbsent</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>putIfAbsent(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>reduce</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>reduce(long,java.util.function.BiFunction,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,java.util.function.BiFunction,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>reduceEntries</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>reduceEntries(long,java.util.function.Function,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,java.util.function.Function,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>reduceKeys</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>reduceKeys(long,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>reduceKeys</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>reduceKeys(long,java.util.function.Function,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,java.util.function.Function,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>reduceValues</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>reduceValues(long,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>reduceValues</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>reduceValues(long,java.util.function.Function,java.util.function.BiFunction)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>long,java.util.function.Function,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replace</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>replace(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>search</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>search(long,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>searchEntries</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>searchEntries(long,java.util.function.Function)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.Function</parameter-type>
</source>

<source>
<method-name>searchKeys</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>searchKeys(long,java.util.function.Function)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.Function</parameter-type>
</source>

<source>
<method-name>searchValues</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>searchValues(long,java.util.function.Function)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.Function</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>elements</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>elements()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keys</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>keys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reduceEntries</method-name>
<return-type>java.util.Mape&#36;Entry</return-type>
<method-signature>reduceEntries(long,java.util.function.BiFunction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.BiFunction</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.concurrent.ConcurrentHashMape&#36;KeySetView</return-type>
<method-signature>keySet(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newKeySet</method-name>
<return-type>java.util.concurrent.ConcurrentHashMape&#36;KeySetView</return-type>
<method-signature>newKeySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newKeySet</method-name>
<return-type>java.util.concurrent.ConcurrentHashMape&#36;KeySetView</return-type>
<method-signature>newKeySet(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>mappingCount</method-name>
<return-type>long</return-type>
<method-signature>mappingCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reduceEntriesToLong</method-name>
<return-type>long</return-type>
<method-signature>reduceEntriesToLong(long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceKeysToLong</method-name>
<return-type>long</return-type>
<method-signature>reduceKeysToLong(long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceToLong</method-name>
<return-type>long</return-type>
<method-signature>reduceToLong(long,java.util.function.ToLongBiFunction,long,java.util.function.LongBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToLongBiFunction,long,java.util.function.LongBinaryOperator</parameter-type>
</source>

<source>
<method-name>reduceValuesToLong</method-name>
<return-type>long</return-type>
<method-signature>reduceValuesToLong(long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>long,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.CopyOnWriteArrayList">
<source>
<method-name>addAllAbsent</method-name>
<return-type>int</return-type>
<method-signature>addAllAbsent(java.util.Collection)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>indexOf</method-name>
<return-type>int</return-type>
<method-signature>indexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>indexOf</method-name>
<return-type>int</return-type>
<method-signature>indexOf(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>lastIndexOf</method-name>
<return-type>int</return-type>
<method-signature>lastIndexOf(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>lastIndexOf</method-name>
<return-type>int</return-type>
<method-signature>lastIndexOf(java.lang.Object,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,int</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>set</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>set(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toArray</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>toArray(java.lang.Object[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>iterator</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>iterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>subList</method-name>
<return-type>java.util.List</return-type>
<method-signature>subList(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>listIterator</method-name>
<return-type>java.util.ListIterator</return-type>
<method-signature>listIterator(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>spliterator</method-name>
<return-type>java.util.Spliterator</return-type>
<method-signature>spliterator()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.CountDownLatch">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCount</method-name>
<return-type>long</return-type>
<method-signature>getCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.ExecutorCompletionService">
<source>
<method-name>poll</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>poll()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>poll</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>poll(long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.lang.Runnable,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Runnable,java.lang.Object</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.util.concurrent.Callable)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>take</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>take()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.FutureTask">
<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.concurrent.TimeUnit</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.ScheduledThreadPoolExecutor">
<source>
<method-name>shutdownNow</method-name>
<return-type>java.util.List</return-type>
<method-signature>shutdownNow()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueue</method-name>
<return-type>java.util.concurrent.BlockingQueue</return-type>
<method-signature>getQueue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.lang.Runnable)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.lang.Runnable,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Runnable,java.lang.Object</parameter-type>
</source>

<source>
<method-name>submit</method-name>
<return-type>java.util.concurrent.Future</return-type>
<method-signature>submit(java.util.concurrent.Callable)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decorateTask</method-name>
<return-type>java.util.concurrent.RunnableScheduledFuture</return-type>
<method-signature>decorateTask(java.lang.Runnable,java.util.concurrent.RunnableScheduledFuture)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Runnable,java.util.concurrent.RunnableScheduledFuture</parameter-type>
</source>

<source>
<method-name>decorateTask</method-name>
<return-type>java.util.concurrent.RunnableScheduledFuture</return-type>
<method-signature>decorateTask(java.util.concurrent.Callable,java.util.concurrent.RunnableScheduledFuture)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.util.concurrent.Callable,java.util.concurrent.RunnableScheduledFuture</parameter-type>
</source>

<source>
<method-name>schedule</method-name>
<return-type>java.util.concurrent.ScheduledFuture</return-type>
<method-signature>schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.Runnable,long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>schedule</method-name>
<return-type>java.util.concurrent.ScheduledFuture</return-type>
<method-signature>schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>scheduleAtFixedRate</method-name>
<return-type>java.util.concurrent.ScheduledFuture</return-type>
<method-signature>scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.lang.Runnable,long,long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>scheduleWithFixedDelay</method-name>
<return-type>java.util.concurrent.ScheduledFuture</return-type>
<method-signature>scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.lang.Runnable,long,long,java.util.concurrent.TimeUnit</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.Semaphore">
<source>
<method-name>availablePermits</method-name>
<return-type>int</return-type>
<method-signature>availablePermits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>drainPermits</method-name>
<return-type>int</return-type>
<method-signature>drainPermits()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getQueueLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueuedThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getQueuedThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.ThreadPoolExecutor">
<source>
<method-name>getActiveCount</method-name>
<return-type>int</return-type>
<method-signature>getActiveCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCorePoolSize</method-name>
<return-type>int</return-type>
<method-signature>getCorePoolSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLargestPoolSize</method-name>
<return-type>int</return-type>
<method-signature>getLargestPoolSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaximumPoolSize</method-name>
<return-type>int</return-type>
<method-signature>getMaximumPoolSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPoolSize</method-name>
<return-type>int</return-type>
<method-signature>getPoolSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>prestartAllCoreThreads</method-name>
<return-type>int</return-type>
<method-signature>prestartAllCoreThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>shutdownNow</method-name>
<return-type>java.util.List</return-type>
<method-signature>shutdownNow()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueue</method-name>
<return-type>java.util.concurrent.BlockingQueue</return-type>
<method-signature>getQueue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRejectedExecutionHandler</method-name>
<return-type>java.util.concurrent.RejectedExecutionHandler</return-type>
<method-signature>getRejectedExecutionHandler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getThreadFactory</method-name>
<return-type>java.util.concurrent.ThreadFactory</return-type>
<method-signature>getThreadFactory()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCompletedTaskCount</method-name>
<return-type>long</return-type>
<method-signature>getCompletedTaskCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKeepAliveTime</method-name>
<return-type>long</return-type>
<method-signature>getKeepAliveTime(java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTaskCount</method-name>
<return-type>long</return-type>
<method-signature>getTaskCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.TimeUnit">
<source>
<method-name>valueOf</method-name>
<return-type>java.util.concurrent.TimeUnit</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.concurrent.TimeUnit[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>convert</method-name>
<return-type>long</return-type>
<method-signature>convert(long,java.util.concurrent.TimeUnit)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.concurrent.TimeUnit</parameter-type>
</source>

<source>
<method-name>toDays</method-name>
<return-type>long</return-type>
<method-signature>toDays(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toHours</method-name>
<return-type>long</return-type>
<method-signature>toHours(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toMicros</method-name>
<return-type>long</return-type>
<method-signature>toMicros(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toMillis</method-name>
<return-type>long</return-type>
<method-signature>toMillis(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toMinutes</method-name>
<return-type>long</return-type>
<method-signature>toMinutes(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toNanos</method-name>
<return-type>long</return-type>
<method-signature>toNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toSeconds</method-name>
<return-type>long</return-type>
<method-signature>toSeconds(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.atomic.AtomicInteger">
<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>accumulateAndGet</method-name>
<return-type>int</return-type>
<method-signature>accumulateAndGet(int,java.util.function.IntBinaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.util.function.IntBinaryOperator</parameter-type>
</source>

<source>
<method-name>addAndGet</method-name>
<return-type>int</return-type>
<method-signature>addAndGet(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decrementAndGet</method-name>
<return-type>int</return-type>
<method-signature>decrementAndGet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>int</return-type>
<method-signature>get()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndAccumulate</method-name>
<return-type>int</return-type>
<method-signature>getAndAccumulate(int,java.util.function.IntBinaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.util.function.IntBinaryOperator</parameter-type>
</source>

<source>
<method-name>getAndAdd</method-name>
<return-type>int</return-type>
<method-signature>getAndAdd(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndDecrement</method-name>
<return-type>int</return-type>
<method-signature>getAndDecrement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndIncrement</method-name>
<return-type>int</return-type>
<method-signature>getAndIncrement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndSet</method-name>
<return-type>int</return-type>
<method-signature>getAndSet(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndUpdate</method-name>
<return-type>int</return-type>
<method-signature>getAndUpdate(java.util.function.IntUnaryOperator)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>incrementAndGet</method-name>
<return-type>int</return-type>
<method-signature>incrementAndGet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>intValue</method-name>
<return-type>int</return-type>
<method-signature>intValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>updateAndGet</method-name>
<return-type>int</return-type>
<method-signature>updateAndGet(java.util.function.IntUnaryOperator)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.atomic.AtomicLong">
<source>
<method-name>doubleValue</method-name>
<return-type>double</return-type>
<method-signature>doubleValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>floatValue</method-name>
<return-type>float</return-type>
<method-signature>floatValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>intValue</method-name>
<return-type>int</return-type>
<method-signature>intValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>accumulateAndGet</method-name>
<return-type>long</return-type>
<method-signature>accumulateAndGet(long,java.util.function.LongBinaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.LongBinaryOperator</parameter-type>
</source>

<source>
<method-name>addAndGet</method-name>
<return-type>long</return-type>
<method-signature>addAndGet(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>decrementAndGet</method-name>
<return-type>long</return-type>
<method-signature>decrementAndGet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>long</return-type>
<method-signature>get()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndAccumulate</method-name>
<return-type>long</return-type>
<method-signature>getAndAccumulate(long,java.util.function.LongBinaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>long,java.util.function.LongBinaryOperator</parameter-type>
</source>

<source>
<method-name>getAndAdd</method-name>
<return-type>long</return-type>
<method-signature>getAndAdd(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndDecrement</method-name>
<return-type>long</return-type>
<method-signature>getAndDecrement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndIncrement</method-name>
<return-type>long</return-type>
<method-signature>getAndIncrement()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndSet</method-name>
<return-type>long</return-type>
<method-signature>getAndSet(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndUpdate</method-name>
<return-type>long</return-type>
<method-signature>getAndUpdate(java.util.function.LongUnaryOperator)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>incrementAndGet</method-name>
<return-type>long</return-type>
<method-signature>incrementAndGet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>longValue</method-name>
<return-type>long</return-type>
<method-signature>longValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>updateAndGet</method-name>
<return-type>long</return-type>
<method-signature>updateAndGet(java.util.function.LongUnaryOperator)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.atomic.AtomicReference">
<source>
<method-name>accumulateAndGet</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>accumulateAndGet(java.lang.Object,java.util.function.BinaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BinaryOperator</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndAccumulate</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getAndAccumulate(java.lang.Object,java.util.function.BinaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.util.function.BinaryOperator</parameter-type>
</source>

<source>
<method-name>getAndSet</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getAndSet(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndUpdate</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getAndUpdate(java.util.function.UnaryOperator)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>updateAndGet</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>updateAndGet(java.util.function.UnaryOperator)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.atomic.AtomicReferenceArray">
<source>
<method-name>length</method-name>
<return-type>int</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>accumulateAndGet</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>accumulateAndGet(int,java.lang.Object,java.util.function.BinaryOperator)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,java.lang.Object,java.util.function.BinaryOperator</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAndAccumulate</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getAndAccumulate(int,java.lang.Object,java.util.function.BinaryOperator)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>int,java.lang.Object,java.util.function.BinaryOperator</parameter-type>
</source>

<source>
<method-name>getAndSet</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getAndSet(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>getAndUpdate</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getAndUpdate(int,java.util.function.UnaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.util.function.UnaryOperator</parameter-type>
</source>

<source>
<method-name>updateAndGet</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>updateAndGet(int,java.util.function.UnaryOperator)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.util.function.UnaryOperator</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.AbstractOwnableSynchronizer">
<source>
<method-name>getExclusiveOwnerThread</method-name>
<return-type>java.lang.Thread</return-type>
<method-signature>getExclusiveOwnerThread()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.AbstractQueuedSynchronizere&#36;ConditionObject">
<source>
<method-name>getWaitQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getWaitQueueLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWaitingThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getWaitingThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>awaitNanos</method-name>
<return-type>long</return-type>
<method-signature>awaitNanos(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.AbstractQueuedSynchronizer">
<source>
<method-name>getQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getQueueLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getState</method-name>
<return-type>int</return-type>
<method-signature>getState()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWaitQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedSynchronizere&#36;ConditionObject)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>tryAcquireShared</method-name>
<return-type>int</return-type>
<method-signature>tryAcquireShared(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFirstQueuedThread</method-name>
<return-type>java.lang.Thread</return-type>
<method-signature>getFirstQueuedThread()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getExclusiveQueuedThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getExclusiveQueuedThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueuedThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getQueuedThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSharedQueuedThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getSharedQueuedThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWaitingThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizere&#36;ConditionObject)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.LockSupport">
<source>
<method-name>getBlocker</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getBlocker(java.lang.Thread)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.ReentrantLock">
<source>
<method-name>getHoldCount</method-name>
<return-type>int</return-type>
<method-signature>getHoldCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getQueueLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWaitQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getWaitQueueLength(java.util.concurrent.locks.Condition)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOwner</method-name>
<return-type>java.lang.Thread</return-type>
<method-signature>getOwner()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueuedThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getQueuedThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWaitingThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getWaitingThreads(java.util.concurrent.locks.Condition)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newCondition</method-name>
<return-type>java.util.concurrent.locks.Condition</return-type>
<method-signature>newCondition()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.ReentrantReadWriteLocke&#36;ReadLock">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newCondition</method-name>
<return-type>java.util.concurrent.locks.Condition</return-type>
<method-signature>newCondition()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.ReentrantReadWriteLocke&#36;WriteLock">
<source>
<method-name>getHoldCount</method-name>
<return-type>int</return-type>
<method-signature>getHoldCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newCondition</method-name>
<return-type>java.util.concurrent.locks.Condition</return-type>
<method-signature>newCondition()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.concurrent.locks.ReentrantReadWriteLock">
<source>
<method-name>getQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getQueueLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReadHoldCount</method-name>
<return-type>int</return-type>
<method-signature>getReadHoldCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getReadLockCount</method-name>
<return-type>int</return-type>
<method-signature>getReadLockCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWaitQueueLength</method-name>
<return-type>int</return-type>
<method-signature>getWaitQueueLength(java.util.concurrent.locks.Condition)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWriteHoldCount</method-name>
<return-type>int</return-type>
<method-signature>getWriteHoldCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOwner</method-name>
<return-type>java.lang.Thread</return-type>
<method-signature>getOwner()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueuedReaderThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getQueuedReaderThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueuedThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getQueuedThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQueuedWriterThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getQueuedWriterThreads()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getWaitingThreads</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getWaitingThreads(java.util.concurrent.locks.Condition)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>readLock</method-name>
<return-type>java.util.concurrent.locks.ReentrantReadWriteLocke&#36;ReadLock</return-type>
<method-signature>readLock()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>writeLock</method-name>
<return-type>java.util.concurrent.locks.ReentrantReadWriteLocke&#36;WriteLock</return-type>
<method-signature>writeLock()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.jar.Attributese&#36;Name">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.jar.Attributes">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>put(java.lang.Object,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.Object,java.lang.Object</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getValue(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getValue(java.util.jar.Attributese&#36;Name)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>putValue</method-name>
<return-type>java.lang.String</return-type>
<method-signature>putValue(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entrySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>entrySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keySet</method-name>
<return-type>java.util.Set</return-type>
<method-signature>keySet()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.jar.JarEntry">
<source>
<method-name>getCodeSigners</method-name>
<return-type>java.security.CodeSigner[]</return-type>
<method-signature>getCodeSigners()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCertificates</method-name>
<return-type>java.security.cert.Certificate[]</return-type>
<method-signature>getCertificates()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAttributes</method-name>
<return-type>java.util.jar.Attributes</return-type>
<method-signature>getAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.jar.JarFile">
<source>
<method-name>getInputStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getInputStream(java.util.zip.ZipEntry)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entries</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>entries()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getJarEntry</method-name>
<return-type>java.util.jar.JarEntry</return-type>
<method-signature>getJarEntry(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getManifest</method-name>
<return-type>java.util.jar.Manifest</return-type>
<method-signature>getManifest()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>stream</method-name>
<return-type>java.util.stream.Stream</return-type>
<method-signature>stream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEntry</method-name>
<return-type>java.util.zip.ZipEntry</return-type>
<method-signature>getEntry(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.jar.Manifest">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEntries</method-name>
<return-type>java.util.Map</return-type>
<method-signature>getEntries()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAttributes</method-name>
<return-type>java.util.jar.Attributes</return-type>
<method-signature>getAttributes(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMainAttributes</method-name>
<return-type>java.util.jar.Attributes</return-type>
<method-signature>getMainAttributes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.logging.Formatter">
<source>
<method-name>formatMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>formatMessage(java.util.logging.LogRecord)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHead</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getHead(java.util.logging.Handler)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTail</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getTail(java.util.logging.Handler)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.logging.Handler">
<source>
<method-name>getEncoding</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getEncoding()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getErrorManager</method-name>
<return-type>java.util.logging.ErrorManager</return-type>
<method-signature>getErrorManager()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFilter</method-name>
<return-type>java.util.logging.Filter</return-type>
<method-signature>getFilter()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFormatter</method-name>
<return-type>java.util.logging.Formatter</return-type>
<method-signature>getFormatter()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLevel</method-name>
<return-type>java.util.logging.Level</return-type>
<method-signature>getLevel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.logging.Level">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>intValue</method-name>
<return-type>int</return-type>
<method-signature>intValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalizedName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getLocalizedName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResourceBundleName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getResourceBundleName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>java.util.logging.Level</return-type>
<method-signature>parse(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.logging.LogManager">
<source>
<method-name>getProperty</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLoggerNames</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getLoggerNames()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLogManager</method-name>
<return-type>java.util.logging.LogManager</return-type>
<method-signature>getLogManager()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLogger</method-name>
<return-type>java.util.logging.Logger</return-type>
<method-signature>getLogger(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLoggingMXBean</method-name>
<return-type>java.util.logging.LoggingMXBean</return-type>
<method-signature>getLoggingMXBean()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.logging.LogRecord">
<source>
<method-name>getThreadID</method-name>
<return-type>int</return-type>
<method-signature>getThreadID()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameters</method-name>
<return-type>java.lang.Object[]</return-type>
<method-signature>getParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLoggerName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getLoggerName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResourceBundleName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getResourceBundleName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSourceClassName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSourceClassName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSourceMethodName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSourceMethodName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getThrown</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getThrown()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResourceBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getResourceBundle()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLevel</method-name>
<return-type>java.util.logging.Level</return-type>
<method-signature>getLevel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMillis</method-name>
<return-type>long</return-type>
<method-signature>getMillis()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSequenceNumber</method-name>
<return-type>long</return-type>
<method-signature>getSequenceNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.logging.Logger">
<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResourceBundleName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getResourceBundleName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getResourceBundle</method-name>
<return-type>java.util.ResourceBundle</return-type>
<method-signature>getResourceBundle()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFilter</method-name>
<return-type>java.util.logging.Filter</return-type>
<method-signature>getFilter()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHandlers</method-name>
<return-type>java.util.logging.Handler[]</return-type>
<method-signature>getHandlers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLevel</method-name>
<return-type>java.util.logging.Level</return-type>
<method-signature>getLevel()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnonymousLogger</method-name>
<return-type>java.util.logging.Logger</return-type>
<method-signature>getAnonymousLogger()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAnonymousLogger</method-name>
<return-type>java.util.logging.Logger</return-type>
<method-signature>getAnonymousLogger(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getGlobal</method-name>
<return-type>java.util.logging.Logger</return-type>
<method-signature>getGlobal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLogger</method-name>
<return-type>java.util.logging.Logger</return-type>
<method-signature>getLogger(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLogger</method-name>
<return-type>java.util.logging.Logger</return-type>
<method-signature>getLogger(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getParent</method-name>
<return-type>java.util.logging.Logger</return-type>
<method-signature>getParent()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.logging.LoggingPermission">
<source>
<method-name>getActions</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getActions()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.regex.Matcher">
<source>
<method-name>group</method-name>
<return-type>java.lang.String</return-type>
<method-signature>group()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>group</method-name>
<return-type>java.lang.String</return-type>
<method-signature>group(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>group</method-name>
<return-type>java.lang.String</return-type>
<method-signature>group(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>quoteReplacement</method-name>
<return-type>java.lang.String</return-type>
<method-signature>quoteReplacement(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replaceAll</method-name>
<return-type>java.lang.String</return-type>
<method-signature>replaceAll(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>replaceFirst</method-name>
<return-type>java.lang.String</return-type>
<method-signature>replaceFirst(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>appendTail</method-name>
<return-type>java.lang.StringBuffer</return-type>
<method-signature>appendTail(java.lang.StringBuffer)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toMatchResult</method-name>
<return-type>java.util.regex.MatchResult</return-type>
<method-signature>toMatchResult()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>appendReplacement</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>appendReplacement(java.lang.StringBuffer,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.StringBuffer,java.lang.String</parameter-type>
</source>

<source>
<method-name>region</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>region(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>reset</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>reset()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>reset</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>reset(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>useAnchoringBounds</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>useAnchoringBounds(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>usePattern</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>usePattern(java.util.regex.Pattern)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>useTransparentBounds</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>useTransparentBounds(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>pattern</method-name>
<return-type>java.util.regex.Pattern</return-type>
<method-signature>pattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.regex.Pattern">
<source>
<method-name>pattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>pattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>quote</method-name>
<return-type>java.lang.String</return-type>
<method-signature>quote(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>split</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>split(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>split</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>split(java.lang.CharSequence,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.CharSequence,int</parameter-type>
</source>

<source>
<method-name>asPredicate</method-name>
<return-type>java.util.function.Predicate</return-type>
<method-signature>asPredicate()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>matcher</method-name>
<return-type>java.util.regex.Matcher</return-type>
<method-signature>matcher(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compile</method-name>
<return-type>java.util.regex.Pattern</return-type>
<method-signature>compile(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>compile</method-name>
<return-type>java.util.regex.Pattern</return-type>
<method-signature>compile(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>splitAsStream</method-name>
<return-type>java.util.stream.Stream</return-type>
<method-signature>splitAsStream(java.lang.CharSequence)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.regex.PatternSyntaxException">
<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDescription</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDescription()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPattern</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPattern()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.stream.Collectore&#36;Characteristics">
<source>
<method-name>valueOf</method-name>
<return-type>java.util.stream.Collectore&#36;Characteristics</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>java.util.stream.Collectore&#36;Characteristics[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.zip.Adler32">
<source>
<method-name>getValue</method-name>
<return-type>long</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.zip.CRC32">
<source>
<method-name>getValue</method-name>
<return-type>long</return-type>
<method-signature>getValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.zip.CheckedInputStream">
<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>read</method-name>
<return-type>int</return-type>
<method-signature>read(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>getChecksum</method-name>
<return-type>java.util.zip.Checksum</return-type>
<method-signature>getChecksum()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>skip</method-name>
<return-type>long</return-type>
<method-signature>skip(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.zip.Deflater">
<source>
<method-name>deflate</method-name>
<return-type>int</return-type>
<method-signature>deflate(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>deflate</method-name>
<return-type>int</return-type>
<method-signature>deflate(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>deflate</method-name>
<return-type>int</return-type>
<method-signature>deflate(byte[],int,int,int)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>byte[],int,int,int</parameter-type>
</source>

<source>
<method-name>getAdler</method-name>
<return-type>int</return-type>
<method-signature>getAdler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTotalIn</method-name>
<return-type>int</return-type>
<method-signature>getTotalIn()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTotalOut</method-name>
<return-type>int</return-type>
<method-signature>getTotalOut()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBytesRead</method-name>
<return-type>long</return-type>
<method-signature>getBytesRead()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBytesWritten</method-name>
<return-type>long</return-type>
<method-signature>getBytesWritten()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.zip.Inflater">
<source>
<method-name>getAdler</method-name>
<return-type>int</return-type>
<method-signature>getAdler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getRemaining</method-name>
<return-type>int</return-type>
<method-signature>getRemaining()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTotalIn</method-name>
<return-type>int</return-type>
<method-signature>getTotalIn()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTotalOut</method-name>
<return-type>int</return-type>
<method-signature>getTotalOut()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>inflate</method-name>
<return-type>int</return-type>
<method-signature>inflate(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>inflate</method-name>
<return-type>int</return-type>
<method-signature>inflate(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>getBytesRead</method-name>
<return-type>long</return-type>
<method-signature>getBytesRead()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getBytesWritten</method-name>
<return-type>long</return-type>
<method-signature>getBytesWritten()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.zip.ZipEntry">
<source>
<method-name>getExtra</method-name>
<return-type>byte[]</return-type>
<method-signature>getExtra()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMethod</method-name>
<return-type>int</return-type>
<method-signature>getMethod()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getComment</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getComment()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCreationTime</method-name>
<return-type>java.nio.file.attribute.FileTime</return-type>
<method-signature>getCreationTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLastAccessTime</method-name>
<return-type>java.nio.file.attribute.FileTime</return-type>
<method-signature>getLastAccessTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLastModifiedTime</method-name>
<return-type>java.nio.file.attribute.FileTime</return-type>
<method-signature>getLastModifiedTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setCreationTime</method-name>
<return-type>java.util.zip.ZipEntry</return-type>
<method-signature>setCreationTime(java.nio.file.attribute.FileTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setLastAccessTime</method-name>
<return-type>java.util.zip.ZipEntry</return-type>
<method-signature>setLastAccessTime(java.nio.file.attribute.FileTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>setLastModifiedTime</method-name>
<return-type>java.util.zip.ZipEntry</return-type>
<method-signature>setLastModifiedTime(java.nio.file.attribute.FileTime)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCompressedSize</method-name>
<return-type>long</return-type>
<method-signature>getCompressedSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCrc</method-name>
<return-type>long</return-type>
<method-signature>getCrc()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSize</method-name>
<return-type>long</return-type>
<method-signature>getSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getTime</method-name>
<return-type>long</return-type>
<method-signature>getTime()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="java.util.zip.ZipFile">
<source>
<method-name>size</method-name>
<return-type>int</return-type>
<method-signature>size()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInputStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getInputStream(java.util.zip.ZipEntry)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getComment</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getComment()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>entries</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>entries()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>stream</method-name>
<return-type>java.util.stream.Stream</return-type>
<method-signature>stream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEntry</method-name>
<return-type>java.util.zip.ZipEntry</return-type>
<method-signature>getEntry(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.Cipher">
<source>
<method-name>doFinal</method-name>
<return-type>byte[]</return-type>
<method-signature>doFinal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doFinal</method-name>
<return-type>byte[]</return-type>
<method-signature>doFinal(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doFinal</method-name>
<return-type>byte[]</return-type>
<method-signature>doFinal(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>getIV</method-name>
<return-type>byte[]</return-type>
<method-signature>getIV()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>update</method-name>
<return-type>byte[]</return-type>
<method-signature>update(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>update</method-name>
<return-type>byte[]</return-type>
<method-signature>update(byte[],int,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],int,int</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>byte[]</return-type>
<method-signature>wrap(java.security.Key)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doFinal</method-name>
<return-type>int</return-type>
<method-signature>doFinal(byte[],int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>byte[],int</parameter-type>
</source>

<source>
<method-name>doFinal</method-name>
<return-type>int</return-type>
<method-signature>doFinal(byte[],int,int,byte[])</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>byte[],int,int,byte[]</parameter-type>
</source>

<source>
<method-name>doFinal</method-name>
<return-type>int</return-type>
<method-signature>doFinal(byte[],int,int,byte[],int)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>byte[],int,int,byte[],int</parameter-type>
</source>

<source>
<method-name>doFinal</method-name>
<return-type>int</return-type>
<method-signature>doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.ByteBuffer</parameter-type>
</source>

<source>
<method-name>getBlockSize</method-name>
<return-type>int</return-type>
<method-signature>getBlockSize()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaxAllowedKeyLength</method-name>
<return-type>int</return-type>
<method-signature>getMaxAllowedKeyLength(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getOutputSize</method-name>
<return-type>int</return-type>
<method-signature>getOutputSize(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>update</method-name>
<return-type>int</return-type>
<method-signature>update(byte[],int,int,byte[])</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>byte[],int,int,byte[]</parameter-type>
</source>

<source>
<method-name>update</method-name>
<return-type>int</return-type>
<method-signature>update(byte[],int,int,byte[],int)</method-signature>
<parameter-number>5</parameter-number>
<parameter-type>byte[],int,int,byte[],int</parameter-type>
</source>

<source>
<method-name>update</method-name>
<return-type>int</return-type>
<method-signature>update(java.nio.ByteBuffer,java.nio.ByteBuffer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.ByteBuffer</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getParameters</method-name>
<return-type>java.security.AlgorithmParameters</return-type>
<method-signature>getParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>unwrap</method-name>
<return-type>java.security.Key</return-type>
<method-signature>unwrap(byte[],java.lang.String,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],java.lang.String,int</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMaxAllowedParameterSpec</method-name>
<return-type>java.security.spec.AlgorithmParameterSpec</return-type>
<method-signature>getMaxAllowedParameterSpec(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.Cipher</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.Cipher</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.Cipher</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getExemptionMechanism</method-name>
<return-type>javax.crypto.ExemptionMechanism</return-type>
<method-signature>getExemptionMechanism()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.CipherSpi">
<source>
<method-name>engineWrap</method-name>
<return-type>byte[]</return-type>
<method-signature>engineWrap(java.security.Key)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>engineDoFinal</method-name>
<return-type>int</return-type>
<method-signature>engineDoFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.ByteBuffer</parameter-type>
</source>

<source>
<method-name>engineGetKeySize</method-name>
<return-type>int</return-type>
<method-signature>engineGetKeySize(java.security.Key)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>engineUpdate</method-name>
<return-type>int</return-type>
<method-signature>engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.ByteBuffer</parameter-type>
</source>

<source>
<method-name>engineUnwrap</method-name>
<return-type>java.security.Key</return-type>
<method-signature>engineUnwrap(byte[],java.lang.String,int)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>byte[],java.lang.String,int</parameter-type>
</source>

</class>
<class class-name="javax.crypto.ExemptionMechanism">
<source>
<method-name>genExemptionBlob</method-name>
<return-type>byte[]</return-type>
<method-signature>genExemptionBlob()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>genExemptionBlob</method-name>
<return-type>int</return-type>
<method-signature>genExemptionBlob(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>genExemptionBlob</method-name>
<return-type>int</return-type>
<method-signature>genExemptionBlob(byte[],int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>byte[],int</parameter-type>
</source>

<source>
<method-name>getOutputSize</method-name>
<return-type>int</return-type>
<method-signature>getOutputSize(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.ExemptionMechanism</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.ExemptionMechanism</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.ExemptionMechanism</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

</class>
<class class-name="javax.crypto.KeyAgreement">
<source>
<method-name>generateSecret</method-name>
<return-type>byte[]</return-type>
<method-signature>generateSecret()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>generateSecret</method-name>
<return-type>int</return-type>
<method-signature>generateSecret(byte[],int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>byte[],int</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doPhase</method-name>
<return-type>java.security.Key</return-type>
<method-signature>doPhase(java.security.Key,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.security.Key,boolean</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.KeyAgreement</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.KeyAgreement</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.KeyAgreement</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>generateSecret</method-name>
<return-type>javax.crypto.SecretKey</return-type>
<method-signature>generateSecret(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.KeyGenerator">
<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.KeyGenerator</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.KeyGenerator</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.KeyGenerator</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>generateKey</method-name>
<return-type>javax.crypto.SecretKey</return-type>
<method-signature>generateKey()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.Mac">
<source>
<method-name>doFinal</method-name>
<return-type>byte[]</return-type>
<method-signature>doFinal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>doFinal</method-name>
<return-type>byte[]</return-type>
<method-signature>doFinal(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMacLength</method-name>
<return-type>int</return-type>
<method-signature>getMacLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.Mac</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.Mac</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.Mac</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

</class>
<class class-name="javax.crypto.MacSpi">
<source>
<method-name>clone</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>clone()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.SecretKeyFactory">
<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKeySpec</method-name>
<return-type>java.security.spec.KeySpec</return-type>
<method-signature>getKeySpec(javax.crypto.SecretKey,java.lang.Class)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>javax.crypto.SecretKey,java.lang.Class</parameter-type>
</source>

<source>
<method-name>generateSecret</method-name>
<return-type>javax.crypto.SecretKey</return-type>
<method-signature>generateSecret(java.security.spec.KeySpec)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>translateKey</method-name>
<return-type>javax.crypto.SecretKey</return-type>
<method-signature>translateKey(javax.crypto.SecretKey)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.SecretKeyFactory</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.SecretKeyFactory</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.crypto.SecretKeyFactory</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

</class>
<class class-name="javax.crypto.spec.DHParameterSpec">
<source>
<method-name>getL</method-name>
<return-type>int</return-type>
<method-signature>getL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getG</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getG()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getP</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getP()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.spec.DHPublicKeySpec">
<source>
<method-name>getG</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getG()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getP</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getP()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getY</method-name>
<return-type>java.math.BigInteger</return-type>
<method-signature>getY()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.spec.IvParameterSpec">
<source>
<method-name>getIV</method-name>
<return-type>byte[]</return-type>
<method-signature>getIV()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.spec.PBEKeySpec">
<source>
<method-name>getSalt</method-name>
<return-type>byte[]</return-type>
<method-signature>getSalt()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPassword</method-name>
<return-type>char[]</return-type>
<method-signature>getPassword()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIterationCount</method-name>
<return-type>int</return-type>
<method-signature>getIterationCount()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getKeyLength</method-name>
<return-type>int</return-type>
<method-signature>getKeyLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.crypto.spec.SecretKeySpec">
<source>
<method-name>getEncoded</method-name>
<return-type>byte[]</return-type>
<method-signature>getEncoded()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getFormat</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getFormat()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.microedition.khronos.egl.EGLContext">
<source>
<method-name>getEGL</method-name>
<return-type>javax.microedition.khronos.egl.EGL</return-type>
<method-signature>getEGL()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ServerSocketFactory">
<source>
<method-name>createServerSocket</method-name>
<return-type>java.net.ServerSocket</return-type>
<method-signature>createServerSocket()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefault</method-name>
<return-type>javax.net.ServerSocketFactory</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.SocketFactory">
<source>
<method-name>createSocket</method-name>
<return-type>java.net.Socket</return-type>
<method-signature>createSocket()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefault</method-name>
<return-type>javax.net.SocketFactory</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.HandshakeCompletedEvent">
<source>
<method-name>getCipherSuite</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getCipherSuite()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalPrincipal</method-name>
<return-type>java.security.Principal</return-type>
<method-signature>getLocalPrincipal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPeerPrincipal</method-name>
<return-type>java.security.Principal</return-type>
<method-signature>getPeerPrincipal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalCertificates</method-name>
<return-type>java.security.cert.Certificate[]</return-type>
<method-signature>getLocalCertificates()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPeerCertificates</method-name>
<return-type>java.security.cert.Certificate[]</return-type>
<method-signature>getPeerCertificates()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSession</method-name>
<return-type>javax.net.ssl.SSLSession</return-type>
<method-signature>getSession()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSocket</method-name>
<return-type>javax.net.ssl.SSLSocket</return-type>
<method-signature>getSocket()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPeerCertificateChain</method-name>
<return-type>javax.security.cert.X509Certificate[]</return-type>
<method-signature>getPeerCertificateChain()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.HttpsURLConnection">
<source>
<method-name>getLocalPrincipal</method-name>
<return-type>java.security.Principal</return-type>
<method-signature>getLocalPrincipal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPeerPrincipal</method-name>
<return-type>java.security.Principal</return-type>
<method-signature>getPeerPrincipal()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultHostnameVerifier</method-name>
<return-type>javax.net.ssl.HostnameVerifier</return-type>
<method-signature>getDefaultHostnameVerifier()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostnameVerifier</method-name>
<return-type>javax.net.ssl.HostnameVerifier</return-type>
<method-signature>getHostnameVerifier()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultSSLSocketFactory</method-name>
<return-type>javax.net.ssl.SSLSocketFactory</return-type>
<method-signature>getDefaultSSLSocketFactory()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSSLSocketFactory</method-name>
<return-type>javax.net.ssl.SSLSocketFactory</return-type>
<method-signature>getSSLSocketFactory()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.KeyManagerFactory">
<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDefaultAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.KeyManagerFactory</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.KeyManagerFactory</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.KeyManagerFactory</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getKeyManagers</method-name>
<return-type>javax.net.ssl.KeyManager[]</return-type>
<method-signature>getKeyManagers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLContext">
<source>
<method-name>getProtocol</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getProtocol()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefault</method-name>
<return-type>javax.net.ssl.SSLContext</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.SSLContext</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.SSLContext</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.SSLContext</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>createSSLEngine</method-name>
<return-type>javax.net.ssl.SSLEngine</return-type>
<method-signature>createSSLEngine()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>createSSLEngine</method-name>
<return-type>javax.net.ssl.SSLEngine</return-type>
<method-signature>createSSLEngine(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>getDefaultSSLParameters</method-name>
<return-type>javax.net.ssl.SSLParameters</return-type>
<method-signature>getDefaultSSLParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSupportedSSLParameters</method-name>
<return-type>javax.net.ssl.SSLParameters</return-type>
<method-signature>getSupportedSSLParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getServerSocketFactory</method-name>
<return-type>javax.net.ssl.SSLServerSocketFactory</return-type>
<method-signature>getServerSocketFactory()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getClientSessionContext</method-name>
<return-type>javax.net.ssl.SSLSessionContext</return-type>
<method-signature>getClientSessionContext()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getServerSessionContext</method-name>
<return-type>javax.net.ssl.SSLSessionContext</return-type>
<method-signature>getServerSessionContext()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSocketFactory</method-name>
<return-type>javax.net.ssl.SSLSocketFactory</return-type>
<method-signature>getSocketFactory()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLContextSpi">
<source>
<method-name>engineGetDefaultSSLParameters</method-name>
<return-type>javax.net.ssl.SSLParameters</return-type>
<method-signature>engineGetDefaultSSLParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>engineGetSupportedSSLParameters</method-name>
<return-type>javax.net.ssl.SSLParameters</return-type>
<method-signature>engineGetSupportedSSLParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLEngine">
<source>
<method-name>getPeerPort</method-name>
<return-type>int</return-type>
<method-signature>getPeerPort()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPeerHost</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPeerHost()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>unwrap</method-name>
<return-type>javax.net.ssl.SSLEngineResult</return-type>
<method-signature>unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.ByteBuffer</parameter-type>
</source>

<source>
<method-name>unwrap</method-name>
<return-type>javax.net.ssl.SSLEngineResult</return-type>
<method-signature>unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.ByteBuffer[]</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>javax.net.ssl.SSLEngineResult</return-type>
<method-signature>wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer,java.nio.ByteBuffer</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>javax.net.ssl.SSLEngineResult</return-type>
<method-signature>wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.nio.ByteBuffer[],java.nio.ByteBuffer</parameter-type>
</source>

<source>
<method-name>getSSLParameters</method-name>
<return-type>javax.net.ssl.SSLParameters</return-type>
<method-signature>getSSLParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHandshakeSession</method-name>
<return-type>javax.net.ssl.SSLSession</return-type>
<method-signature>getHandshakeSession()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLEngineResulte&#36;HandshakeStatus">
<source>
<method-name>valueOf</method-name>
<return-type>javax.net.ssl.SSLEngineResulte&#36;HandshakeStatus</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>javax.net.ssl.SSLEngineResulte&#36;HandshakeStatus[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLEngineResulte&#36;Status">
<source>
<method-name>valueOf</method-name>
<return-type>javax.net.ssl.SSLEngineResulte&#36;Status</return-type>
<method-signature>valueOf(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>values</method-name>
<return-type>javax.net.ssl.SSLEngineResulte&#36;Status[]</return-type>
<method-signature>values()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLEngineResult">
<source>
<method-name>bytesConsumed</method-name>
<return-type>int</return-type>
<method-signature>bytesConsumed()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>bytesProduced</method-name>
<return-type>int</return-type>
<method-signature>bytesProduced()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHandshakeStatus</method-name>
<return-type>javax.net.ssl.SSLEngineResulte&#36;HandshakeStatus</return-type>
<method-signature>getHandshakeStatus()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getStatus</method-name>
<return-type>javax.net.ssl.SSLEngineResulte&#36;Status</return-type>
<method-signature>getStatus()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLParameters">
<source>
<method-name>getEndpointIdentificationAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getEndpointIdentificationAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCipherSuites</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getCipherSuites()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProtocols</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getProtocols()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getAlgorithmConstraints</method-name>
<return-type>java.security.AlgorithmConstraints</return-type>
<method-signature>getAlgorithmConstraints()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSNIMatchers</method-name>
<return-type>java.util.Collection</return-type>
<method-signature>getSNIMatchers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getServerNames</method-name>
<return-type>java.util.List</return-type>
<method-signature>getServerNames()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLServerSocketFactory">
<source>
<method-name>getDefault</method-name>
<return-type>javax.net.ServerSocketFactory</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLSessionBindingEvent">
<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSession</method-name>
<return-type>javax.net.ssl.SSLSession</return-type>
<method-signature>getSession()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLSocket">
<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSSLParameters</method-name>
<return-type>javax.net.ssl.SSLParameters</return-type>
<method-signature>getSSLParameters()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHandshakeSession</method-name>
<return-type>javax.net.ssl.SSLSession</return-type>
<method-signature>getHandshakeSession()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.SSLSocketFactory">
<source>
<method-name>getDefault</method-name>
<return-type>javax.net.SocketFactory</return-type>
<method-signature>getDefault()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.TrustManagerFactory">
<source>
<method-name>getAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDefaultAlgorithm</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getDefaultAlgorithm()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getProvider</method-name>
<return-type>java.security.Provider</return-type>
<method-signature>getProvider()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.TrustManagerFactory</return-type>
<method-signature>getInstance(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.TrustManagerFactory</return-type>
<method-signature>getInstance(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.net.ssl.TrustManagerFactory</return-type>
<method-signature>getInstance(java.lang.String,java.security.Provider)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.security.Provider</parameter-type>
</source>

<source>
<method-name>getTrustManagers</method-name>
<return-type>javax.net.ssl.TrustManager[]</return-type>
<method-signature>getTrustManagers()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.net.ssl.X509ExtendedKeyManager">
<source>
<method-name>chooseEngineClientAlias</method-name>
<return-type>java.lang.String</return-type>
<method-signature>chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine</parameter-type>
</source>

<source>
<method-name>chooseEngineServerAlias</method-name>
<return-type>java.lang.String</return-type>
<method-signature>chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine</parameter-type>
</source>

</class>
<class class-name="javax.security.auth.Subject">
<source>
<method-name>doAs</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doAs(javax.security.auth.Subject,java.security.PrivilegedAction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>javax.security.auth.Subject,java.security.PrivilegedAction</parameter-type>
</source>

<source>
<method-name>doAs</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doAs(javax.security.auth.Subject,java.security.PrivilegedExceptionAction)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>javax.security.auth.Subject,java.security.PrivilegedExceptionAction</parameter-type>
</source>

<source>
<method-name>doAsPrivileged</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext</parameter-type>
</source>

<source>
<method-name>doAsPrivileged</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrincipals</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getPrincipals()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrincipals</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getPrincipals(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrivateCredentials</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getPrivateCredentials()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrivateCredentials</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getPrivateCredentials(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublicCredentials</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getPublicCredentials()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublicCredentials</method-name>
<return-type>java.util.Set</return-type>
<method-signature>getPublicCredentials(java.lang.Class)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSubject</method-name>
<return-type>javax.security.auth.Subject</return-type>
<method-signature>getSubject(java.security.AccessControlContext)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.security.auth.callback.PasswordCallback">
<source>
<method-name>getPassword</method-name>
<return-type>char[]</return-type>
<method-signature>getPassword()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrompt</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPrompt()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.security.auth.callback.UnsupportedCallbackException">
<source>
<method-name>getCallback</method-name>
<return-type>javax.security.auth.callback.Callback</return-type>
<method-signature>getCallback()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.security.auth.x500.X500Principal">
<source>
<method-name>getEncoded</method-name>
<return-type>byte[]</return-type>
<method-signature>getEncoded()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getName(java.lang.String,java.util.Map)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.util.Map</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.security.cert.Certificate">
<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.security.cert.X509Certificate">
<source>
<method-name>getInstance</method-name>
<return-type>javax.security.cert.X509Certificate</return-type>
<method-signature>getInstance(byte[])</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getInstance</method-name>
<return-type>javax.security.cert.X509Certificate</return-type>
<method-signature>getInstance(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.xml.parsers.DocumentBuilder">
<source>
<method-name>getSchema</method-name>
<return-type>javax.xml.validation.Schema</return-type>
<method-signature>getSchema()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>org.w3c.dom.Document</return-type>
<method-signature>parse(java.io.File)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>org.w3c.dom.Document</return-type>
<method-signature>parse(java.io.InputStream)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>org.w3c.dom.Document</return-type>
<method-signature>parse(java.io.InputStream,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.io.InputStream,java.lang.String</parameter-type>
</source>

<source>
<method-name>parse</method-name>
<return-type>org.w3c.dom.Document</return-type>
<method-signature>parse(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.xml.parsers.DocumentBuilderFactory">
<source>
<method-name>newInstance</method-name>
<return-type>javax.xml.parsers.DocumentBuilderFactory</return-type>
<method-signature>newInstance()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>newInstance</method-name>
<return-type>javax.xml.parsers.DocumentBuilderFactory</return-type>
<method-signature>newInstance(java.lang.String,java.lang.ClassLoader)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.ClassLoader</parameter-type>
</source>

<source>
<method-name>getSchema</method-name>
<return-type>javax.xml.validation.Schema</return-type>
<method-signature>getSchema()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.xml.parsers.FactoryConfigurationError">
<source>
<method-name>getException</method-name>
<return-type>java.lang.Exception</return-type>
<method-signature>getException()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.xml.validation.Validator">
<source>
<method-name>getProperty</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="javax.xml.validation.ValidatorHandler">
<source>
<method-name>getProperty</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.apache.http.conn.ssl.AbstractVerifier">
<source>
<method-name>getCNs</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getCNs(java.security.cert.X509Certificate)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDNSSubjectAlts</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>getDNSSubjectAlts(java.security.cert.X509Certificate)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.apache.http.conn.ssl.SSLSocketFactory">
<source>
<method-name>connectSocket</method-name>
<return-type>java.net.Socket</return-type>
<method-signature>connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)</method-signature>
<parameter-number>6</parameter-number>
<parameter-type>java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams</parameter-type>
</source>

<source>
<method-name>createSocket</method-name>
<return-type>java.net.Socket</return-type>
<method-signature>createSocket()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>createSocket</method-name>
<return-type>java.net.Socket</return-type>
<method-signature>createSocket(java.net.Socket,java.lang.String,int,boolean)</method-signature>
<parameter-number>4</parameter-number>
<parameter-type>java.net.Socket,java.lang.String,int,boolean</parameter-type>
</source>

<source>
<method-name>getSocketFactory</method-name>
<return-type>org.apache.http.conn.ssl.SSLSocketFactory</return-type>
<method-signature>getSocketFactory()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getHostnameVerifier</method-name>
<return-type>org.apache.http.conn.ssl.X509HostnameVerifier</return-type>
<method-signature>getHostnameVerifier()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.json.JSONArray">
<source>
<method-name>getDouble</method-name>
<return-type>double</return-type>
<method-signature>getDouble(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optDouble</method-name>
<return-type>double</return-type>
<method-signature>optDouble(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optDouble</method-name>
<return-type>double</return-type>
<method-signature>optDouble(int,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,double</parameter-type>
</source>

<source>
<method-name>getInt</method-name>
<return-type>int</return-type>
<method-signature>getInt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>hashCode</method-name>
<return-type>int</return-type>
<method-signature>hashCode()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>length</method-name>
<return-type>int</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optInt</method-name>
<return-type>int</return-type>
<method-signature>optInt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optInt</method-name>
<return-type>int</return-type>
<method-signature>optInt(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>opt</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>opt(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>join</method-name>
<return-type>java.lang.String</return-type>
<method-signature>join(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>optString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>optString(int,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.String</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optLong</method-name>
<return-type>long</return-type>
<method-signature>optLong(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optLong</method-name>
<return-type>long</return-type>
<method-signature>optLong(int,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,long</parameter-type>
</source>

<source>
<method-name>getJSONArray</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>getJSONArray(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optJSONArray</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>optJSONArray(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(boolean)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(double)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(int,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,boolean</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(int,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,double</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(int,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(int,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,java.lang.Object</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(int,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>int,long</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>put(long)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getJSONObject</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>getJSONObject(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optJSONObject</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>optJSONObject(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toJSONObject</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>toJSONObject(org.json.JSONArray)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.json.JSONObject">
<source>
<method-name>getDouble</method-name>
<return-type>double</return-type>
<method-signature>getDouble(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optDouble</method-name>
<return-type>double</return-type>
<method-signature>optDouble(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optDouble</method-name>
<return-type>double</return-type>
<method-signature>optDouble(java.lang.String,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,double</parameter-type>
</source>

<source>
<method-name>getInt</method-name>
<return-type>int</return-type>
<method-signature>getInt(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>length</method-name>
<return-type>int</return-type>
<method-signature>length()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>get</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>get(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>opt</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>opt(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>remove</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>remove(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>wrap</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>wrap(java.lang.Object)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getString(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>numberToString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>numberToString(java.lang.Number)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>optString(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>optString(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>quote</method-name>
<return-type>java.lang.String</return-type>
<method-signature>quote(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>keys</method-name>
<return-type>java.util.Iterator</return-type>
<method-signature>keys()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLong</method-name>
<return-type>long</return-type>
<method-signature>getLong(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optLong</method-name>
<return-type>long</return-type>
<method-signature>optLong(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optLong</method-name>
<return-type>long</return-type>
<method-signature>optLong(java.lang.String,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,long</parameter-type>
</source>

<source>
<method-name>getJSONArray</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>getJSONArray(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>names</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>names()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optJSONArray</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>optJSONArray(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toJSONArray</method-name>
<return-type>org.json.JSONArray</return-type>
<method-signature>toJSONArray(org.json.JSONArray)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>accumulate</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>accumulate(java.lang.String,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object</parameter-type>
</source>

<source>
<method-name>getJSONObject</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>getJSONObject(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>optJSONObject</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>optJSONObject(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>put(java.lang.String,boolean)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,boolean</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>put(java.lang.String,double)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,double</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>put(java.lang.String,int)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,int</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>put(java.lang.String,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object</parameter-type>
</source>

<source>
<method-name>put</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>put(java.lang.String,long)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,long</parameter-type>
</source>

<source>
<method-name>putOpt</method-name>
<return-type>org.json.JSONObject</return-type>
<method-signature>putOpt(java.lang.String,java.lang.Object)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.Object</parameter-type>
</source>

</class>
<class class-name="org.json.JSONTokener">
<source>
<method-name>next</method-name>
<return-type>char</return-type>
<method-signature>next()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>next</method-name>
<return-type>char</return-type>
<method-signature>next(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextClean</method-name>
<return-type>char</return-type>
<method-signature>nextClean()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>skipTo</method-name>
<return-type>char</return-type>
<method-signature>skipTo(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextValue</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>nextValue()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>next</method-name>
<return-type>java.lang.String</return-type>
<method-signature>next(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>nextString(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextTo</method-name>
<return-type>java.lang.String</return-type>
<method-signature>nextTo(char)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>nextTo</method-name>
<return-type>java.lang.String</return-type>
<method-signature>nextTo(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>syntaxError</method-name>
<return-type>org.json.JSONException</return-type>
<method-signature>syntaxError(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.xml.sax.InputSource">
<source>
<method-name>getByteStream</method-name>
<return-type>java.io.InputStream</return-type>
<method-signature>getByteStream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getCharacterStream</method-name>
<return-type>java.io.Reader</return-type>
<method-signature>getCharacterStream()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEncoding</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getEncoding()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublicId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPublicId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSystemId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSystemId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.xml.sax.SAXException">
<source>
<method-name>getException</method-name>
<return-type>java.lang.Exception</return-type>
<method-signature>getException()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getMessage</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getMessage()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>toString</method-name>
<return-type>java.lang.String</return-type>
<method-signature>toString()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.xml.sax.SAXParseException">
<source>
<method-name>getColumnNumber</method-name>
<return-type>int</return-type>
<method-signature>getColumnNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLineNumber</method-name>
<return-type>int</return-type>
<method-signature>getLineNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublicId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPublicId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSystemId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSystemId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.xml.sax.helpers.AttributesImpl">
<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getIndex</method-name>
<return-type>int</return-type>
<method-signature>getIndex(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getLength</method-name>
<return-type>int</return-type>
<method-signature>getLength()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLocalName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getLocalName(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getQName</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getQName(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getType</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getType(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

<source>
<method-name>getURI</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getURI(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getValue(int)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getValue(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getValue</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getValue(java.lang.String,java.lang.String)</method-signature>
<parameter-number>2</parameter-number>
<parameter-type>java.lang.String,java.lang.String</parameter-type>
</source>

</class>
<class class-name="org.xml.sax.helpers.LocatorImpl">
<source>
<method-name>getColumnNumber</method-name>
<return-type>int</return-type>
<method-signature>getColumnNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLineNumber</method-name>
<return-type>int</return-type>
<method-signature>getLineNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPublicId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPublicId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getSystemId</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getSystemId()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.xml.sax.helpers.NamespaceSupport">
<source>
<method-name>getPrefix</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getPrefix(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getURI</method-name>
<return-type>java.lang.String</return-type>
<method-signature>getURI(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>processName</method-name>
<return-type>java.lang.String[]</return-type>
<method-signature>processName(java.lang.String,java.lang.String[],boolean)</method-signature>
<parameter-number>3</parameter-number>
<parameter-type>java.lang.String,java.lang.String[],boolean</parameter-type>
</source>

<source>
<method-name>getDeclaredPrefixes</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getDeclaredPrefixes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrefixes</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getPrefixes()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getPrefixes</method-name>
<return-type>java.util.Enumeration</return-type>
<method-signature>getPrefixes(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.xml.sax.helpers.ParserAdapter">
<source>
<method-name>getProperty</method-name>
<return-type>java.lang.Object</return-type>
<method-signature>getProperty(java.lang.String)</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getContentHandler</method-name>
<return-type>org.xml.sax.ContentHandler</return-type>
<method-signature>getContentHandler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDTDHandler</method-name>
<return-type>org.xml.sax.DTDHandler</return-type>
<method-signature>getDTDHandler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getEntityResolver</method-name>
<return-type>org.xml.sax.EntityResolver</return-type>
<method-signature>getEntityResolver()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getErrorHandler</method-name>
<return-type>org.xml.sax.ErrorHandler</return-type>
<method-signature>getErrorHandler()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
<class class-name="org.xmlpull.v1.XmlPullParserException">
<source>
<method-name>getColumnNumber</method-name>
<return-type>int</return-type>
<method-signature>getColumnNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getLineNumber</method-name>
<return-type>int</return-type>
<method-signature>getLineNumber()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

<source>
<method-name>getDetail</method-name>
<return-type>java.lang.Throwable</return-type>
<method-signature>getDetail()</method-signature>
<parameter-number>0</parameter-number>
<parameter-type>void</parameter-type>
</source>

</class>
</untrusted-java-sources>
